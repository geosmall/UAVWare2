ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"uvos_usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UVOS_USART_validate,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	UVOS_USART_validate:
  26              	.LVL0:
  27              	.LFB1372:
  28              		.file 1 "flight/uvos/stm32f4xx/uvos_usart.c"
   1:flight/uvos/stm32f4xx/uvos_usart.c **** #include "uvos.h"
   2:flight/uvos/stm32f4xx/uvos_usart.c **** 
   3:flight/uvos/stm32f4xx/uvos_usart.c **** #ifdef UVOS_INCLUDE_USART
   4:flight/uvos/stm32f4xx/uvos_usart.c **** 
   5:flight/uvos/stm32f4xx/uvos_usart.c **** #include <uvos_usart_priv.h>
   6:flight/uvos/stm32f4xx/uvos_usart.c **** 
   7:flight/uvos/stm32f4xx/uvos_usart.c **** /* Provide a COM driver */
   8:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_ChangeBaud( uint32_t usart_id, uint32_t baud );
   9:flight/uvos/stm32f4xx/uvos_usart.c **** // static void UVOS_USART_SetCtrlLine( uint32_t usart_id, uint32_t mask, uint32_t state );
  10:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_RegisterRxCallback( uint32_t usart_id, uvos_com_callback rx_in_cb, uint32_t 
  11:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_RegisterTxCallback( uint32_t usart_id, uvos_com_callback tx_out_cb, uint32_t
  12:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_TxStart( uint32_t usart_id, uint16_t tx_bytes_avail );
  13:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_RxStart( uint32_t usart_id, uint16_t rx_bytes_avail );
  14:flight/uvos/stm32f4xx/uvos_usart.c **** 
  15:flight/uvos/stm32f4xx/uvos_usart.c **** const struct uvos_com_driver uvos_usart_com_driver = {
  16:flight/uvos/stm32f4xx/uvos_usart.c ****   .set_baud      = UVOS_USART_ChangeBaud,
  17:flight/uvos/stm32f4xx/uvos_usart.c ****   // .set_ctrl_line = UVOS_USART_SetCtrlLine,
  18:flight/uvos/stm32f4xx/uvos_usart.c ****   .tx_start      = UVOS_USART_TxStart,
  19:flight/uvos/stm32f4xx/uvos_usart.c ****   .rx_start      = UVOS_USART_RxStart,
  20:flight/uvos/stm32f4xx/uvos_usart.c ****   .bind_tx_cb    = UVOS_USART_RegisterTxCallback,
  21:flight/uvos/stm32f4xx/uvos_usart.c ****   .bind_rx_cb    = UVOS_USART_RegisterRxCallback,
  22:flight/uvos/stm32f4xx/uvos_usart.c **** };
  23:flight/uvos/stm32f4xx/uvos_usart.c **** 
  24:flight/uvos/stm32f4xx/uvos_usart.c **** enum uvos_usart_dev_magic {
  25:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_USART_DEV_MAGIC = 0x4152834A,
  26:flight/uvos/stm32f4xx/uvos_usart.c **** };
  27:flight/uvos/stm32f4xx/uvos_usart.c **** 
  28:flight/uvos/stm32f4xx/uvos_usart.c **** struct uvos_usart_dev {
  29:flight/uvos/stm32f4xx/uvos_usart.c ****   enum uvos_usart_dev_magic   magic;
  30:flight/uvos/stm32f4xx/uvos_usart.c ****   const struct uvos_usart_cfg * cfg;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 2


  31:flight/uvos/stm32f4xx/uvos_usart.c **** 
  32:flight/uvos/stm32f4xx/uvos_usart.c ****   uvos_com_callback rx_in_cb;
  33:flight/uvos/stm32f4xx/uvos_usart.c ****   uint32_t rx_in_context;
  34:flight/uvos/stm32f4xx/uvos_usart.c ****   uvos_com_callback tx_out_cb;
  35:flight/uvos/stm32f4xx/uvos_usart.c ****   uint32_t tx_out_context;
  36:flight/uvos/stm32f4xx/uvos_usart.c **** };
  37:flight/uvos/stm32f4xx/uvos_usart.c **** 
  38:flight/uvos/stm32f4xx/uvos_usart.c **** static bool UVOS_USART_validate( struct uvos_usart_dev * usart_dev )
  39:flight/uvos/stm32f4xx/uvos_usart.c **** {
  29              		.loc 1 39 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  40:flight/uvos/stm32f4xx/uvos_usart.c ****   return usart_dev->magic == UVOS_USART_DEV_MAGIC;
  34              		.loc 1 40 3 view .LVU1
  35              		.loc 1 40 19 is_stmt 0 view .LVU2
  36 0000 0068     		ldr	r0, [r0]
  37              	.LVL1:
  41:flight/uvos/stm32f4xx/uvos_usart.c **** }
  38              		.loc 1 41 1 view .LVU3
  39 0002 034B     		ldr	r3, .L2
  40 0004 9842     		cmp	r0, r3
  41 0006 14BF     		ite	ne
  42 0008 0020     		movne	r0, #0
  43 000a 0120     		moveq	r0, #1
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e 00BF     		.align	2
  47              	.L2:
  48 0010 4A835241 		.word	1095926602
  49              		.cfi_endproc
  50              	.LFE1372:
  52              		.section	.text.UVOS_USART_RxStart,"ax",%progbits
  53              		.align	1
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  58              	UVOS_USART_RxStart:
  59              	.LVL2:
  60              	.LFB1381:
  42:flight/uvos/stm32f4xx/uvos_usart.c **** 
  43:flight/uvos/stm32f4xx/uvos_usart.c **** #if defined(UVOS_INCLUDE_FREERTOS)
  44:flight/uvos/stm32f4xx/uvos_usart.c **** static struct uvos_usart_dev * UVOS_USART_alloc( void )
  45:flight/uvos/stm32f4xx/uvos_usart.c **** {
  46:flight/uvos/stm32f4xx/uvos_usart.c ****   struct uvos_usart_dev * usart_dev;
  47:flight/uvos/stm32f4xx/uvos_usart.c **** 
  48:flight/uvos/stm32f4xx/uvos_usart.c ****   usart_dev = ( struct uvos_usart_dev * )uvos_malloc( sizeof( struct uvos_usart_dev ) );
  49:flight/uvos/stm32f4xx/uvos_usart.c ****   if ( !usart_dev ) {
  50:flight/uvos/stm32f4xx/uvos_usart.c ****     return NULL;
  51:flight/uvos/stm32f4xx/uvos_usart.c ****   }
  52:flight/uvos/stm32f4xx/uvos_usart.c **** 
  53:flight/uvos/stm32f4xx/uvos_usart.c ****   memset( usart_dev, 0, sizeof( struct uvos_usart_dev ) );
  54:flight/uvos/stm32f4xx/uvos_usart.c ****   usart_dev->magic = UVOS_USART_DEV_MAGIC;
  55:flight/uvos/stm32f4xx/uvos_usart.c ****   return usart_dev;
  56:flight/uvos/stm32f4xx/uvos_usart.c **** }
  57:flight/uvos/stm32f4xx/uvos_usart.c **** #else
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 3


  58:flight/uvos/stm32f4xx/uvos_usart.c **** static struct uvos_usart_dev uvos_usart_devs[UVOS_USART_MAX_DEVS];
  59:flight/uvos/stm32f4xx/uvos_usart.c **** static uint8_t uvos_usart_num_devs;
  60:flight/uvos/stm32f4xx/uvos_usart.c **** static struct uvos_usart_dev * UVOS_USART_alloc( void )
  61:flight/uvos/stm32f4xx/uvos_usart.c **** {
  62:flight/uvos/stm32f4xx/uvos_usart.c ****   struct uvos_usart_dev * usart_dev;
  63:flight/uvos/stm32f4xx/uvos_usart.c **** 
  64:flight/uvos/stm32f4xx/uvos_usart.c ****   if ( uvos_usart_num_devs >= UVOS_USART_MAX_DEVS ) {
  65:flight/uvos/stm32f4xx/uvos_usart.c ****     return NULL;
  66:flight/uvos/stm32f4xx/uvos_usart.c ****   }
  67:flight/uvos/stm32f4xx/uvos_usart.c **** 
  68:flight/uvos/stm32f4xx/uvos_usart.c ****   usart_dev = &uvos_usart_devs[uvos_usart_num_devs++];
  69:flight/uvos/stm32f4xx/uvos_usart.c **** 
  70:flight/uvos/stm32f4xx/uvos_usart.c ****   memset( usart_dev, 0, sizeof( struct uvos_usart_dev ) );
  71:flight/uvos/stm32f4xx/uvos_usart.c ****   usart_dev->magic = UVOS_USART_DEV_MAGIC;
  72:flight/uvos/stm32f4xx/uvos_usart.c **** 
  73:flight/uvos/stm32f4xx/uvos_usart.c ****   return usart_dev;
  74:flight/uvos/stm32f4xx/uvos_usart.c **** }
  75:flight/uvos/stm32f4xx/uvos_usart.c **** #endif /* if defined(UVOS_INCLUDE_FREERTOS) */
  76:flight/uvos/stm32f4xx/uvos_usart.c **** 
  77:flight/uvos/stm32f4xx/uvos_usart.c **** /* Bind Interrupt Handlers
  78:flight/uvos/stm32f4xx/uvos_usart.c ****  *
  79:flight/uvos/stm32f4xx/uvos_usart.c ****  * Map all valid USART IRQs to the common interrupt handler
  80:flight/uvos/stm32f4xx/uvos_usart.c ****  * and provide storage for a 32-bit device id IRQ to map
  81:flight/uvos/stm32f4xx/uvos_usart.c ****  * each physical IRQ to a specific registered device instance.
  82:flight/uvos/stm32f4xx/uvos_usart.c ****  */
  83:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_generic_irq_handler( uint32_t usart_id );
  84:flight/uvos/stm32f4xx/uvos_usart.c **** 
  85:flight/uvos/stm32f4xx/uvos_usart.c **** static uint32_t UVOS_USART_1_id;
  86:flight/uvos/stm32f4xx/uvos_usart.c **** void USART1_IRQHandler( void ) __attribute__( ( alias( "UVOS_USART_1_irq_handler" ) ) );
  87:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_1_irq_handler( void )
  88:flight/uvos/stm32f4xx/uvos_usart.c **** {
  89:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_USART_generic_irq_handler( UVOS_USART_1_id );
  90:flight/uvos/stm32f4xx/uvos_usart.c **** }
  91:flight/uvos/stm32f4xx/uvos_usart.c **** 
  92:flight/uvos/stm32f4xx/uvos_usart.c **** static uint32_t UVOS_USART_2_id;
  93:flight/uvos/stm32f4xx/uvos_usart.c **** void USART2_IRQHandler( void ) __attribute__( ( alias( "UVOS_USART_2_irq_handler" ) ) );
  94:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_2_irq_handler( void )
  95:flight/uvos/stm32f4xx/uvos_usart.c **** {
  96:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_USART_generic_irq_handler( UVOS_USART_2_id );
  97:flight/uvos/stm32f4xx/uvos_usart.c **** }
  98:flight/uvos/stm32f4xx/uvos_usart.c **** 
  99:flight/uvos/stm32f4xx/uvos_usart.c **** static uint32_t UVOS_USART_3_id;
 100:flight/uvos/stm32f4xx/uvos_usart.c **** void USART3_IRQHandler( void ) __attribute__( ( alias( "UVOS_USART_3_irq_handler" ) ) );
 101:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_3_irq_handler( void )
 102:flight/uvos/stm32f4xx/uvos_usart.c **** {
 103:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_USART_generic_irq_handler( UVOS_USART_3_id );
 104:flight/uvos/stm32f4xx/uvos_usart.c **** }
 105:flight/uvos/stm32f4xx/uvos_usart.c **** 
 106:flight/uvos/stm32f4xx/uvos_usart.c **** static uint32_t UVOS_USART_4_id;
 107:flight/uvos/stm32f4xx/uvos_usart.c **** void USART4_IRQHandler( void ) __attribute__( ( alias( "UVOS_USART_4_irq_handler" ) ) );
 108:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_4_irq_handler( void )
 109:flight/uvos/stm32f4xx/uvos_usart.c **** {
 110:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_USART_generic_irq_handler( UVOS_USART_4_id );
 111:flight/uvos/stm32f4xx/uvos_usart.c **** }
 112:flight/uvos/stm32f4xx/uvos_usart.c **** 
 113:flight/uvos/stm32f4xx/uvos_usart.c **** static uint32_t UVOS_USART_5_id;
 114:flight/uvos/stm32f4xx/uvos_usart.c **** void USART5_IRQHandler( void ) __attribute__( ( alias( "UVOS_USART_5_irq_handler" ) ) );
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 4


 115:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_5_irq_handler( void )
 116:flight/uvos/stm32f4xx/uvos_usart.c **** {
 117:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_USART_generic_irq_handler( UVOS_USART_5_id );
 118:flight/uvos/stm32f4xx/uvos_usart.c **** }
 119:flight/uvos/stm32f4xx/uvos_usart.c **** 
 120:flight/uvos/stm32f4xx/uvos_usart.c **** static uint32_t UVOS_USART_6_id;
 121:flight/uvos/stm32f4xx/uvos_usart.c **** void USART6_IRQHandler( void ) __attribute__( ( alias( "UVOS_USART_6_irq_handler" ) ) );
 122:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_6_irq_handler( void )
 123:flight/uvos/stm32f4xx/uvos_usart.c **** {
 124:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_USART_generic_irq_handler( UVOS_USART_6_id );
 125:flight/uvos/stm32f4xx/uvos_usart.c **** }
 126:flight/uvos/stm32f4xx/uvos_usart.c **** 
 127:flight/uvos/stm32f4xx/uvos_usart.c **** /**
 128:flight/uvos/stm32f4xx/uvos_usart.c ****  * Initialise a single USART device
 129:flight/uvos/stm32f4xx/uvos_usart.c ****  */
 130:flight/uvos/stm32f4xx/uvos_usart.c **** int32_t UVOS_USART_Init( uint32_t * usart_id, const struct uvos_usart_cfg * cfg )
 131:flight/uvos/stm32f4xx/uvos_usart.c **** {
 132:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_DEBUG_Assert( usart_id );
 133:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_DEBUG_Assert( cfg );
 134:flight/uvos/stm32f4xx/uvos_usart.c **** 
 135:flight/uvos/stm32f4xx/uvos_usart.c ****   struct uvos_usart_dev * usart_dev;
 136:flight/uvos/stm32f4xx/uvos_usart.c **** 
 137:flight/uvos/stm32f4xx/uvos_usart.c ****   usart_dev = ( struct uvos_usart_dev * )UVOS_USART_alloc();
 138:flight/uvos/stm32f4xx/uvos_usart.c ****   if ( !usart_dev ) {
 139:flight/uvos/stm32f4xx/uvos_usart.c ****     goto out_fail;
 140:flight/uvos/stm32f4xx/uvos_usart.c ****   }
 141:flight/uvos/stm32f4xx/uvos_usart.c **** 
 142:flight/uvos/stm32f4xx/uvos_usart.c ****   /* Bind the configuration to the device instance */
 143:flight/uvos/stm32f4xx/uvos_usart.c ****   usart_dev->cfg = cfg;
 144:flight/uvos/stm32f4xx/uvos_usart.c **** 
 145:flight/uvos/stm32f4xx/uvos_usart.c ****   /* Initialize the USART Rx and Tx pins */
 146:flight/uvos/stm32f4xx/uvos_usart.c ****   LL_GPIO_Init( usart_dev->cfg->rx.gpio, ( LL_GPIO_InitTypeDef * )&usart_dev->cfg->rx.init );
 147:flight/uvos/stm32f4xx/uvos_usart.c ****   LL_GPIO_Init( usart_dev->cfg->tx.gpio, ( LL_GPIO_InitTypeDef * )&usart_dev->cfg->tx.init );
 148:flight/uvos/stm32f4xx/uvos_usart.c **** 
 149:flight/uvos/stm32f4xx/uvos_usart.c ****   /* Configure the USART */
 150:flight/uvos/stm32f4xx/uvos_usart.c ****   LL_USART_Init( usart_dev->cfg->regs, ( LL_USART_InitTypeDef * )&usart_dev->cfg->init );
 151:flight/uvos/stm32f4xx/uvos_usart.c **** 
 152:flight/uvos/stm32f4xx/uvos_usart.c ****   *usart_id = ( uint32_t )usart_dev;
 153:flight/uvos/stm32f4xx/uvos_usart.c **** 
 154:flight/uvos/stm32f4xx/uvos_usart.c ****   /* Configure USART Interrupts */
 155:flight/uvos/stm32f4xx/uvos_usart.c ****   switch ( ( uint32_t )usart_dev->cfg->regs ) {
 156:flight/uvos/stm32f4xx/uvos_usart.c ****   case ( uint32_t )USART1:
 157:flight/uvos/stm32f4xx/uvos_usart.c ****     UVOS_USART_1_id = ( uint32_t )usart_dev;
 158:flight/uvos/stm32f4xx/uvos_usart.c ****     break;
 159:flight/uvos/stm32f4xx/uvos_usart.c ****   case ( uint32_t )USART2:
 160:flight/uvos/stm32f4xx/uvos_usart.c ****     UVOS_USART_2_id = ( uint32_t )usart_dev;
 161:flight/uvos/stm32f4xx/uvos_usart.c ****     break;
 162:flight/uvos/stm32f4xx/uvos_usart.c **** #if !defined(STM32F401xC) && !defined(STM32F401xE) && !defined(STM32F411xE)
 163:flight/uvos/stm32f4xx/uvos_usart.c ****   case ( uint32_t )USART3:
 164:flight/uvos/stm32f4xx/uvos_usart.c ****     UVOS_USART_3_id = ( uint32_t )usart_dev;
 165:flight/uvos/stm32f4xx/uvos_usart.c ****     break;
 166:flight/uvos/stm32f4xx/uvos_usart.c ****   case ( uint32_t )UART4:
 167:flight/uvos/stm32f4xx/uvos_usart.c ****     UVOS_USART_4_id = ( uint32_t )usart_dev;
 168:flight/uvos/stm32f4xx/uvos_usart.c ****     break;
 169:flight/uvos/stm32f4xx/uvos_usart.c ****   case ( uint32_t )UART5:
 170:flight/uvos/stm32f4xx/uvos_usart.c ****     UVOS_USART_5_id = ( uint32_t )usart_dev;
 171:flight/uvos/stm32f4xx/uvos_usart.c ****     break;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 5


 172:flight/uvos/stm32f4xx/uvos_usart.c **** #endif // !defined(STM32F401xC) && !defined(STM32F401xE) && !defined(STM32F411xE)
 173:flight/uvos/stm32f4xx/uvos_usart.c ****   case ( uint32_t )USART6:
 174:flight/uvos/stm32f4xx/uvos_usart.c ****     UVOS_USART_6_id = ( uint32_t )usart_dev;
 175:flight/uvos/stm32f4xx/uvos_usart.c ****     break;
 176:flight/uvos/stm32f4xx/uvos_usart.c ****   }
 177:flight/uvos/stm32f4xx/uvos_usart.c ****   NVIC_Init( ( NVIC_InitTypeDef * ) & ( usart_dev->cfg->irq.init ) );
 178:flight/uvos/stm32f4xx/uvos_usart.c ****   // USART_ITConfig( usart_dev->cfg->regs, USART_IT_RXNE, ENABLE );
 179:flight/uvos/stm32f4xx/uvos_usart.c ****   LL_USART_EnableIT_RXNE( usart_dev->cfg->regs );
 180:flight/uvos/stm32f4xx/uvos_usart.c ****   // USART_ITConfig( usart_dev->cfg->regs, USART_IT_TXE, ENABLE );
 181:flight/uvos/stm32f4xx/uvos_usart.c ****   LL_USART_EnableIT_TXE( usart_dev->cfg->regs );
 182:flight/uvos/stm32f4xx/uvos_usart.c **** 
 183:flight/uvos/stm32f4xx/uvos_usart.c ****   // FIXME XXX Clear / reset uart here - sends NUL char else
 184:flight/uvos/stm32f4xx/uvos_usart.c **** 
 185:flight/uvos/stm32f4xx/uvos_usart.c ****   /* Enable USART */
 186:flight/uvos/stm32f4xx/uvos_usart.c ****   // USART_Cmd( usart_dev->cfg->regs, ENABLE );
 187:flight/uvos/stm32f4xx/uvos_usart.c ****   LL_USART_Enable( usart_dev->cfg->regs );
 188:flight/uvos/stm32f4xx/uvos_usart.c **** 
 189:flight/uvos/stm32f4xx/uvos_usart.c ****   return 0;
 190:flight/uvos/stm32f4xx/uvos_usart.c **** 
 191:flight/uvos/stm32f4xx/uvos_usart.c **** out_fail:
 192:flight/uvos/stm32f4xx/uvos_usart.c ****   return -1;
 193:flight/uvos/stm32f4xx/uvos_usart.c **** }
 194:flight/uvos/stm32f4xx/uvos_usart.c **** 
 195:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_RxStart( uint32_t usart_id, __attribute__( ( unused ) ) uint16_t rx_bytes_av
 196:flight/uvos/stm32f4xx/uvos_usart.c **** {
  61              		.loc 1 196 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		.loc 1 196 1 is_stmt 0 view .LVU5
  66 0000 10B5     		push	{r4, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 8
  69              		.cfi_offset 4, -8
  70              		.cfi_offset 14, -4
  71 0002 0446     		mov	r4, r0
 197:flight/uvos/stm32f4xx/uvos_usart.c ****   struct uvos_usart_dev * usart_dev = ( struct uvos_usart_dev * )usart_id;
  72              		.loc 1 197 3 is_stmt 1 view .LVU6
  73              	.LVL3:
 198:flight/uvos/stm32f4xx/uvos_usart.c **** 
 199:flight/uvos/stm32f4xx/uvos_usart.c ****   bool valid = UVOS_USART_validate( usart_dev );
  74              		.loc 1 199 3 view .LVU7
  75              		.loc 1 199 16 is_stmt 0 view .LVU8
  76 0004 FFF7FEFF 		bl	UVOS_USART_validate
  77              	.LVL4:
 200:flight/uvos/stm32f4xx/uvos_usart.c **** 
 201:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_Assert( valid );
  78              		.loc 1 201 3 is_stmt 1 view .LVU9
  79 0008 00B9     		cbnz	r0, .L5
  80              	.L6:
  81              		.loc 1 201 3 discriminator 1 view .LVU10
  82              		.loc 1 201 3 discriminator 1 view .LVU11
  83              		.loc 1 201 3 discriminator 1 view .LVU12
  84 000a FEE7     		b	.L6
  85              	.L5:
  86              		.loc 1 201 23 discriminator 2 view .LVU13
 202:flight/uvos/stm32f4xx/uvos_usart.c **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 6


 203:flight/uvos/stm32f4xx/uvos_usart.c ****   // USART_ITConfig( usart_dev->cfg->regs, USART_IT_RXNE, ENABLE );
 204:flight/uvos/stm32f4xx/uvos_usart.c ****   LL_USART_EnableIT_RXNE( usart_dev->cfg->regs );
  87              		.loc 1 204 3 discriminator 2 view .LVU14
  88              		.loc 1 204 36 is_stmt 0 discriminator 2 view .LVU15
  89 000c 6368     		ldr	r3, [r4, #4]
  90              		.loc 1 204 3 discriminator 2 view .LVU16
  91 000e 1A68     		ldr	r2, [r3]
  92              	.LVL5:
  93              	.LBB63:
  94              	.LBI63:
  95              		.file 2 "./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h"
   1:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
   2:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ******************************************************************************
   3:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @file    stm32f4xx_ll_usart.h
   4:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @author  MCD Application Team
   5:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ******************************************************************************
   7:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @attention
   8:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *
   9:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * All rights reserved.</center></h2>
  11:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *
  12:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * the "License"; You may not use this file except in compliance with the
  14:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * License. You may obtain a copy of the License at:
  15:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *
  17:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ******************************************************************************
  18:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  19:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  20:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #ifndef __STM32F4xx_LL_USART_H
  22:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __STM32F4xx_LL_USART_H
  23:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  24:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #ifdef __cplusplus
  25:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** extern "C" {
  26:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #endif
  27:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  28:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  29:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #include "stm32f4xx.h"
  30:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  31:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @addtogroup STM32F4xx_LL_Driver
  32:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
  33:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  34:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  35:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (USART6) || defined (UART4)
  36:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  37:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL USART
  38:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
  39:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  40:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  41:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  42:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  43:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  44:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  45:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_Private_Constants USART Private Constants
  46:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 7


  47:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  48:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  49:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Defines used for the bit position in the register and perform offsets*/
  50:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define USART_POSITION_GTPR_GT                  USART_GTPR_GT_Pos
  51:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
  52:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
  53:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  54:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  55:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  56:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  57:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  58:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
  59:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  60:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
  61:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
  62:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  63:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  64:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  65:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  66:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  67:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  68:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
  69:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  70:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  71:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
  72:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  73:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  74:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** typedef struct
  75:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
  76:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  77:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  78:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  79:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  80:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  81:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
  82:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  83:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  84:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  85:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
  86:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
  87:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  88:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  89:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  90:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
  91:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
  92:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  93:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  94:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  95:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
  96:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
  97:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  98:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  99:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 100:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 101:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
 102:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 103:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 8


 104:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 105:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 106:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 107:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 108:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 109:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 110:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** } LL_USART_InitTypeDef;
 111:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 112:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 113:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 114:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 115:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** typedef struct
 116:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 117:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 118:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 119:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 120:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 121:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 122:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 123:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 124:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 125:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 126:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 127:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 128:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 129:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 130:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 131:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 132:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 133:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 134:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 135:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 136:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 137:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 138:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 139:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 140:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 141:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 142:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 143:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 144:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 145:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 146:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 147:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 148:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 149:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 150:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 151:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 152:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 153:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 154:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 155:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 156:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 157:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 158:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 159:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_PE                          USART_SR_PE                   /*!< Parity error fla
 160:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_FE                          USART_SR_FE                   /*!< Framing error fl
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 9


 161:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_NE                          USART_SR_NE                   /*!< Noise detected f
 162:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_ORE                         USART_SR_ORE                  /*!< Overrun error fl
 163:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_IDLE                        USART_SR_IDLE                 /*!< Idle line detect
 164:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_RXNE                        USART_SR_RXNE                 /*!< Read data regist
 165:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_TC                          USART_SR_TC                   /*!< Transmission com
 166:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_TXE                         USART_SR_TXE                  /*!< Transmit data re
 167:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_LBD                         USART_SR_LBD                  /*!< LIN break detect
 168:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_CTS                         USART_SR_CTS                  /*!< CTS flag */
 169:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 170:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 171:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 172:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 173:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 174:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 175:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 176:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 177:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 178:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 179:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 180:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 181:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 182:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 183:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 184:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 185:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 186:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 187:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 188:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 189:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 190:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 191:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 192:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 193:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 194:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 195:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 196:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 197:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 198:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 199:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 200:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 201:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 202:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 203:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 204:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 205:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 206:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 207:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 208:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 209:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 210:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 211:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 212:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 213:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 214:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 215:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 216:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 217:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 10


 218:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 219:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 220:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 221:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 222:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 223:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M             /*!< 9 bits word length : S
 224:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 225:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 226:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 227:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 228:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 229:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 230:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 231:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 232:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 233:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 234:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 235:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 236:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 237:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 238:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 239:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 240:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 241:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 242:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 243:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 244:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 245:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 246:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 247:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 248:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 249:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 250:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 251:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 252:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 253:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 254:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 255:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 256:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 257:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 258:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 259:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 260:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 261:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 262:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 263:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 264:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 265:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 266:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 267:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 268:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 269:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 270:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 271:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 272:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 273:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 274:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 11


 275:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 276:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 277:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 278:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 279:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 280:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 281:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 282:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 283:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 284:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 285:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 286:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 287:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 288:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 289:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 290:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 291:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 292:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 293:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 294:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 295:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 296:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 297:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 298:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 299:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 300:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 301:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 302:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 303:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 304:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 305:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 306:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 307:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 308:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 309:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 310:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 311:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 312:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 313:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 314:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 315:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 316:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 317:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 318:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 319:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 320:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 321:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 322:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 323:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 324:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 325:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 326:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 327:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 328:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 329:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 330:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Write a value in USART register
 331:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 12


 332:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __REG__ Register to be written
 333:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 334:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 335:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 336:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 337:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 338:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 339:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Read a value in USART register
 340:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 341:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __REG__ Register to be read
 342:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Register value
 343:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 344:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 345:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 346:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 347:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 348:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 349:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 350:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 351:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 352:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 353:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 354:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 355:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 356:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 357:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 358:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 359:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 360:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8_100(__PERIPHCLK__, __BAUDRATE__)      ((uint32_t)((((uint64_t)(__P
 361:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIVMANT_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)      (__LL_USART_DIV_SAMPLING8_10
 362:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIVFRAQ_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)      ((((__LL_USART_DIV_SAMPLING8
 363:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                                                          + 50) / 100)
 364:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* UART BRR = mantissa + overflow + fraction
 365:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****             = (UART DIVMANT << 4) + ((UART DIVFRAQ & 0xF8) << 1) + (UART DIVFRAQ & 0x07) */
 366:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)             (((__LL_USART_DIVMANT_SAM
 367:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                                                             ((__LL_USART_DIVFRAQ_SA
 368:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 369:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 370:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 371:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 372:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 373:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 374:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 375:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 376:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 377:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16_100(__PERIPHCLK__, __BAUDRATE__)     ((uint32_t)((((uint64_t)(__P
 378:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIVMANT_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)     (__LL_USART_DIV_SAMPLING16_1
 379:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIVFRAQ_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)     ((((__LL_USART_DIV_SAMPLING1
 380:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                                                          + 50) / 100)
 381:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* USART BRR = mantissa + overflow + fraction
 382:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****             = (USART DIVMANT << 4) + (USART DIVFRAQ & 0xF0) + (USART DIVFRAQ & 0x0F) */
 383:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)            (((__LL_USART_DIVMANT_SAM
 384:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                                                             (__LL_USART_DIVFRAQ_SAM
 385:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 386:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 387:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 388:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 13


 389:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 390:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 391:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 392:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 393:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 394:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 395:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 396:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 397:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 398:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 399:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 400:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 401:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 402:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 403:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 404:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 405:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 406:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  USART Enable
 407:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 408:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 409:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 410:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 411:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 412:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 413:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 414:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 415:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 416:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 417:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 418:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 419:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 420:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         flags, in the USARTx_SR are set to their default values.
 421:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 422:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 423:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 424:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 425:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 426:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 427:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 428:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 429:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 430:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 431:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 432:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 433:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 434:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 435:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 436:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 437:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 438:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE));
 439:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 440:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 441:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 442:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 443:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 444:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 445:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 14


 446:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 447:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 448:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 449:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RE);
 450:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 451:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 452:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 453:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Receiver Disable
 454:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 455:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 456:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 457:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 458:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 459:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 460:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 461:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 462:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 463:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 464:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Transmitter Enable
 465:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 466:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 467:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 468:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 469:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 470:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 471:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TE);
 472:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 473:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 474:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 475:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Transmitter Disable
 476:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 477:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 478:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 479:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 480:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 481:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 482:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 483:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 484:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 485:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 486:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 487:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         of Transmitter and Receiver
 488:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 489:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 490:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 491:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 492:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 493:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 494:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 495:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 496:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 497:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 498:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 499:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 500:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 501:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 502:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 15


 503:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 504:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 505:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 506:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 507:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 508:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 509:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 510:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 511:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 512:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 513:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 514:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
 515:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 516:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 517:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 518:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 519:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 520:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 521:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 522:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 523:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 524:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 525:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 526:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 527:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 528:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 529:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 530:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 531:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 532:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 533:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 534:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 535:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 536:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 537:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 538:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 539:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 540:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 541:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 542:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 543:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 544:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 545:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 546:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 547:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 548:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 549:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 550:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 551:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 552:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 553:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 554:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 555:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 556:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 557:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
 558:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 559:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 16


 560:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 561:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 562:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 563:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 564:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 565:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 566:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 567:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 568:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 569:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 570:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 571:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 572:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 573:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 574:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 575:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
 576:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 577:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 578:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 579:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 580:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 581:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 582:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          M             LL_USART_SetDataWidth
 583:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 584:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 585:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 586:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 587:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 588:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 589:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 590:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 591:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 592:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 593:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 594:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 595:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 596:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          M             LL_USART_GetDataWidth
 597:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 598:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 599:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 600:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 601:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 602:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
 603:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 604:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
 605:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 606:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 607:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 608:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
 609:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
 610:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 611:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
 612:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 613:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 614:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 615:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 616:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 17


 617:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 618:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
 619:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 620:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 621:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 622:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Oversampling mode
 623:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
 624:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 625:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 626:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 627:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 628:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 629:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
 630:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 631:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
 632:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 633:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 634:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 635:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
 636:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 637:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 638:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
 639:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 640:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
 641:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 642:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 643:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 644:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 645:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
 646:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 647:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
 648:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 649:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 650:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 651:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
 652:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
 653:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 654:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 655:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
 656:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 657:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 658:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 659:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 660:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 661:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
 662:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 663:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
 664:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 665:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 666:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 667:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
 668:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 669:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 670:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
 671:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 672:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
 673:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 18


 674:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 675:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 676:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 677:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
 678:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 679:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
 680:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 681:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 682:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 683:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
 684:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 685:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 686:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
 687:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 688:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 689:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 690:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 691:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 692:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
 693:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 694:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
 695:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 696:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 697:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 698:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
 699:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 700:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 701:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
 702:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 703:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 704:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 705:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 706:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 707:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 708:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
 709:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 710:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
 711:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 712:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 713:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 714:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
 715:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 716:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 717:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
 718:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 719:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 720:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 721:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 722:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 723:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
 724:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 725:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
 726:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 727:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 728:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 729:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
 730:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 19


 731:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 732:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 733:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
 734:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
 735:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
 736:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
 737:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
 738:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
 739:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 740:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
 741:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 742:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 743:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
 744:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 745:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 746:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
 747:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 748:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 749:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 750:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 751:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
 752:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 753:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
 754:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 755:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 756:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 757:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
 758:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 759:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 760:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
 761:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 762:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 763:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 764:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
 765:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 766:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
 767:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 768:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 769:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 770:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
 771:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 772:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 773:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
 774:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 775:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 776:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 777:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
 778:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 779:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
 780:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 781:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 782:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 783:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
 784:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 785:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 786:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
 787:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 20


 788:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 789:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 790:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
 791:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 792:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN));
 793:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 794:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 795:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 796:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set the length of the stop bits
 797:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
 798:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 799:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
 800:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 801:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 802:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 803:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 804:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 805:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 806:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
 807:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 808:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 809:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 810:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 811:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 812:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
 813:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
 814:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 815:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 816:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 817:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 818:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 819:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 820:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 821:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
 822:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 823:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
 824:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 825:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 826:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 827:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
 828:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 829:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
 830:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
 831:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
 832:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
 833:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
 834:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR1          M             LL_USART_ConfigCharacter\n
 835:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
 836:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 837:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 838:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 839:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 840:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 841:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 842:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 843:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 844:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 21


 845:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 846:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 847:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 848:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 849:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 850:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 851:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
 852:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                               uint32_t StopBits)
 853:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 854:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
 855:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 856:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 857:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 858:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 859:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Address of the USART node.
 860:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
 861:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         for wake up with address mark detection.
 862:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_SetNodeAddress
 863:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 864:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  NodeAddress 4 bit Address of the USART node.
 865:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 866:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 867:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetNodeAddress(USART_TypeDef *USARTx, uint32_t NodeAddress)
 868:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 869:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD, (NodeAddress & USART_CR2_ADD));
 870:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 871:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 872:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 873:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return 4 bit Address of the USART node as set in ADD field of CR2.
 874:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
 875:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
 876:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 877:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
 878:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 879:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
 880:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 881:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD));
 882:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 883:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 884:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 885:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
 886:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 887:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 888:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
 889:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 890:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 891:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 892:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
 893:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 894:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
 895:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 896:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 897:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 898:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
 899:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 900:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 901:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 22


 902:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 903:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 904:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 905:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
 906:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 907:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
 908:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 909:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 910:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 911:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
 912:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 913:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 914:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
 915:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 916:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 917:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 918:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
 919:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 920:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
 921:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 922:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 923:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 924:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
 925:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 926:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 927:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
 928:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 929:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 930:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 931:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
 932:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 933:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
 934:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 935:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 936:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 937:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
 938:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 939:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 940:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
 941:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
 942:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 943:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
 944:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
 945:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
 946:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
 947:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
 948:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 949:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 950:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
 951:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 952:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
 953:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 954:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 955:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 956:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
 957:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 958:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 23


 959:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
 960:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
 961:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 962:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 963:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
 964:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
 965:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
 966:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
 967:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 968:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
 969:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 970:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
 971:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 972:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 973:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 974:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable One bit sampling method
 975:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
 976:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 977:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 978:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 979:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
 980:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 981:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
 982:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 983:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 984:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 985:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable One bit sampling method
 986:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
 987:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 988:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 989:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 990:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
 991:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 992:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
 993:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 994:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 995:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 996:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
 997:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
 998:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 999:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1000:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1001:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1002:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1003:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT));
1004:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1005:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1006:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1007:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1008:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1009:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1010:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1011:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (Baud rate value != 0)
1012:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1013:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1014:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1015:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 24


1016:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1017:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1018:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1019:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1020:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1021:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
1022:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                           uint32_t BaudRate)
1023:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1024:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1025:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   {
1026:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
1027:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   }
1028:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   else
1029:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   {
1030:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
1031:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   }
1032:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1033:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1034:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1035:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
1036:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1037:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1038:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1039:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1040:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1041:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1042:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1043:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1044:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Baud Rate
1045:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1046:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t O
1047:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1048:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t usartdiv = 0x0U;
1049:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t brrresult = 0x0U;
1050:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1051:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1052:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1053:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1054:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   {
1055:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     if ((usartdiv & 0xFFF7U) != 0U)
1056:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     {
1057:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****       usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
1058:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****       brrresult = (PeriphClk * 2U) / usartdiv;
1059:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     }
1060:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   }
1061:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   else
1062:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   {
1063:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
1064:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     {
1065:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****       brrresult = PeriphClk / usartdiv;
1066:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     }
1067:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   }
1068:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (brrresult);
1069:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1070:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1071:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1072:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 25


1073:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1074:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1075:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
1076:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
1077:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1078:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1079:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1080:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable IrDA mode
1081:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1082:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1083:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
1084:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1085:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1086:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1087:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
1088:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1089:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1090:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1091:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1092:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1093:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable IrDA mode
1094:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1095:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1096:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
1097:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1098:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1099:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1100:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
1101:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1102:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
1103:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1104:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1105:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1106:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
1107:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1108:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1109:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
1110:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1111:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1112:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1113:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(USART_TypeDef *USARTx)
1114:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1115:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN));
1116:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1117:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1118:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1119:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
1120:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1121:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1122:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
1123:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1124:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
1125:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1126:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
1127:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1128:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1129:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 26


1130:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1131:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
1132:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1133:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1134:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1135:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
1136:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1137:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1138:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
1139:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1140:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1141:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1142:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1143:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1144:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef *USARTx)
1145:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1146:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
1147:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1148:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1149:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1150:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
1151:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1152:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1153:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1154:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
1155:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1156:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
1157:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1158:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1159:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1160:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1161:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1162:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1163:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1164:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1165:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
1166:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1167:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1168:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1169:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
1170:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1171:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
1172:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1173:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef *USARTx)
1174:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1175:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1176:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1177:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1178:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1179:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
1180:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1181:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1182:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
1183:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
1184:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1185:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1186:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 27


1187:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
1188:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1189:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1190:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
1191:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1192:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1193:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1194:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
1195:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1196:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
1197:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1198:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1199:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1200:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
1201:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1202:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1203:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
1204:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1205:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1206:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1207:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
1208:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1209:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
1210:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1211:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1212:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1213:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
1214:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1215:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1216:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
1217:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1218:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1219:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1220:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef *USARTx)
1221:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1222:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK));
1223:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1224:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1225:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1226:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable Smartcard mode
1227:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1228:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1229:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
1230:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1231:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1232:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1233:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
1234:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1235:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1236:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1237:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1238:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1239:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable Smartcard mode
1240:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1241:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1242:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
1243:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 28


1244:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1245:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1246:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
1247:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1248:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
1249:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1250:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1251:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1252:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
1253:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1254:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1255:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
1256:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1257:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1258:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1259:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef *USARTx)
1260:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1261:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN));
1262:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1263:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1264:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1265:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
1266:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1267:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1268:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1269:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
1270:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1271:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
1272:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1273:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1274:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1275:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1276:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1277:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1278:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1279:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1280:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
1281:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1282:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1283:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1284:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
1285:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1286:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
1287:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1288:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef *USARTx)
1289:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1290:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1291:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1292:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1293:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1294:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
1295:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1296:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1297:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1298:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
1299:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1300:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 29


1301:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1302:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1303:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
1304:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1305:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_GT, GuardTime << USART_POSITION_GTPR_GT);
1306:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1307:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1308:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1309:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
1310:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1311:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1312:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1313:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
1314:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1315:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
1316:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1317:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef *USARTx)
1318:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1319:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_POSITION_GTPR_GT);
1320:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1321:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1322:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1323:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
1324:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1325:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1326:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
1327:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
1328:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1329:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1330:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1331:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
1332:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1333:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1334:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
1335:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1336:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1337:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1338:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
1339:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1340:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
1341:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1342:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1343:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1344:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
1345:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1346:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1347:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
1348:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1349:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1350:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1351:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
1352:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1353:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
1354:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1355:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1356:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1357:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 30


1358:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1359:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1360:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
1361:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1362:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1363:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1364:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef *USARTx)
1365:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1366:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL));
1367:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1368:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1369:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1370:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
1371:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1372:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1373:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
1374:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
1375:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1376:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1377:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1378:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
1379:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1380:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1381:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
1382:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1383:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
1384:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
1385:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
1386:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1387:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1388:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
1389:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1390:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
1391:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1392:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1393:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1394:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
1395:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1396:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1397:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
1398:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1399:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1400:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
1401:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
1402:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1403:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef *USARTx)
1404:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1405:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
1406:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1407:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1408:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1409:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable LIN mode
1410:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1411:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1412:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
1413:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1414:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 31


1415:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1416:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
1417:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1418:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
1419:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1420:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1421:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1422:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable LIN mode
1423:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1424:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1425:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
1426:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1427:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1428:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1429:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
1430:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1431:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
1432:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1433:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1434:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1435:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
1436:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1437:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1438:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
1439:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1440:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1441:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1442:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(USART_TypeDef *USARTx)
1443:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1444:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN));
1445:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1446:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1447:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1448:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
1449:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1450:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1451:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
1452:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
1453:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1454:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1455:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1456:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
1457:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
1458:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1459:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1460:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1461:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1462:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1463:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1464:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1465:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1466:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1467:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1468:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1469:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
1470:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1471:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 32


1472:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
1473:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
1474:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
1475:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
1476:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
1477:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1478:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1479:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1480:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
1481:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1482:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
1483:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - LINEN, CLKEN bits in the USART_CR2 register,
1484:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
1485:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1486:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
1487:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1488:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1489:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1490:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Synchronous Mode
1491:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In Synchronous mode, the following bits must be kept cleared:
1492:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1493:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1494:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1495:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1496:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         This function also sets the USART in Synchronous mode.
1497:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1498:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1499:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1500:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1501:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1502:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1503:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1504:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
1505:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Synchronous Mode
1506:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, Clock Polarity, ...) should be set using
1507:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
1508:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSyncMode\n
1509:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSyncMode\n
1510:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSyncMode\n
1511:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigSyncMode\n
1512:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSyncMode
1513:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1514:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1515:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1516:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSyncMode(USART_TypeDef *USARTx)
1517:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1518:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In Synchronous mode, the following bits must be kept cleared:
1519:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
1520:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
1521:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
1522:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
1523:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* set the UART/USART in Synchronous mode */
1524:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1525:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1526:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1527:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1528:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in LIN Mode
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 33


1529:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In LIN mode, the following bits must be kept cleared:
1530:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
1531:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1532:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1533:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1534:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         This function also set the UART/USART in LIN mode.
1535:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1536:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1537:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1538:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1539:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1540:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1541:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1542:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1543:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Set LINEN in CR2 using @ref LL_USART_EnableLIN() function
1544:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to LIN Mode
1545:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Word length, LIN Break Detection Length, ...) should be set using
1546:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
1547:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_ConfigLINMode\n
1548:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigLINMode\n
1549:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          LINEN         LL_USART_ConfigLINMode\n
1550:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigLINMode\n
1551:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigLINMode\n
1552:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigLINMode
1553:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1554:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1555:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1556:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigLINMode(USART_TypeDef *USARTx)
1557:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1558:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In LIN mode, the following bits must be kept cleared:
1559:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - STOP and CLKEN bits in the USART_CR2 register,
1560:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.*/
1561:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_CLKEN | USART_CR2_STOP));
1562:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_SCEN | USART_CR3_HDSEL));
1563:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* Set the UART/USART in LIN mode */
1564:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
1565:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1566:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1567:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1568:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Half Duplex Mode
1569:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In Half Duplex mode, the following bits must be kept cleared:
1570:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1571:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1572:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1573:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1574:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         This function also sets the UART/USART in Half Duplex mode.
1575:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1576:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1577:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1578:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1579:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1580:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1581:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1582:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Set HDSEL in CR3 using @ref LL_USART_EnableHalfDuplex() function
1583:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Half Duplex Mode
1584:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1585:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 34


1586:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigHalfDuplexMode\n
1587:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigHalfDuplexMode\n
1588:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigHalfDuplexMode\n
1589:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigHalfDuplexMode\n
1590:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigHalfDuplexMode
1591:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1592:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1593:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1594:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigHalfDuplexMode(USART_TypeDef *USARTx)
1595:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1596:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In Half Duplex mode, the following bits must be kept cleared:
1597:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
1598:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - SCEN and IREN bits in the USART_CR3 register.*/
1599:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1600:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN));
1601:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* set the UART/USART in Half Duplex mode */
1602:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
1603:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1604:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1605:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1606:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Smartcard Mode
1607:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In Smartcard mode, the following bits must be kept cleared:
1608:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1609:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1610:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1611:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         This function also configures Stop bits to 1.5 bits and
1612:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         sets the USART in Smartcard mode (SCEN bit).
1613:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Clock Output is also enabled (CLKEN).
1614:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1615:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1616:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1617:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1618:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1619:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1620:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1621:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
1622:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Set SCEN in CR3 using @ref LL_USART_EnableSmartcard() function
1623:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Smartcard Mode
1624:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1625:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
1626:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSmartcardMode\n
1627:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigSmartcardMode\n
1628:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSmartcardMode\n
1629:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSmartcardMode\n
1630:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSmartcardMode
1631:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1632:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1633:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1634:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSmartcardMode(USART_TypeDef *USARTx)
1635:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1636:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In Smartcard mode, the following bits must be kept cleared:
1637:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
1638:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - IREN and HDSEL bits in the USART_CR3 register.*/
1639:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
1640:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
1641:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* Configure Stop bits to 1.5 bits */
1642:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* Synchronous mode is activated by default */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 35


1643:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, (USART_CR2_STOP_0 | USART_CR2_STOP_1 | USART_CR2_CLKEN));
1644:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* set the UART/USART in Smartcard mode */
1645:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1646:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1647:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1648:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1649:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Irda Mode
1650:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In IRDA mode, the following bits must be kept cleared:
1651:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1652:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
1653:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1654:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1655:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         This function also sets the UART/USART in IRDA mode (IREN bit).
1656:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1657:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1658:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1659:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1660:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1661:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1662:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1663:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1664:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Set IREN in CR3 using @ref LL_USART_EnableIrda() function
1665:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Irda Mode
1666:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Power mode, ...) should be set using
1667:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
1668:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigIrdaMode\n
1669:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigIrdaMode\n
1670:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigIrdaMode\n
1671:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigIrdaMode\n
1672:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigIrdaMode\n
1673:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigIrdaMode
1674:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1675:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1676:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1677:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigIrdaMode(USART_TypeDef *USARTx)
1678:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1679:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In IRDA mode, the following bits must be kept cleared:
1680:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - LINEN, STOP and CLKEN bits in the USART_CR2 register,
1681:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - SCEN and HDSEL bits in the USART_CR3 register.*/
1682:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN | USART_CR2_STOP));
1683:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
1684:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* set the UART/USART in IRDA mode */
1685:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1686:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1687:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1688:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1689:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Multi processor Mode
1690:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (several USARTs connected in a network, one of the USARTs can be the master,
1691:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         its TX output connected to the RX inputs of the other slaves USARTs).
1692:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In MultiProcessor mode, the following bits must be kept cleared:
1693:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1694:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1695:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1696:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1697:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1698:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1699:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 36


1700:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1701:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1702:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1703:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1704:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Multi processor Mode
1705:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Wake Up Method, Node address, ...) should be set using
1706:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
1707:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigMultiProcessMode\n
1708:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigMultiProcessMode\n
1709:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigMultiProcessMode\n
1710:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigMultiProcessMode\n
1711:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigMultiProcessMode
1712:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1713:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1714:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1715:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigMultiProcessMode(USART_TypeDef *USARTx)
1716:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1717:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In Multi Processor mode, the following bits must be kept cleared:
1718:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
1719:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.*/
1720:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1721:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
1722:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1723:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1724:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1725:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
1726:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1727:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1728:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_FLAG_Management FLAG_Management
1729:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
1730:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1731:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1732:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1733:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Flag is set or not
1734:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           PE            LL_USART_IsActiveFlag_PE
1735:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1736:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1737:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1738:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_PE(USART_TypeDef *USARTx)
1739:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1740:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_PE) == (USART_SR_PE));
1741:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1742:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1743:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1744:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Framing Error Flag is set or not
1745:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           FE            LL_USART_IsActiveFlag_FE
1746:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1747:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1748:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1749:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_FE(USART_TypeDef *USARTx)
1750:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1751:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_FE) == (USART_SR_FE));
1752:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1753:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1754:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1755:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Noise error detected Flag is set or not
1756:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           NF            LL_USART_IsActiveFlag_NE
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 37


1757:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1758:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1759:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1760:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_NE(USART_TypeDef *USARTx)
1761:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1762:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_NE) == (USART_SR_NE));
1763:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1764:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1765:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1766:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART OverRun Error Flag is set or not
1767:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           ORE           LL_USART_IsActiveFlag_ORE
1768:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1769:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1770:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1771:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ORE(USART_TypeDef *USARTx)
1772:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1773:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_ORE) == (USART_SR_ORE));
1774:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1775:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1776:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1777:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART IDLE line detected Flag is set or not
1778:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           IDLE          LL_USART_IsActiveFlag_IDLE
1779:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1780:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1781:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1782:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_IDLE(USART_TypeDef *USARTx)
1783:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1784:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_IDLE) == (USART_SR_IDLE));
1785:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1786:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1787:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1788:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Read Data Register Not Empty Flag is set or not
1789:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           RXNE          LL_USART_IsActiveFlag_RXNE
1790:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1791:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1792:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1793:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE(USART_TypeDef *USARTx)
1794:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1795:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_RXNE) == (USART_SR_RXNE));
1796:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1797:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1798:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1799:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Flag is set or not
1800:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           TC            LL_USART_IsActiveFlag_TC
1801:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1802:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1803:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1804:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TC(USART_TypeDef *USARTx)
1805:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1806:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_TC) == (USART_SR_TC));
1807:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1808:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1809:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1810:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Transmit Data Register Empty Flag is set or not
1811:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           TXE           LL_USART_IsActiveFlag_TXE
1812:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1813:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 38


1814:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1815:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE(USART_TypeDef *USARTx)
1816:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1817:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_TXE) == (USART_SR_TXE));
1818:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1819:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1820:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1821:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Flag is set or not
1822:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1823:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1824:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           LBD           LL_USART_IsActiveFlag_LBD
1825:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1826:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1827:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1828:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_LBD(USART_TypeDef *USARTx)
1829:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1830:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_LBD) == (USART_SR_LBD));
1831:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1832:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1833:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1834:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART CTS Flag is set or not
1835:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1836:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1837:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           CTS           LL_USART_IsActiveFlag_nCTS
1838:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1839:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1840:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1841:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_nCTS(USART_TypeDef *USARTx)
1842:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1843:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_CTS) == (USART_SR_CTS));
1844:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1845:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1846:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1847:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Send Break Flag is set or not
1848:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          SBK           LL_USART_IsActiveFlag_SBK
1849:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1850:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1851:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1852:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_SBK(USART_TypeDef *USARTx)
1853:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1854:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_SBK) == (USART_CR1_SBK));
1855:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1856:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1857:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1858:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Receive Wake Up from mute mode Flag is set or not
1859:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          RWU           LL_USART_IsActiveFlag_RWU
1860:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1861:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1862:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1863:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RWU(USART_TypeDef *USARTx)
1864:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1865:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_RWU) == (USART_CR1_RWU));
1866:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1867:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1868:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1869:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear Parity Error Flag
1870:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 39


1871:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1872:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1873:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         NE, FE, ORE, IDLE would also be cleared.
1874:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           PE            LL_USART_ClearFlag_PE
1875:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1876:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1877:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1878:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_PE(USART_TypeDef *USARTx)
1879:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1880:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   __IO uint32_t tmpreg;
1881:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->SR;
1882:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1883:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->DR;
1884:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1885:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1886:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1887:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1888:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear Framing Error Flag
1889:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1890:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1891:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1892:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         PE, NE, ORE, IDLE would also be cleared.
1893:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           FE            LL_USART_ClearFlag_FE
1894:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1895:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1896:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1897:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_FE(USART_TypeDef *USARTx)
1898:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1899:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   __IO uint32_t tmpreg;
1900:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->SR;
1901:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1902:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->DR;
1903:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1904:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1905:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1906:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1907:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear Noise detected Flag
1908:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1909:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1910:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1911:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         PE, FE, ORE, IDLE would also be cleared.
1912:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           NF            LL_USART_ClearFlag_NE
1913:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1914:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1915:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1916:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_NE(USART_TypeDef *USARTx)
1917:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1918:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   __IO uint32_t tmpreg;
1919:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->SR;
1920:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1921:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->DR;
1922:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1923:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1924:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1925:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1926:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear OverRun Error Flag
1927:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 40


1928:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1929:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1930:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         PE, NE, FE, IDLE would also be cleared.
1931:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           ORE           LL_USART_ClearFlag_ORE
1932:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1933:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1934:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1935:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_ORE(USART_TypeDef *USARTx)
1936:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1937:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   __IO uint32_t tmpreg;
1938:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->SR;
1939:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1940:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->DR;
1941:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1942:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1943:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1944:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1945:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear IDLE line detected Flag
1946:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1947:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1948:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1949:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         PE, NE, FE, ORE would also be cleared.
1950:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           IDLE          LL_USART_ClearFlag_IDLE
1951:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1952:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1953:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1954:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_IDLE(USART_TypeDef *USARTx)
1955:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1956:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   __IO uint32_t tmpreg;
1957:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->SR;
1958:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1959:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->DR;
1960:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1961:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1962:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1963:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1964:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear Transmission Complete Flag
1965:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           TC            LL_USART_ClearFlag_TC
1966:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1967:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1968:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1969:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_TC(USART_TypeDef *USARTx)
1970:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1971:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   WRITE_REG(USARTx->SR, ~(USART_SR_TC));
1972:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1973:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1974:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1975:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear RX Not Empty Flag
1976:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           RXNE          LL_USART_ClearFlag_RXNE
1977:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1978:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1979:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1980:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_RXNE(USART_TypeDef *USARTx)
1981:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1982:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   WRITE_REG(USARTx->SR, ~(USART_SR_RXNE));
1983:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1984:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 41


1985:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1986:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear LIN Break Detection Flag
1987:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1988:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1989:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           LBD           LL_USART_ClearFlag_LBD
1990:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1991:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1992:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1993:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_LBD(USART_TypeDef *USARTx)
1994:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1995:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   WRITE_REG(USARTx->SR, ~(USART_SR_LBD));
1996:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1997:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1998:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1999:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear CTS Interrupt Flag
2000:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
2001:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
2002:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           CTS           LL_USART_ClearFlag_nCTS
2003:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
2004:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
2005:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2006:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_nCTS(USART_TypeDef *USARTx)
2007:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
2008:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   WRITE_REG(USARTx->SR, ~(USART_SR_CTS));
2009:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
2010:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2011:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
2012:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
2013:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2014:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2015:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_IT_Management IT_Management
2016:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
2017:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2018:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2019:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
2020:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable IDLE Interrupt
2021:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_EnableIT_IDLE
2022:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
2023:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
2024:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2025:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_IDLE(USART_TypeDef *USARTx)
2026:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
2027:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_IDLEIE);
2028:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
2029:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2030:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
2031:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable RX Not Empty Interrupt
2032:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_EnableIT_RXNE
2033:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
2034:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
2035:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2036:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RXNE(USART_TypeDef *USARTx)
  96              		.loc 2 2036 22 is_stmt 1 discriminator 2 view .LVU17
  97              	.L7:
  98              		.loc 2 2036 22 is_stmt 0 discriminator 2 view .LVU18
  99              	.LBE63:
2037:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 42


2038:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RXNEIE);
 100              		.loc 2 2038 3 is_stmt 1 view .LVU19
 101              	.LBB69:
 102              	.LBB64:
 103              		.loc 2 2038 3 view .LVU20
 104              		.loc 2 2038 3 view .LVU21
 105              		.loc 2 2038 3 view .LVU22
 106              	.LBB65:
 107              	.LBI65:
 108              		.file 3 "./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h"
   1:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /*
   8:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  *
  10:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  *
  12:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  *
  16:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  *
  18:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
  24:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
  25:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
  28:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
  34:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  38:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
  39:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  43:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  46:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 43


  48:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  49:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  55:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  58:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  61:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  64:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  67:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  70:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  78:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  86:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  94:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 102:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 44


 105:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 110:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 113:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 116:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 117:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 118:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   @{
 122:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 123:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 124:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 125:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 129:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 131:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 133:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 134:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 135:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 136:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 140:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 142:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 144:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 145:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 146:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 147:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 151:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 153:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 155:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 158:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 159:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 160:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 45


 162:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 166:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 168:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 170:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 173:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 174:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 175:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 176:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 177:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 181:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 183:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 185:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 186:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 187:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 189:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 193:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 195:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 197:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 198:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 199:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 200:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 201:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 205:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 207:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 209:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 212:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 213:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 214:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 215:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 46


 219:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 221:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 223:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 226:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 227:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 228:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 229:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 233:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 235:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 237:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 240:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 241:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 242:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 243:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 247:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 249:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 251:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 254:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 255:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 256:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 258:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 262:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 264:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 266:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 269:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 270:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 271:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 272:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 273:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 47


 276:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 277:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 279:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 281:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 282:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 283:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 285:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 289:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 291:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 293:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 294:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 295:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 296:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 297:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 301:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 303:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 305:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 308:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 309:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 310:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 312:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 316:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 318:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 320:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 323:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 324:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 325:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 326:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 327:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 331:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 48


 333:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 335:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 336:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 337:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 339:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 343:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 345:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 347:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 348:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 349:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 350:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 352:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 356:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 358:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 360:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 363:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 364:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 365:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 366:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 370:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 372:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 374:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 375:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 376:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 377:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 378:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 382:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 384:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 386:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 389:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 49


 390:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 391:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 393:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 397:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 399:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 401:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 404:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 405:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 406:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 407:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 408:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 412:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 414:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 416:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 417:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 418:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 420:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 424:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 426:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 428:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 429:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 430:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 431:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 435:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 439:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 441:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 443:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 444:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 445:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 446:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 50


 447:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 450:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 452:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 454:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 455:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 456:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 457:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 461:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 463:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 465:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 468:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 469:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 470:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 472:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 476:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 478:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 480:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 483:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 484:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 485:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 486:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 487:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 491:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 493:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 495:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 496:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 497:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 499:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 503:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 51


 504:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 505:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 507:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 508:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 509:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 510:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 511:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 516:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 518:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 520:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 521:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 522:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 523:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 527:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 529:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 531:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 534:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 535:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 536:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 538:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 542:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 544:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 546:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 549:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 550:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 551:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 552:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 553:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 557:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 559:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 52


 561:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 562:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 563:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 565:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 569:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 571:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 573:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 574:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 575:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 579:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 580:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 583:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 584:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   
 589:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 592:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 594:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 599:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 603:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 604:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 605:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 607:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 611:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 614:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 616:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 53


 618:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 620:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 624:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 625:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 626:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 627:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 628:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 629:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   
 634:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 637:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 639:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 644:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 646:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 647:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 648:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 649:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 651:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 655:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 658:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 660:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 664:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 666:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 667:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 668:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 669:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 670:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 671:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   mode.
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 54


 675:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 676:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 679:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 681:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 686:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 690:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 691:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 692:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 693:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 695:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 699:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 702:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 704:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 708:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 712:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 713:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 714:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 715:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 716:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 717:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 722:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 725:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 727:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 55


 732:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 734:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 735:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 736:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 737:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 739:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 743:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 746:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 748:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 752:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 754:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 755:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 756:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 757:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 760:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 761:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 762:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 766:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 768:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 776:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 778:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 781:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 782:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 784:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 785:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 786:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 787:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 788:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 56


 789:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 792:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 794:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 802:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 804:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 805:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 807:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 808:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 809:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 810:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 812:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 813:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   @{
 817:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** */
 818:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 819:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 827:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 831:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 832:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 833:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 836:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 838:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 839:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 842:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 844:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 845:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 57


 846:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 850:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 852:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 853:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 854:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 857:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 859:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 860:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 861:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 866:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 868:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 870:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 871:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 872:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 873:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 877:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 879:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 881:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 882:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 883:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 884:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 888:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 890:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 892:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 893:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 894:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 895:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 900:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 902:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 58


 903:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 905:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 907:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 910:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 911:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 912:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 913:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 914:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 919:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 921:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 923:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 926:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 927:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 928:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 929:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 934:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 936:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 939:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 941:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 944:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 945:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 946:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 947:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 948:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 954:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 956:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   {
 959:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     return op1;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 59


 960:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   }
 961:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 963:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 964:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 965:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 966:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 972:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 974:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 975:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
 976:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
 981:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 982:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 983:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 984:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 985:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 989:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
 990:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 992:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   {
 995:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   }
 999:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
1001:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
1002:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
1003:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1004:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1005:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
1006:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1007:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1008:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1009:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1010:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
1011:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #define __CLZ             (uint8_t)__builtin_clz
1012:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1013:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1014:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1015:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1016:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 60


1017:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1018:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
1019:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1020:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1021:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1022:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1023:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
1024:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1025:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
1026:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1027:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1028:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1029:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1030:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
1031:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1032:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1033:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     */
1034:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1035:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
1036:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1037:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
1038:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1039:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1040:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
1041:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1042:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1043:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1044:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1045:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
1046:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1047:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
1048:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1049:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1050:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1051:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1052:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #else
1053:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1054:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1055:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     */
1056:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1057:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** #endif
1058:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1059:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
1060:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1061:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1062:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
1063:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1064:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1065:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1066:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1067:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
1068:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 109              		.loc 3 1068 31 view .LVU23
 110              	.LBB66:
1069:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
1070:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 111              		.loc 3 1070 5 view .LVU24
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 61


1071:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1072:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 112              		.loc 3 1072 4 view .LVU25
 113 0010 02F10C03 		add	r3, r2, #12
 114              	.LVL6:
 115              		.loc 3 1072 4 is_stmt 0 view .LVU26
 116              		.syntax unified
 117              	@ 1072 "./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h" 1
 118 0014 53E8003F 		ldrex r3, [r3]
 119              	@ 0 "" 2
 120              	.LVL7:
1073:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 121              		.loc 3 1073 4 is_stmt 1 view .LVU27
 122              		.loc 3 1073 4 is_stmt 0 view .LVU28
 123              		.thumb
 124              		.syntax unified
 125              	.LBE66:
 126              	.LBE65:
 127              		.loc 2 2038 3 view .LVU29
 128 0018 43F02003 		orr	r3, r3, #32
 129              	.LVL8:
 130              		.loc 2 2038 3 is_stmt 1 view .LVU30
 131              	.LBB67:
 132              	.LBI67:
1074:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
1075:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1076:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1077:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
1078:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1079:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1080:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1081:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1082:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1083:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1084:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
1085:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1086:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
1087:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1088:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1089:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1090:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
1091:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
1092:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1093:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1094:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
1095:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1096:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1097:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1098:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1099:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1100:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1101:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
1102:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1103:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
1104:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1105:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1106:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 62


1107:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
1108:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
1109:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1110:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1111:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** /**
1112:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1113:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1114:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1115:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1116:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1117:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1118:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****  */
1119:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 133              		.loc 3 1119 31 view .LVU31
 134              	.LBB68:
1120:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
1121:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 135              		.loc 3 1121 4 view .LVU32
1122:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
1123:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 136              		.loc 3 1123 4 view .LVU33
 137 001c 02F10C00 		add	r0, r2, #12
 138              	.LVL9:
 139              		.loc 3 1123 4 is_stmt 0 view .LVU34
 140              		.syntax unified
 141              	@ 1123 "./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h" 1
 142 0020 40E80031 		strex r1, r3, [r0]
 143              	@ 0 "" 2
 144              	.LVL10:
1124:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 145              		.loc 3 1124 4 is_stmt 1 view .LVU35
 146              		.loc 3 1124 4 is_stmt 0 view .LVU36
 147              		.thumb
 148              		.syntax unified
 149              	.LBE68:
 150              	.LBE67:
 151              		.loc 2 2038 3 view .LVU37
 152 0024 0029     		cmp	r1, #0
 153 0026 F3D1     		bne	.L7
 154              	.LBE64:
 155              	.LBE69:
 205:flight/uvos/stm32f4xx/uvos_usart.c **** }
 156              		.loc 1 205 1 view .LVU38
 157 0028 10BD     		pop	{r4, pc}
 158              		.loc 1 205 1 view .LVU39
 159              		.cfi_endproc
 160              	.LFE1381:
 162              		.section	.text.UVOS_USART_TxStart,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	UVOS_USART_TxStart:
 169              	.LVL11:
 170              	.LFB1382:
 206:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_TxStart( uint32_t usart_id, __attribute__( ( unused ) ) uint16_t tx_bytes_av
 207:flight/uvos/stm32f4xx/uvos_usart.c **** {
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 63


 171              		.loc 1 207 1 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		.loc 1 207 1 is_stmt 0 view .LVU41
 176 0000 10B5     		push	{r4, lr}
 177              	.LCFI1:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 4, -8
 180              		.cfi_offset 14, -4
 181 0002 0446     		mov	r4, r0
 208:flight/uvos/stm32f4xx/uvos_usart.c ****   struct uvos_usart_dev * usart_dev = ( struct uvos_usart_dev * )usart_id;
 182              		.loc 1 208 3 is_stmt 1 view .LVU42
 183              	.LVL12:
 209:flight/uvos/stm32f4xx/uvos_usart.c **** 
 210:flight/uvos/stm32f4xx/uvos_usart.c ****   bool valid = UVOS_USART_validate( usart_dev );
 184              		.loc 1 210 3 view .LVU43
 185              		.loc 1 210 16 is_stmt 0 view .LVU44
 186 0004 FFF7FEFF 		bl	UVOS_USART_validate
 187              	.LVL13:
 211:flight/uvos/stm32f4xx/uvos_usart.c **** 
 212:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_Assert( valid );
 188              		.loc 1 212 3 is_stmt 1 view .LVU45
 189 0008 00B9     		cbnz	r0, .L10
 190              	.L11:
 191              		.loc 1 212 3 discriminator 1 view .LVU46
 192              		.loc 1 212 3 discriminator 1 view .LVU47
 193              		.loc 1 212 3 discriminator 1 view .LVU48
 194 000a FEE7     		b	.L11
 195              	.L10:
 196              		.loc 1 212 23 discriminator 2 view .LVU49
 213:flight/uvos/stm32f4xx/uvos_usart.c **** 
 214:flight/uvos/stm32f4xx/uvos_usart.c ****   // USART_ITConfig( usart_dev->cfg->regs, USART_IT_TXE, ENABLE );
 215:flight/uvos/stm32f4xx/uvos_usart.c ****   LL_USART_EnableIT_TXE( usart_dev->cfg->regs );
 197              		.loc 1 215 3 discriminator 2 view .LVU50
 198              		.loc 1 215 35 is_stmt 0 discriminator 2 view .LVU51
 199 000c 6368     		ldr	r3, [r4, #4]
 200              		.loc 1 215 3 discriminator 2 view .LVU52
 201 000e 1A68     		ldr	r2, [r3]
 202              	.LVL14:
 203              	.LBB70:
 204              	.LBI70:
2039:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
2040:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2041:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
2042:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable Transmission Complete Interrupt
2043:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_EnableIT_TC
2044:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
2045:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
2046:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2047:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TC(USART_TypeDef *USARTx)
2048:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
2049:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TCIE);
2050:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
2051:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2052:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
2053:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable TX Empty Interrupt
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 64


2054:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_EnableIT_TXE
2055:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
2056:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
2057:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2058:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TXE(USART_TypeDef *USARTx)
 205              		.loc 2 2058 22 is_stmt 1 discriminator 2 view .LVU53
 206              	.L12:
 207              		.loc 2 2058 22 is_stmt 0 discriminator 2 view .LVU54
 208              	.LBE70:
2059:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
2060:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TXEIE);
 209              		.loc 2 2060 3 is_stmt 1 view .LVU55
 210              	.LBB76:
 211              	.LBB71:
 212              		.loc 2 2060 3 view .LVU56
 213              		.loc 2 2060 3 view .LVU57
 214              		.loc 2 2060 3 view .LVU58
 215              	.LBB72:
 216              	.LBI72:
1068:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 217              		.loc 3 1068 31 view .LVU59
 218              	.LBB73:
1070:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 219              		.loc 3 1070 5 view .LVU60
1072:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 220              		.loc 3 1072 4 view .LVU61
 221 0010 02F10C03 		add	r3, r2, #12
 222              	.LVL15:
1072:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 223              		.loc 3 1072 4 is_stmt 0 view .LVU62
 224              		.syntax unified
 225              	@ 1072 "./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h" 1
 226 0014 53E8003F 		ldrex r3, [r3]
 227              	@ 0 "" 2
 228              	.LVL16:
1073:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 229              		.loc 3 1073 4 is_stmt 1 view .LVU63
1073:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 230              		.loc 3 1073 4 is_stmt 0 view .LVU64
 231              		.thumb
 232              		.syntax unified
 233              	.LBE73:
 234              	.LBE72:
 235              		.loc 2 2060 3 view .LVU65
 236 0018 43F08003 		orr	r3, r3, #128
 237              	.LVL17:
 238              		.loc 2 2060 3 is_stmt 1 view .LVU66
 239              	.LBB74:
 240              	.LBI74:
1119:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 241              		.loc 3 1119 31 view .LVU67
 242              	.LBB75:
1121:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 243              		.loc 3 1121 4 view .LVU68
1123:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 244              		.loc 3 1123 4 view .LVU69
 245 001c 02F10C00 		add	r0, r2, #12
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 65


 246              	.LVL18:
1123:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 247              		.loc 3 1123 4 is_stmt 0 view .LVU70
 248              		.syntax unified
 249              	@ 1123 "./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h" 1
 250 0020 40E80031 		strex r1, r3, [r0]
 251              	@ 0 "" 2
 252              	.LVL19:
 253              		.loc 3 1124 4 is_stmt 1 view .LVU71
 254              		.loc 3 1124 4 is_stmt 0 view .LVU72
 255              		.thumb
 256              		.syntax unified
 257              	.LBE75:
 258              	.LBE74:
 259              		.loc 2 2060 3 view .LVU73
 260 0024 0029     		cmp	r1, #0
 261 0026 F3D1     		bne	.L12
 262              	.LBE71:
 263              	.LBE76:
 216:flight/uvos/stm32f4xx/uvos_usart.c **** }
 264              		.loc 1 216 1 view .LVU74
 265 0028 10BD     		pop	{r4, pc}
 266              		.loc 1 216 1 view .LVU75
 267              		.cfi_endproc
 268              	.LFE1382:
 270              		.section	.text.UVOS_USART_RegisterRxCallback,"ax",%progbits
 271              		.align	1
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 276              	UVOS_USART_RegisterRxCallback:
 277              	.LVL20:
 278              	.LFB1384:
 217:flight/uvos/stm32f4xx/uvos_usart.c **** 
 218:flight/uvos/stm32f4xx/uvos_usart.c **** /**
 219:flight/uvos/stm32f4xx/uvos_usart.c ****  * Changes the baud rate of the USART peripheral without re-initialising.
 220:flight/uvos/stm32f4xx/uvos_usart.c ****  * \param[in] usart_id USART name (GPS, TELEM, AUX)
 221:flight/uvos/stm32f4xx/uvos_usart.c ****  * \param[in] baud Requested baud rate
 222:flight/uvos/stm32f4xx/uvos_usart.c ****  */
 223:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_ChangeBaud( uint32_t usart_id, uint32_t baud )
 224:flight/uvos/stm32f4xx/uvos_usart.c **** {
 225:flight/uvos/stm32f4xx/uvos_usart.c ****   struct uvos_usart_dev * usart_dev = ( struct uvos_usart_dev * )usart_id;
 226:flight/uvos/stm32f4xx/uvos_usart.c **** 
 227:flight/uvos/stm32f4xx/uvos_usart.c ****   bool valid = UVOS_USART_validate( usart_dev );
 228:flight/uvos/stm32f4xx/uvos_usart.c **** 
 229:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_Assert( valid );
 230:flight/uvos/stm32f4xx/uvos_usart.c **** 
 231:flight/uvos/stm32f4xx/uvos_usart.c ****   LL_USART_InitTypeDef USART_InitStructure;
 232:flight/uvos/stm32f4xx/uvos_usart.c **** 
 233:flight/uvos/stm32f4xx/uvos_usart.c ****   /* Start with a copy of the default configuration for the peripheral */
 234:flight/uvos/stm32f4xx/uvos_usart.c ****   USART_InitStructure = usart_dev->cfg->init;
 235:flight/uvos/stm32f4xx/uvos_usart.c **** 
 236:flight/uvos/stm32f4xx/uvos_usart.c ****   /* Adjust the baud rate */
 237:flight/uvos/stm32f4xx/uvos_usart.c ****   USART_InitStructure.BaudRate = baud;
 238:flight/uvos/stm32f4xx/uvos_usart.c **** 
 239:flight/uvos/stm32f4xx/uvos_usart.c ****   /* Write back the new configuration */
 240:flight/uvos/stm32f4xx/uvos_usart.c ****   LL_USART_Init( usart_dev->cfg->regs, &USART_InitStructure );
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 66


 241:flight/uvos/stm32f4xx/uvos_usart.c **** }
 242:flight/uvos/stm32f4xx/uvos_usart.c **** 
 243:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_RegisterRxCallback( uint32_t usart_id, uvos_com_callback rx_in_cb, uint32_t 
 244:flight/uvos/stm32f4xx/uvos_usart.c **** {
 279              		.loc 1 244 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		.loc 1 244 1 is_stmt 0 view .LVU77
 284 0000 70B5     		push	{r4, r5, r6, lr}
 285              	.LCFI2:
 286              		.cfi_def_cfa_offset 16
 287              		.cfi_offset 4, -16
 288              		.cfi_offset 5, -12
 289              		.cfi_offset 6, -8
 290              		.cfi_offset 14, -4
 291 0002 0446     		mov	r4, r0
 292 0004 0D46     		mov	r5, r1
 293 0006 1646     		mov	r6, r2
 245:flight/uvos/stm32f4xx/uvos_usart.c ****   struct uvos_usart_dev * usart_dev = ( struct uvos_usart_dev * )usart_id;
 294              		.loc 1 245 3 is_stmt 1 view .LVU78
 295              	.LVL21:
 246:flight/uvos/stm32f4xx/uvos_usart.c **** 
 247:flight/uvos/stm32f4xx/uvos_usart.c ****   bool valid = UVOS_USART_validate( usart_dev );
 296              		.loc 1 247 3 view .LVU79
 297              		.loc 1 247 16 is_stmt 0 view .LVU80
 298 0008 FFF7FEFF 		bl	UVOS_USART_validate
 299              	.LVL22:
 248:flight/uvos/stm32f4xx/uvos_usart.c **** 
 249:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_Assert( valid );
 300              		.loc 1 249 3 is_stmt 1 view .LVU81
 301 000c 00B9     		cbnz	r0, .L15
 302              	.L16:
 303              		.loc 1 249 3 discriminator 1 view .LVU82
 304              		.loc 1 249 3 discriminator 1 view .LVU83
 305              		.loc 1 249 3 discriminator 1 view .LVU84
 306 000e FEE7     		b	.L16
 307              	.L15:
 308              		.loc 1 249 23 discriminator 2 view .LVU85
 250:flight/uvos/stm32f4xx/uvos_usart.c **** 
 251:flight/uvos/stm32f4xx/uvos_usart.c ****   /*
 252:flight/uvos/stm32f4xx/uvos_usart.c ****    * Order is important in these assignments since ISR uses _cb
 253:flight/uvos/stm32f4xx/uvos_usart.c ****    * field to determine if it's ok to dereference _cb and _context
 254:flight/uvos/stm32f4xx/uvos_usart.c ****    */
 255:flight/uvos/stm32f4xx/uvos_usart.c ****   usart_dev->rx_in_context = context;
 309              		.loc 1 255 3 discriminator 2 view .LVU86
 310              		.loc 1 255 28 is_stmt 0 discriminator 2 view .LVU87
 311 0010 E660     		str	r6, [r4, #12]
 256:flight/uvos/stm32f4xx/uvos_usart.c ****   usart_dev->rx_in_cb = rx_in_cb;
 312              		.loc 1 256 3 is_stmt 1 discriminator 2 view .LVU88
 313              		.loc 1 256 23 is_stmt 0 discriminator 2 view .LVU89
 314 0012 A560     		str	r5, [r4, #8]
 257:flight/uvos/stm32f4xx/uvos_usart.c **** }
 315              		.loc 1 257 1 discriminator 2 view .LVU90
 316 0014 70BD     		pop	{r4, r5, r6, pc}
 317              		.loc 1 257 1 discriminator 2 view .LVU91
 318              		.cfi_endproc
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 67


 319              	.LFE1384:
 321              		.section	.text.UVOS_USART_RegisterTxCallback,"ax",%progbits
 322              		.align	1
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 327              	UVOS_USART_RegisterTxCallback:
 328              	.LVL23:
 329              	.LFB1385:
 258:flight/uvos/stm32f4xx/uvos_usart.c **** 
 259:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_RegisterTxCallback( uint32_t usart_id, uvos_com_callback tx_out_cb, uint32_t
 260:flight/uvos/stm32f4xx/uvos_usart.c **** {
 330              		.loc 1 260 1 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		.loc 1 260 1 is_stmt 0 view .LVU93
 335 0000 70B5     		push	{r4, r5, r6, lr}
 336              	.LCFI3:
 337              		.cfi_def_cfa_offset 16
 338              		.cfi_offset 4, -16
 339              		.cfi_offset 5, -12
 340              		.cfi_offset 6, -8
 341              		.cfi_offset 14, -4
 342 0002 0446     		mov	r4, r0
 343 0004 0D46     		mov	r5, r1
 344 0006 1646     		mov	r6, r2
 261:flight/uvos/stm32f4xx/uvos_usart.c ****   struct uvos_usart_dev * usart_dev = ( struct uvos_usart_dev * )usart_id;
 345              		.loc 1 261 3 is_stmt 1 view .LVU94
 346              	.LVL24:
 262:flight/uvos/stm32f4xx/uvos_usart.c **** 
 263:flight/uvos/stm32f4xx/uvos_usart.c ****   bool valid = UVOS_USART_validate( usart_dev );
 347              		.loc 1 263 3 view .LVU95
 348              		.loc 1 263 16 is_stmt 0 view .LVU96
 349 0008 FFF7FEFF 		bl	UVOS_USART_validate
 350              	.LVL25:
 264:flight/uvos/stm32f4xx/uvos_usart.c **** 
 265:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_Assert( valid );
 351              		.loc 1 265 3 is_stmt 1 view .LVU97
 352 000c 00B9     		cbnz	r0, .L19
 353              	.L20:
 354              		.loc 1 265 3 discriminator 1 view .LVU98
 355              		.loc 1 265 3 discriminator 1 view .LVU99
 356              		.loc 1 265 3 discriminator 1 view .LVU100
 357 000e FEE7     		b	.L20
 358              	.L19:
 359              		.loc 1 265 23 discriminator 2 view .LVU101
 266:flight/uvos/stm32f4xx/uvos_usart.c **** 
 267:flight/uvos/stm32f4xx/uvos_usart.c ****   /*
 268:flight/uvos/stm32f4xx/uvos_usart.c ****    * Order is important in these assignments since ISR uses _cb
 269:flight/uvos/stm32f4xx/uvos_usart.c ****    * field to determine if it's ok to dereference _cb and _context
 270:flight/uvos/stm32f4xx/uvos_usart.c ****    */
 271:flight/uvos/stm32f4xx/uvos_usart.c ****   usart_dev->tx_out_context = context;
 360              		.loc 1 271 3 discriminator 2 view .LVU102
 361              		.loc 1 271 29 is_stmt 0 discriminator 2 view .LVU103
 362 0010 6661     		str	r6, [r4, #20]
 272:flight/uvos/stm32f4xx/uvos_usart.c ****   usart_dev->tx_out_cb = tx_out_cb;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 68


 363              		.loc 1 272 3 is_stmt 1 discriminator 2 view .LVU104
 364              		.loc 1 272 24 is_stmt 0 discriminator 2 view .LVU105
 365 0012 2561     		str	r5, [r4, #16]
 273:flight/uvos/stm32f4xx/uvos_usart.c **** }
 366              		.loc 1 273 1 discriminator 2 view .LVU106
 367 0014 70BD     		pop	{r4, r5, r6, pc}
 368              		.loc 1 273 1 discriminator 2 view .LVU107
 369              		.cfi_endproc
 370              	.LFE1385:
 372              		.section	.text.UVOS_USART_generic_irq_handler,"ax",%progbits
 373              		.align	1
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 378              	UVOS_USART_generic_irq_handler:
 379              	.LVL26:
 380              	.LFB1386:
 274:flight/uvos/stm32f4xx/uvos_usart.c **** 
 275:flight/uvos/stm32f4xx/uvos_usart.c **** static void UVOS_USART_generic_irq_handler( uint32_t usart_id )
 276:flight/uvos/stm32f4xx/uvos_usart.c **** {
 381              		.loc 1 276 1 is_stmt 1 view -0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 8
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		.loc 1 276 1 is_stmt 0 view .LVU109
 386 0000 30B5     		push	{r4, r5, lr}
 387              	.LCFI4:
 388              		.cfi_def_cfa_offset 12
 389              		.cfi_offset 4, -12
 390              		.cfi_offset 5, -8
 391              		.cfi_offset 14, -4
 392 0002 85B0     		sub	sp, sp, #20
 393              	.LCFI5:
 394              		.cfi_def_cfa_offset 32
 395 0004 0446     		mov	r4, r0
 277:flight/uvos/stm32f4xx/uvos_usart.c ****   struct uvos_usart_dev * usart_dev = ( struct uvos_usart_dev * )usart_id;
 396              		.loc 1 277 3 is_stmt 1 view .LVU110
 397              	.LVL27:
 278:flight/uvos/stm32f4xx/uvos_usart.c **** 
 279:flight/uvos/stm32f4xx/uvos_usart.c ****   bool valid = UVOS_USART_validate( usart_dev );
 398              		.loc 1 279 3 view .LVU111
 399              		.loc 1 279 16 is_stmt 0 view .LVU112
 400 0006 FFF7FEFF 		bl	UVOS_USART_validate
 401              	.LVL28:
 280:flight/uvos/stm32f4xx/uvos_usart.c **** 
 281:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_Assert( valid );
 402              		.loc 1 281 3 is_stmt 1 view .LVU113
 403 000a 00B9     		cbnz	r0, .L23
 404              	.L24:
 405              		.loc 1 281 3 discriminator 1 view .LVU114
 406              		.loc 1 281 3 discriminator 1 view .LVU115
 407              		.loc 1 281 3 discriminator 1 view .LVU116
 408 000c FEE7     		b	.L24
 409              	.L23:
 410              		.loc 1 281 23 discriminator 2 view .LVU117
 282:flight/uvos/stm32f4xx/uvos_usart.c **** 
 283:flight/uvos/stm32f4xx/uvos_usart.c ****   /* Force read of dr after sr to make sure to clear error flags */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 69


 284:flight/uvos/stm32f4xx/uvos_usart.c ****   volatile uint16_t sr = usart_dev->cfg->regs->SR;
 411              		.loc 1 284 3 discriminator 2 view .LVU118
 412              		.loc 1 284 35 is_stmt 0 discriminator 2 view .LVU119
 413 000e 6368     		ldr	r3, [r4, #4]
 414              		.loc 1 284 40 discriminator 2 view .LVU120
 415 0010 1A68     		ldr	r2, [r3]
 416              		.loc 1 284 46 discriminator 2 view .LVU121
 417 0012 1368     		ldr	r3, [r2]
 418              		.loc 1 284 21 discriminator 2 view .LVU122
 419 0014 9BB2     		uxth	r3, r3
 420 0016 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 285:flight/uvos/stm32f4xx/uvos_usart.c ****   volatile uint8_t dr  = usart_dev->cfg->regs->DR;
 421              		.loc 1 285 3 is_stmt 1 discriminator 2 view .LVU123
 422              		.loc 1 285 46 is_stmt 0 discriminator 2 view .LVU124
 423 001a 5368     		ldr	r3, [r2, #4]
 424              		.loc 1 285 20 discriminator 2 view .LVU125
 425 001c DBB2     		uxtb	r3, r3
 426 001e 8DF80D30 		strb	r3, [sp, #13]
 286:flight/uvos/stm32f4xx/uvos_usart.c **** 
 287:flight/uvos/stm32f4xx/uvos_usart.c ****   /* Check if RXNE flag is set */
 288:flight/uvos/stm32f4xx/uvos_usart.c ****   bool rx_need_yield   = false;
 427              		.loc 1 288 3 is_stmt 1 discriminator 2 view .LVU126
 428              		.loc 1 288 8 is_stmt 0 discriminator 2 view .LVU127
 429 0022 0023     		movs	r3, #0
 430 0024 8DF80C30 		strb	r3, [sp, #12]
 289:flight/uvos/stm32f4xx/uvos_usart.c ****   if ( sr & USART_SR_RXNE ) {
 431              		.loc 1 289 3 is_stmt 1 discriminator 2 view .LVU128
 432              		.loc 1 289 11 is_stmt 0 discriminator 2 view .LVU129
 433 0028 BDF80E30 		ldrh	r3, [sp, #14]
 434              		.loc 1 289 6 discriminator 2 view .LVU130
 435 002c 13F0200F 		tst	r3, #32
 436 0030 0DD0     		beq	.L25
 437              	.LBB77:
 290:flight/uvos/stm32f4xx/uvos_usart.c ****     uint8_t byte = dr;
 438              		.loc 1 290 5 is_stmt 1 view .LVU131
 439              		.loc 1 290 13 is_stmt 0 view .LVU132
 440 0032 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 441 0036 8DF80A30 		strb	r3, [sp, #10]
 291:flight/uvos/stm32f4xx/uvos_usart.c ****     if ( usart_dev->rx_in_cb ) {
 442              		.loc 1 291 5 is_stmt 1 view .LVU133
 443              		.loc 1 291 19 is_stmt 0 view .LVU134
 444 003a A568     		ldr	r5, [r4, #8]
 445              		.loc 1 291 8 view .LVU135
 446 003c 3DB1     		cbz	r5, .L25
 292:flight/uvos/stm32f4xx/uvos_usart.c ****       ( void )( usart_dev->rx_in_cb )( usart_dev->rx_in_context, &byte, 1, NULL, &rx_need_yield );
 447              		.loc 1 292 7 is_stmt 1 view .LVU136
 448              		.loc 1 292 26 is_stmt 0 view .LVU137
 449 003e 03AB     		add	r3, sp, #12
 450 0040 0093     		str	r3, [sp]
 451 0042 0023     		movs	r3, #0
 452 0044 0122     		movs	r2, #1
 453 0046 0DF10A01 		add	r1, sp, #10
 454 004a E068     		ldr	r0, [r4, #12]
 455              	.LVL29:
 456              		.loc 1 292 26 view .LVU138
 457 004c A847     		blx	r5
 458              	.LVL30:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 70


 459              	.L25:
 460              	.LBE77:
 293:flight/uvos/stm32f4xx/uvos_usart.c ****     }
 294:flight/uvos/stm32f4xx/uvos_usart.c ****   }
 295:flight/uvos/stm32f4xx/uvos_usart.c **** 
 296:flight/uvos/stm32f4xx/uvos_usart.c ****   /* Check if TXE flag is set */
 297:flight/uvos/stm32f4xx/uvos_usart.c ****   bool tx_need_yield = false;
 461              		.loc 1 297 3 is_stmt 1 view .LVU139
 462              		.loc 1 297 8 is_stmt 0 view .LVU140
 463 004e 0023     		movs	r3, #0
 464 0050 8DF80B30 		strb	r3, [sp, #11]
 298:flight/uvos/stm32f4xx/uvos_usart.c ****   if ( sr & USART_SR_TXE ) {
 465              		.loc 1 298 3 is_stmt 1 view .LVU141
 466              		.loc 1 298 11 is_stmt 0 view .LVU142
 467 0054 BDF80E30 		ldrh	r3, [sp, #14]
 468              		.loc 1 298 6 view .LVU143
 469 0058 13F0800F 		tst	r3, #128
 470 005c 10D0     		beq	.L22
 299:flight/uvos/stm32f4xx/uvos_usart.c ****     if ( usart_dev->tx_out_cb ) {
 471              		.loc 1 299 5 is_stmt 1 view .LVU144
 472              		.loc 1 299 19 is_stmt 0 view .LVU145
 473 005e 2569     		ldr	r5, [r4, #16]
 474              		.loc 1 299 8 view .LVU146
 475 0060 FDB1     		cbz	r5, .L28
 476              	.LBB78:
 300:flight/uvos/stm32f4xx/uvos_usart.c ****       uint8_t b;
 477              		.loc 1 300 7 is_stmt 1 view .LVU147
 301:flight/uvos/stm32f4xx/uvos_usart.c ****       uint16_t bytes_to_send;
 478              		.loc 1 301 7 view .LVU148
 302:flight/uvos/stm32f4xx/uvos_usart.c **** 
 303:flight/uvos/stm32f4xx/uvos_usart.c ****       bytes_to_send = ( usart_dev->tx_out_cb )( usart_dev->tx_out_context, &b, 1, NULL, &tx_need_yi
 479              		.loc 1 303 7 view .LVU149
 480              		.loc 1 303 34 is_stmt 0 view .LVU150
 481 0062 0DF10B03 		add	r3, sp, #11
 482 0066 0093     		str	r3, [sp]
 483 0068 0023     		movs	r3, #0
 484 006a 0122     		movs	r2, #1
 485 006c 0DF10A01 		add	r1, sp, #10
 486 0070 6069     		ldr	r0, [r4, #20]
 487 0072 A847     		blx	r5
 488              	.LVL31:
 304:flight/uvos/stm32f4xx/uvos_usart.c **** 
 305:flight/uvos/stm32f4xx/uvos_usart.c ****       if ( bytes_to_send > 0 ) {
 489              		.loc 1 305 7 is_stmt 1 view .LVU151
 490              		.loc 1 305 10 is_stmt 0 view .LVU152
 491 0074 30B1     		cbz	r0, .L29
 306:flight/uvos/stm32f4xx/uvos_usart.c ****         /* Send the byte we've been given */
 307:flight/uvos/stm32f4xx/uvos_usart.c ****         usart_dev->cfg->regs->DR = b;
 492              		.loc 1 307 9 is_stmt 1 view .LVU153
 493              		.loc 1 307 18 is_stmt 0 view .LVU154
 494 0076 6368     		ldr	r3, [r4, #4]
 495              		.loc 1 307 23 view .LVU155
 496 0078 1B68     		ldr	r3, [r3]
 497              		.loc 1 307 34 view .LVU156
 498 007a 9DF80A20 		ldrb	r2, [sp, #10]	@ zero_extendqisi2
 499 007e 5A60     		str	r2, [r3, #4]
 500              	.LVL32:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 71


 501              	.L22:
 502              		.loc 1 307 34 view .LVU157
 503              	.LBE78:
 308:flight/uvos/stm32f4xx/uvos_usart.c ****       } else {
 309:flight/uvos/stm32f4xx/uvos_usart.c ****         /* No bytes to send, disable TXE interrupt */
 310:flight/uvos/stm32f4xx/uvos_usart.c ****         // USART_ITConfig( usart_dev->cfg->regs, USART_IT_TXE, DISABLE );
 311:flight/uvos/stm32f4xx/uvos_usart.c ****         LL_USART_DisableIT_TXE( usart_dev->cfg->regs );
 312:flight/uvos/stm32f4xx/uvos_usart.c ****       }
 313:flight/uvos/stm32f4xx/uvos_usart.c ****     } else {
 314:flight/uvos/stm32f4xx/uvos_usart.c ****       /* No bytes to send, disable TXE interrupt */
 315:flight/uvos/stm32f4xx/uvos_usart.c ****       // USART_ITConfig( usart_dev->cfg->regs, USART_IT_TXE, DISABLE );
 316:flight/uvos/stm32f4xx/uvos_usart.c ****       LL_USART_DisableIT_TXE( usart_dev->cfg->regs );
 317:flight/uvos/stm32f4xx/uvos_usart.c ****     }
 318:flight/uvos/stm32f4xx/uvos_usart.c ****   }
 319:flight/uvos/stm32f4xx/uvos_usart.c **** 
 320:flight/uvos/stm32f4xx/uvos_usart.c **** #if defined(UVOS_INCLUDE_FREERTOS)
 321:flight/uvos/stm32f4xx/uvos_usart.c ****   portEND_SWITCHING_ISR((rx_need_yield || tx_need_yield) ? pdTRUE : pdFALSE);
 322:flight/uvos/stm32f4xx/uvos_usart.c **** #endif /* UVOS_INCLUDE_FREERTOS */
 323:flight/uvos/stm32f4xx/uvos_usart.c **** }
 504              		.loc 1 323 1 view .LVU158
 505 0080 05B0     		add	sp, sp, #20
 506              	.LCFI6:
 507              		.cfi_remember_state
 508              		.cfi_def_cfa_offset 12
 509              		@ sp needed
 510 0082 30BD     		pop	{r4, r5, pc}
 511              	.LVL33:
 512              	.L29:
 513              	.LCFI7:
 514              		.cfi_restore_state
 515              	.LBB86:
 311:flight/uvos/stm32f4xx/uvos_usart.c ****       }
 516              		.loc 1 311 9 is_stmt 1 view .LVU159
 311:flight/uvos/stm32f4xx/uvos_usart.c ****       }
 517              		.loc 1 311 42 is_stmt 0 view .LVU160
 518 0084 6368     		ldr	r3, [r4, #4]
 311:flight/uvos/stm32f4xx/uvos_usart.c ****       }
 519              		.loc 1 311 9 view .LVU161
 520 0086 1A68     		ldr	r2, [r3]
 521              	.LVL34:
 522              	.LBB79:
 523              	.LBI79:
2061:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
2062:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2063:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
2064:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable Parity Error Interrupt
2065:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          PEIE          LL_USART_EnableIT_PE
2066:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
2067:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
2068:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2069:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_PE(USART_TypeDef *USARTx)
2070:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
2071:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_PEIE);
2072:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
2073:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2074:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
2075:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable LIN Break Detection Interrupt
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 72


2076:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2077:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2078:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LBDIE         LL_USART_EnableIT_LBD
2079:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
2080:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
2081:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2082:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_LBD(USART_TypeDef *USARTx)
2083:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
2084:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LBDIE);
2085:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
2086:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2087:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
2088:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable Error Interrupt
2089:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   When set, Error Interrupt Enable Bit is enabling interrupt generation in case of a fram
2090:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         error, overrun error or noise flag (FE=1 or ORE=1 or NF=1 in the USARTx_SR register).
2091:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           0: Interrupt is inhibited
2092:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           1: An interrupt is generated when FE=1 or ORE=1 or NF=1 in the USARTx_SR register.
2093:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          EIE           LL_USART_EnableIT_ERROR
2094:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
2095:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
2096:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2097:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_ERROR(USART_TypeDef *USARTx)
2098:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
2099:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_EIE);
2100:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
2101:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2102:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
2103:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable CTS Interrupt
2104:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
2105:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
2106:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          CTSIE         LL_USART_EnableIT_CTS
2107:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
2108:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
2109:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2110:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_CTS(USART_TypeDef *USARTx)
2111:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
2112:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_CTSIE);
2113:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
2114:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2115:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
2116:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable IDLE Interrupt
2117:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_DisableIT_IDLE
2118:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
2119:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
2120:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2121:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_IDLE(USART_TypeDef *USARTx)
2122:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
2123:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_IDLEIE);
2124:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
2125:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2126:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
2127:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable RX Not Empty Interrupt
2128:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_DisableIT_RXNE
2129:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
2130:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
2131:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2132:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_RXNE(USART_TypeDef *USARTx)
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 73


2133:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
2134:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RXNEIE);
2135:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
2136:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2137:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
2138:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable Transmission Complete Interrupt
2139:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_DisableIT_TC
2140:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
2141:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
2142:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2143:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TC(USART_TypeDef *USARTx)
2144:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
2145:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TCIE);
2146:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
2147:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
2148:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
2149:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable TX Empty Interrupt
2150:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_DisableIT_TXE
2151:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
2152:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
2153:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
2154:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TXE(USART_TypeDef *USARTx)
 524              		.loc 2 2154 22 is_stmt 1 view .LVU162
 525              	.L31:
 526              		.loc 2 2154 22 is_stmt 0 view .LVU163
 527              	.LBE79:
 528              	.LBE86:
2155:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
2156:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TXEIE);
 529              		.loc 2 2156 3 is_stmt 1 view .LVU164
 530              	.LBB87:
 531              	.LBB85:
 532              	.LBB80:
 533              		.loc 2 2156 3 view .LVU165
 534              		.loc 2 2156 3 view .LVU166
 535              		.loc 2 2156 3 view .LVU167
 536              	.LBB81:
 537              	.LBI81:
1068:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 538              		.loc 3 1068 31 view .LVU168
 539              	.LBB82:
1070:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 540              		.loc 3 1070 5 view .LVU169
1072:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 541              		.loc 3 1072 4 view .LVU170
 542 0088 02F10C03 		add	r3, r2, #12
 543              	.LVL35:
1072:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 544              		.loc 3 1072 4 is_stmt 0 view .LVU171
 545              		.syntax unified
 546              	@ 1072 "./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h" 1
 547 008c 53E8003F 		ldrex r3, [r3]
 548              	@ 0 "" 2
 549              	.LVL36:
1073:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 550              		.loc 3 1073 4 is_stmt 1 view .LVU172
1073:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 74


 551              		.loc 3 1073 4 is_stmt 0 view .LVU173
 552              		.thumb
 553              		.syntax unified
 554              	.LBE82:
 555              	.LBE81:
 556              		.loc 2 2156 3 view .LVU174
 557 0090 23F08003 		bic	r3, r3, #128
 558              	.LVL37:
 559              		.loc 2 2156 3 is_stmt 1 view .LVU175
 560              	.LBB83:
 561              	.LBI83:
1119:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 562              		.loc 3 1119 31 view .LVU176
 563              	.LBB84:
1121:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 564              		.loc 3 1121 4 view .LVU177
1123:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 565              		.loc 3 1123 4 view .LVU178
 566 0094 02F10C00 		add	r0, r2, #12
 567              	.LVL38:
1123:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 568              		.loc 3 1123 4 is_stmt 0 view .LVU179
 569              		.syntax unified
 570              	@ 1123 "./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h" 1
 571 0098 40E80031 		strex r1, r3, [r0]
 572              	@ 0 "" 2
 573              	.LVL39:
 574              		.loc 3 1124 4 is_stmt 1 view .LVU180
 575              		.loc 3 1124 4 is_stmt 0 view .LVU181
 576              		.thumb
 577              		.syntax unified
 578              	.LBE84:
 579              	.LBE83:
 580              		.loc 2 2156 3 view .LVU182
 581 009c 0029     		cmp	r1, #0
 582 009e F3D1     		bne	.L31
 583 00a0 EEE7     		b	.L22
 584              	.LVL40:
 585              	.L28:
 586              		.loc 2 2156 3 view .LVU183
 587              	.LBE80:
 588              	.LBE85:
 589              	.LBE87:
 316:flight/uvos/stm32f4xx/uvos_usart.c ****     }
 590              		.loc 1 316 7 is_stmt 1 view .LVU184
 316:flight/uvos/stm32f4xx/uvos_usart.c ****     }
 591              		.loc 1 316 40 is_stmt 0 view .LVU185
 592 00a2 6368     		ldr	r3, [r4, #4]
 316:flight/uvos/stm32f4xx/uvos_usart.c ****     }
 593              		.loc 1 316 7 view .LVU186
 594 00a4 1A68     		ldr	r2, [r3]
 595              	.LVL41:
 596              	.LBB88:
 597              	.LBI88:
2154:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 598              		.loc 2 2154 22 is_stmt 1 view .LVU187
 599              	.L32:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 75


 600              	.LBE88:
 601              		.loc 2 2156 3 view .LVU188
 602              	.LBB94:
 603              	.LBB89:
 604              		.loc 2 2156 3 view .LVU189
 605              		.loc 2 2156 3 view .LVU190
 606              		.loc 2 2156 3 view .LVU191
 607              	.LBB90:
 608              	.LBI90:
1068:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 609              		.loc 3 1068 31 view .LVU192
 610              	.LBB91:
1070:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 611              		.loc 3 1070 5 view .LVU193
1072:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 612              		.loc 3 1072 4 view .LVU194
 613 00a6 02F10C03 		add	r3, r2, #12
 614              	.LVL42:
1072:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 615              		.loc 3 1072 4 is_stmt 0 view .LVU195
 616              		.syntax unified
 617              	@ 1072 "./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h" 1
 618 00aa 53E8003F 		ldrex r3, [r3]
 619              	@ 0 "" 2
 620              	.LVL43:
1073:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 621              		.loc 3 1073 4 is_stmt 1 view .LVU196
1073:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 622              		.loc 3 1073 4 is_stmt 0 view .LVU197
 623              		.thumb
 624              		.syntax unified
 625              	.LBE91:
 626              	.LBE90:
 627              		.loc 2 2156 3 view .LVU198
 628 00ae 23F08003 		bic	r3, r3, #128
 629              	.LVL44:
 630              		.loc 2 2156 3 is_stmt 1 view .LVU199
 631              	.LBB92:
 632              	.LBI92:
1119:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 633              		.loc 3 1119 31 view .LVU200
 634              	.LBB93:
1121:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 635              		.loc 3 1121 4 view .LVU201
1123:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 636              		.loc 3 1123 4 view .LVU202
 637 00b2 02F10C00 		add	r0, r2, #12
 638              	.LVL45:
1123:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 639              		.loc 3 1123 4 is_stmt 0 view .LVU203
 640              		.syntax unified
 641              	@ 1123 "./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h" 1
 642 00b6 40E80031 		strex r1, r3, [r0]
 643              	@ 0 "" 2
 644              	.LVL46:
 645              		.loc 3 1124 4 is_stmt 1 view .LVU204
 646              		.loc 3 1124 4 is_stmt 0 view .LVU205
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 76


 647              		.thumb
 648              		.syntax unified
 649              	.LBE93:
 650              	.LBE92:
 651              		.loc 2 2156 3 view .LVU206
 652 00ba 0029     		cmp	r1, #0
 653 00bc F3D1     		bne	.L32
 654 00be DFE7     		b	.L22
 655              	.LBE89:
 656              	.LBE94:
 657              		.cfi_endproc
 658              	.LFE1386:
 660              		.section	.text.UVOS_USART_ChangeBaud,"ax",%progbits
 661              		.align	1
 662              		.syntax unified
 663              		.thumb
 664              		.thumb_func
 666              	UVOS_USART_ChangeBaud:
 667              	.LVL47:
 668              	.LFB1383:
 224:flight/uvos/stm32f4xx/uvos_usart.c ****   struct uvos_usart_dev * usart_dev = ( struct uvos_usart_dev * )usart_id;
 669              		.loc 1 224 1 is_stmt 1 view -0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 32
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 224:flight/uvos/stm32f4xx/uvos_usart.c ****   struct uvos_usart_dev * usart_dev = ( struct uvos_usart_dev * )usart_id;
 673              		.loc 1 224 1 is_stmt 0 view .LVU208
 674 0000 70B5     		push	{r4, r5, r6, lr}
 675              	.LCFI8:
 676              		.cfi_def_cfa_offset 16
 677              		.cfi_offset 4, -16
 678              		.cfi_offset 5, -12
 679              		.cfi_offset 6, -8
 680              		.cfi_offset 14, -4
 681 0002 88B0     		sub	sp, sp, #32
 682              	.LCFI9:
 683              		.cfi_def_cfa_offset 48
 684 0004 0546     		mov	r5, r0
 685 0006 0C46     		mov	r4, r1
 225:flight/uvos/stm32f4xx/uvos_usart.c **** 
 686              		.loc 1 225 3 is_stmt 1 view .LVU209
 687              	.LVL48:
 227:flight/uvos/stm32f4xx/uvos_usart.c **** 
 688              		.loc 1 227 3 view .LVU210
 227:flight/uvos/stm32f4xx/uvos_usart.c **** 
 689              		.loc 1 227 16 is_stmt 0 view .LVU211
 690 0008 FFF7FEFF 		bl	UVOS_USART_validate
 691              	.LVL49:
 229:flight/uvos/stm32f4xx/uvos_usart.c **** 
 692              		.loc 1 229 3 is_stmt 1 view .LVU212
 693 000c 00B9     		cbnz	r0, .L35
 694              	.L36:
 229:flight/uvos/stm32f4xx/uvos_usart.c **** 
 695              		.loc 1 229 3 discriminator 1 view .LVU213
 229:flight/uvos/stm32f4xx/uvos_usart.c **** 
 696              		.loc 1 229 3 discriminator 1 view .LVU214
 229:flight/uvos/stm32f4xx/uvos_usart.c **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 77


 697              		.loc 1 229 3 discriminator 1 view .LVU215
 698 000e FEE7     		b	.L36
 699              	.L35:
 229:flight/uvos/stm32f4xx/uvos_usart.c **** 
 700              		.loc 1 229 23 discriminator 2 view .LVU216
 231:flight/uvos/stm32f4xx/uvos_usart.c **** 
 701              		.loc 1 231 3 discriminator 2 view .LVU217
 234:flight/uvos/stm32f4xx/uvos_usart.c **** 
 702              		.loc 1 234 3 discriminator 2 view .LVU218
 234:flight/uvos/stm32f4xx/uvos_usart.c **** 
 703              		.loc 1 234 34 is_stmt 0 discriminator 2 view .LVU219
 704 0010 6E68     		ldr	r6, [r5, #4]
 234:flight/uvos/stm32f4xx/uvos_usart.c **** 
 705              		.loc 1 234 23 discriminator 2 view .LVU220
 706 0012 01AD     		add	r5, sp, #4
 707              	.LVL50:
 234:flight/uvos/stm32f4xx/uvos_usart.c **** 
 708              		.loc 1 234 23 discriminator 2 view .LVU221
 709 0014 06F1040C 		add	ip, r6, #4
 710 0018 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 711              	.LVL51:
 234:flight/uvos/stm32f4xx/uvos_usart.c **** 
 712              		.loc 1 234 23 discriminator 2 view .LVU222
 713 001c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 714 001e 9CE80700 		ldm	ip, {r0, r1, r2}
 715 0022 85E80700 		stm	r5, {r0, r1, r2}
 237:flight/uvos/stm32f4xx/uvos_usart.c **** 
 716              		.loc 1 237 3 is_stmt 1 discriminator 2 view .LVU223
 237:flight/uvos/stm32f4xx/uvos_usart.c **** 
 717              		.loc 1 237 32 is_stmt 0 discriminator 2 view .LVU224
 718 0026 0194     		str	r4, [sp, #4]
 240:flight/uvos/stm32f4xx/uvos_usart.c **** }
 719              		.loc 1 240 3 is_stmt 1 discriminator 2 view .LVU225
 720 0028 01A9     		add	r1, sp, #4
 721 002a 3068     		ldr	r0, [r6]
 722 002c FFF7FEFF 		bl	LL_USART_Init
 723              	.LVL52:
 241:flight/uvos/stm32f4xx/uvos_usart.c **** 
 724              		.loc 1 241 1 is_stmt 0 discriminator 2 view .LVU226
 725 0030 08B0     		add	sp, sp, #32
 726              	.LCFI10:
 727              		.cfi_def_cfa_offset 16
 728              		@ sp needed
 729 0032 70BD     		pop	{r4, r5, r6, pc}
 241:flight/uvos/stm32f4xx/uvos_usart.c **** 
 730              		.loc 1 241 1 discriminator 2 view .LVU227
 731              		.cfi_endproc
 732              	.LFE1383:
 734              		.section	.text.UVOS_USART_alloc,"ax",%progbits
 735              		.align	1
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 740              	UVOS_USART_alloc:
 741              	.LFB1373:
  61:flight/uvos/stm32f4xx/uvos_usart.c ****   struct uvos_usart_dev * usart_dev;
 742              		.loc 1 61 1 is_stmt 1 view -0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 78


 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
  62:flight/uvos/stm32f4xx/uvos_usart.c **** 
 747              		.loc 1 62 3 view .LVU229
  64:flight/uvos/stm32f4xx/uvos_usart.c ****     return NULL;
 748              		.loc 1 64 3 view .LVU230
  64:flight/uvos/stm32f4xx/uvos_usart.c ****     return NULL;
 749              		.loc 1 64 28 is_stmt 0 view .LVU231
 750 0000 0D4B     		ldr	r3, .L41
 751 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  64:flight/uvos/stm32f4xx/uvos_usart.c ****     return NULL;
 752              		.loc 1 64 6 view .LVU232
 753 0004 042B     		cmp	r3, #4
 754 0006 15D8     		bhi	.L40
  68:flight/uvos/stm32f4xx/uvos_usart.c **** 
 755              		.loc 1 68 3 is_stmt 1 view .LVU233
  68:flight/uvos/stm32f4xx/uvos_usart.c **** 
 756              		.loc 1 68 51 is_stmt 0 view .LVU234
 757 0008 591C     		adds	r1, r3, #1
 758 000a 0B4A     		ldr	r2, .L41
 759 000c 1170     		strb	r1, [r2]
  68:flight/uvos/stm32f4xx/uvos_usart.c **** 
 760              		.loc 1 68 13 view .LVU235
 761 000e 0B49     		ldr	r1, .L41+4
 762 0010 03EB4302 		add	r2, r3, r3, lsl #1
 763 0014 4FEAC20C 		lsl	ip, r2, #3
 764 0018 01EB0C00 		add	r0, r1, ip
 765              	.LVL53:
  70:flight/uvos/stm32f4xx/uvos_usart.c ****   usart_dev->magic = UVOS_USART_DEV_MAGIC;
 766              		.loc 1 70 3 is_stmt 1 view .LVU236
 767 001c 0022     		movs	r2, #0
 768 001e 41F80C20 		str	r2, [r1, ip]	@ unaligned
 769 0022 4260     		str	r2, [r0, #4]	@ unaligned
 770 0024 8260     		str	r2, [r0, #8]	@ unaligned
 771 0026 C260     		str	r2, [r0, #12]	@ unaligned
 772 0028 0261     		str	r2, [r0, #16]	@ unaligned
 773 002a 4261     		str	r2, [r0, #20]	@ unaligned
  71:flight/uvos/stm32f4xx/uvos_usart.c **** 
 774              		.loc 1 71 3 view .LVU237
  71:flight/uvos/stm32f4xx/uvos_usart.c **** 
 775              		.loc 1 71 20 is_stmt 0 view .LVU238
 776 002c 044B     		ldr	r3, .L41+8
 777 002e 41F80C30 		str	r3, [r1, ip]
  73:flight/uvos/stm32f4xx/uvos_usart.c **** }
 778              		.loc 1 73 3 is_stmt 1 view .LVU239
  73:flight/uvos/stm32f4xx/uvos_usart.c **** }
 779              		.loc 1 73 10 is_stmt 0 view .LVU240
 780 0032 7047     		bx	lr
 781              	.LVL54:
 782              	.L40:
  65:flight/uvos/stm32f4xx/uvos_usart.c ****   }
 783              		.loc 1 65 12 view .LVU241
 784 0034 0020     		movs	r0, #0
  74:flight/uvos/stm32f4xx/uvos_usart.c **** #endif /* if defined(UVOS_INCLUDE_FREERTOS) */
 785              		.loc 1 74 1 view .LVU242
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 79


 786 0036 7047     		bx	lr
 787              	.L42:
 788              		.align	2
 789              	.L41:
 790 0038 00000000 		.word	.LANCHOR0
 791 003c 00000000 		.word	.LANCHOR1
 792 0040 4A835241 		.word	1095926602
 793              		.cfi_endproc
 794              	.LFE1373:
 796              		.section	.text.UVOS_USART_1_irq_handler,"ax",%progbits
 797              		.align	1
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 802              	UVOS_USART_1_irq_handler:
 803              	.LFB1374:
  88:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_USART_generic_irq_handler( UVOS_USART_1_id );
 804              		.loc 1 88 1 is_stmt 1 view -0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808 0000 08B5     		push	{r3, lr}
 809              	.LCFI11:
 810              		.cfi_def_cfa_offset 8
 811              		.cfi_offset 3, -8
 812              		.cfi_offset 14, -4
  89:flight/uvos/stm32f4xx/uvos_usart.c **** }
 813              		.loc 1 89 3 view .LVU244
 814 0002 024B     		ldr	r3, .L45
 815 0004 1868     		ldr	r0, [r3]
 816 0006 FFF7FEFF 		bl	UVOS_USART_generic_irq_handler
 817              	.LVL55:
  90:flight/uvos/stm32f4xx/uvos_usart.c **** 
 818              		.loc 1 90 1 is_stmt 0 view .LVU245
 819 000a 08BD     		pop	{r3, pc}
 820              	.L46:
 821              		.align	2
 822              	.L45:
 823 000c 00000000 		.word	.LANCHOR2
 824              		.cfi_endproc
 825              	.LFE1374:
 827              		.global	USART1_IRQHandler
 828              		.thumb_set USART1_IRQHandler,UVOS_USART_1_irq_handler
 829              		.section	.text.UVOS_USART_2_irq_handler,"ax",%progbits
 830              		.align	1
 831              		.syntax unified
 832              		.thumb
 833              		.thumb_func
 835              	UVOS_USART_2_irq_handler:
 836              	.LFB1375:
  95:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_USART_generic_irq_handler( UVOS_USART_2_id );
 837              		.loc 1 95 1 is_stmt 1 view -0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841 0000 08B5     		push	{r3, lr}
 842              	.LCFI12:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 80


 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 3, -8
 845              		.cfi_offset 14, -4
  96:flight/uvos/stm32f4xx/uvos_usart.c **** }
 846              		.loc 1 96 3 view .LVU247
 847 0002 024B     		ldr	r3, .L49
 848 0004 1868     		ldr	r0, [r3]
 849 0006 FFF7FEFF 		bl	UVOS_USART_generic_irq_handler
 850              	.LVL56:
  97:flight/uvos/stm32f4xx/uvos_usart.c **** 
 851              		.loc 1 97 1 is_stmt 0 view .LVU248
 852 000a 08BD     		pop	{r3, pc}
 853              	.L50:
 854              		.align	2
 855              	.L49:
 856 000c 00000000 		.word	.LANCHOR3
 857              		.cfi_endproc
 858              	.LFE1375:
 860              		.global	USART2_IRQHandler
 861              		.thumb_set USART2_IRQHandler,UVOS_USART_2_irq_handler
 862              		.section	.text.UVOS_USART_3_irq_handler,"ax",%progbits
 863              		.align	1
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
 868              	UVOS_USART_3_irq_handler:
 869              	.LFB1376:
 102:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_USART_generic_irq_handler( UVOS_USART_3_id );
 870              		.loc 1 102 1 is_stmt 1 view -0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 0
 873              		@ frame_needed = 0, uses_anonymous_args = 0
 874 0000 08B5     		push	{r3, lr}
 875              	.LCFI13:
 876              		.cfi_def_cfa_offset 8
 877              		.cfi_offset 3, -8
 878              		.cfi_offset 14, -4
 103:flight/uvos/stm32f4xx/uvos_usart.c **** }
 879              		.loc 1 103 3 view .LVU250
 880 0002 0020     		movs	r0, #0
 881 0004 FFF7FEFF 		bl	UVOS_USART_generic_irq_handler
 882              	.LVL57:
 104:flight/uvos/stm32f4xx/uvos_usart.c **** 
 883              		.loc 1 104 1 is_stmt 0 view .LVU251
 884 0008 08BD     		pop	{r3, pc}
 885              		.cfi_endproc
 886              	.LFE1376:
 888              		.global	USART3_IRQHandler
 889              		.thumb_set USART3_IRQHandler,UVOS_USART_3_irq_handler
 890              		.section	.text.UVOS_USART_4_irq_handler,"ax",%progbits
 891              		.align	1
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 896              	UVOS_USART_4_irq_handler:
 897              	.LFB1377:
 109:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_USART_generic_irq_handler( UVOS_USART_4_id );
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 81


 898              		.loc 1 109 1 is_stmt 1 view -0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902 0000 08B5     		push	{r3, lr}
 903              	.LCFI14:
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 3, -8
 906              		.cfi_offset 14, -4
 110:flight/uvos/stm32f4xx/uvos_usart.c **** }
 907              		.loc 1 110 3 view .LVU253
 908 0002 0020     		movs	r0, #0
 909 0004 FFF7FEFF 		bl	UVOS_USART_generic_irq_handler
 910              	.LVL58:
 111:flight/uvos/stm32f4xx/uvos_usart.c **** 
 911              		.loc 1 111 1 is_stmt 0 view .LVU254
 912 0008 08BD     		pop	{r3, pc}
 913              		.cfi_endproc
 914              	.LFE1377:
 916              		.global	USART4_IRQHandler
 917              		.thumb_set USART4_IRQHandler,UVOS_USART_4_irq_handler
 918              		.section	.text.UVOS_USART_5_irq_handler,"ax",%progbits
 919              		.align	1
 920              		.syntax unified
 921              		.thumb
 922              		.thumb_func
 924              	UVOS_USART_5_irq_handler:
 925              	.LFB1378:
 116:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_USART_generic_irq_handler( UVOS_USART_5_id );
 926              		.loc 1 116 1 is_stmt 1 view -0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930 0000 08B5     		push	{r3, lr}
 931              	.LCFI15:
 932              		.cfi_def_cfa_offset 8
 933              		.cfi_offset 3, -8
 934              		.cfi_offset 14, -4
 117:flight/uvos/stm32f4xx/uvos_usart.c **** }
 935              		.loc 1 117 3 view .LVU256
 936 0002 0020     		movs	r0, #0
 937 0004 FFF7FEFF 		bl	UVOS_USART_generic_irq_handler
 938              	.LVL59:
 118:flight/uvos/stm32f4xx/uvos_usart.c **** 
 939              		.loc 1 118 1 is_stmt 0 view .LVU257
 940 0008 08BD     		pop	{r3, pc}
 941              		.cfi_endproc
 942              	.LFE1378:
 944              		.global	USART5_IRQHandler
 945              		.thumb_set USART5_IRQHandler,UVOS_USART_5_irq_handler
 946              		.section	.text.UVOS_USART_6_irq_handler,"ax",%progbits
 947              		.align	1
 948              		.syntax unified
 949              		.thumb
 950              		.thumb_func
 952              	UVOS_USART_6_irq_handler:
 953              	.LFB1379:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 82


 123:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_USART_generic_irq_handler( UVOS_USART_6_id );
 954              		.loc 1 123 1 is_stmt 1 view -0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958 0000 08B5     		push	{r3, lr}
 959              	.LCFI16:
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 3, -8
 962              		.cfi_offset 14, -4
 124:flight/uvos/stm32f4xx/uvos_usart.c **** }
 963              		.loc 1 124 3 view .LVU259
 964 0002 024B     		ldr	r3, .L59
 965 0004 1868     		ldr	r0, [r3]
 966 0006 FFF7FEFF 		bl	UVOS_USART_generic_irq_handler
 967              	.LVL60:
 125:flight/uvos/stm32f4xx/uvos_usart.c **** 
 968              		.loc 1 125 1 is_stmt 0 view .LVU260
 969 000a 08BD     		pop	{r3, pc}
 970              	.L60:
 971              		.align	2
 972              	.L59:
 973 000c 00000000 		.word	.LANCHOR4
 974              		.cfi_endproc
 975              	.LFE1379:
 977              		.global	USART6_IRQHandler
 978              		.thumb_set USART6_IRQHandler,UVOS_USART_6_irq_handler
 979              		.section	.text.UVOS_USART_Init,"ax",%progbits
 980              		.align	1
 981              		.global	UVOS_USART_Init
 982              		.syntax unified
 983              		.thumb
 984              		.thumb_func
 986              	UVOS_USART_Init:
 987              	.LVL61:
 988              	.LFB1380:
 131:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_DEBUG_Assert( usart_id );
 989              		.loc 1 131 1 is_stmt 1 view -0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 0
 992              		@ frame_needed = 0, uses_anonymous_args = 0
 131:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_DEBUG_Assert( usart_id );
 993              		.loc 1 131 1 is_stmt 0 view .LVU262
 994 0000 70B5     		push	{r4, r5, r6, lr}
 995              	.LCFI17:
 996              		.cfi_def_cfa_offset 16
 997              		.cfi_offset 4, -16
 998              		.cfi_offset 5, -12
 999              		.cfi_offset 6, -8
 1000              		.cfi_offset 14, -4
 1001 0002 0646     		mov	r6, r0
 1002 0004 0D46     		mov	r5, r1
 132:flight/uvos/stm32f4xx/uvos_usart.c ****   UVOS_DEBUG_Assert( cfg );
 1003              		.loc 1 132 32 is_stmt 1 view .LVU263
 133:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1004              		.loc 1 133 27 view .LVU264
 135:flight/uvos/stm32f4xx/uvos_usart.c **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 83


 1005              		.loc 1 135 3 view .LVU265
 137:flight/uvos/stm32f4xx/uvos_usart.c ****   if ( !usart_dev ) {
 1006              		.loc 1 137 3 view .LVU266
 137:flight/uvos/stm32f4xx/uvos_usart.c ****   if ( !usart_dev ) {
 1007              		.loc 1 137 15 is_stmt 0 view .LVU267
 1008 0006 FFF7FEFF 		bl	UVOS_USART_alloc
 1009              	.LVL62:
 138:flight/uvos/stm32f4xx/uvos_usart.c ****     goto out_fail;
 1010              		.loc 1 138 3 is_stmt 1 view .LVU268
 138:flight/uvos/stm32f4xx/uvos_usart.c ****     goto out_fail;
 1011              		.loc 1 138 6 is_stmt 0 view .LVU269
 1012 000a 0028     		cmp	r0, #0
 1013 000c 4FD0     		beq	.L69
 1014 000e 0446     		mov	r4, r0
 143:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1015              		.loc 1 143 3 is_stmt 1 view .LVU270
 143:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1016              		.loc 1 143 18 is_stmt 0 view .LVU271
 1017 0010 4560     		str	r5, [r0, #4]
 146:flight/uvos/stm32f4xx/uvos_usart.c ****   LL_GPIO_Init( usart_dev->cfg->tx.gpio, ( LL_GPIO_InitTypeDef * )&usart_dev->cfg->tx.init );
 1018              		.loc 1 146 3 is_stmt 1 view .LVU272
 1019 0012 05F12401 		add	r1, r5, #36
 1020 0016 286A     		ldr	r0, [r5, #32]
 1021              	.LVL63:
 146:flight/uvos/stm32f4xx/uvos_usart.c ****   LL_GPIO_Init( usart_dev->cfg->tx.gpio, ( LL_GPIO_InitTypeDef * )&usart_dev->cfg->tx.init );
 1022              		.loc 1 146 3 is_stmt 0 view .LVU273
 1023 0018 FFF7FEFF 		bl	LL_GPIO_Init
 1024              	.LVL64:
 147:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1025              		.loc 1 147 3 is_stmt 1 view .LVU274
 147:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1026              		.loc 1 147 26 is_stmt 0 view .LVU275
 1027 001c 6368     		ldr	r3, [r4, #4]
 147:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1028              		.loc 1 147 3 view .LVU276
 1029 001e 03F14001 		add	r1, r3, #64
 1030 0022 D86B     		ldr	r0, [r3, #60]
 1031 0024 FFF7FEFF 		bl	LL_GPIO_Init
 1032              	.LVL65:
 150:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1033              		.loc 1 150 3 is_stmt 1 view .LVU277
 150:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1034              		.loc 1 150 66 is_stmt 0 view .LVU278
 1035 0028 6168     		ldr	r1, [r4, #4]
 150:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1036              		.loc 1 150 3 view .LVU279
 1037 002a 51F8040B 		ldr	r0, [r1], #4
 1038 002e FFF7FEFF 		bl	LL_USART_Init
 1039              	.LVL66:
 152:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1040              		.loc 1 152 3 is_stmt 1 view .LVU280
 152:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1041              		.loc 1 152 13 is_stmt 0 view .LVU281
 1042 0032 3460     		str	r4, [r6]
 155:flight/uvos/stm32f4xx/uvos_usart.c ****   case ( uint32_t )USART1:
 1043              		.loc 1 155 3 is_stmt 1 view .LVU282
 155:flight/uvos/stm32f4xx/uvos_usart.c ****   case ( uint32_t )USART1:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 84


 1044              		.loc 1 155 33 is_stmt 0 view .LVU283
 1045 0034 6068     		ldr	r0, [r4, #4]
 155:flight/uvos/stm32f4xx/uvos_usart.c ****   case ( uint32_t )USART1:
 1046              		.loc 1 155 38 view .LVU284
 1047 0036 0368     		ldr	r3, [r0]
 155:flight/uvos/stm32f4xx/uvos_usart.c ****   case ( uint32_t )USART1:
 1048              		.loc 1 155 3 view .LVU285
 1049 0038 1E4A     		ldr	r2, .L72
 1050 003a 9342     		cmp	r3, r2
 1051 003c 2ED0     		beq	.L63
 1052 003e 02F58062 		add	r2, r2, #1024
 1053 0042 9342     		cmp	r3, r2
 1054 0044 30D0     		beq	.L64
 1055 0046 A2F55042 		sub	r2, r2, #53248
 1056 004a 9342     		cmp	r3, r2
 1057 004c 29D0     		beq	.L71
 1058              	.L66:
 177:flight/uvos/stm32f4xx/uvos_usart.c ****   // USART_ITConfig( usart_dev->cfg->regs, USART_IT_RXNE, ENABLE );
 1059              		.loc 1 177 3 is_stmt 1 view .LVU286
 1060 004e 6030     		adds	r0, r0, #96
 1061 0050 FFF7FEFF 		bl	NVIC_Init
 1062              	.LVL67:
 179:flight/uvos/stm32f4xx/uvos_usart.c ****   // USART_ITConfig( usart_dev->cfg->regs, USART_IT_TXE, ENABLE );
 1063              		.loc 1 179 3 view .LVU287
 179:flight/uvos/stm32f4xx/uvos_usart.c ****   // USART_ITConfig( usart_dev->cfg->regs, USART_IT_TXE, ENABLE );
 1064              		.loc 1 179 36 is_stmt 0 view .LVU288
 1065 0054 6368     		ldr	r3, [r4, #4]
 179:flight/uvos/stm32f4xx/uvos_usart.c ****   // USART_ITConfig( usart_dev->cfg->regs, USART_IT_TXE, ENABLE );
 1066              		.loc 1 179 3 view .LVU289
 1067 0056 1A68     		ldr	r2, [r3]
 1068              	.LVL68:
 1069              	.LBB95:
 1070              	.LBI95:
2036:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 1071              		.loc 2 2036 22 is_stmt 1 view .LVU290
 1072              	.L67:
 1073              	.LBE95:
2038:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1074              		.loc 2 2038 3 view .LVU291
 1075              	.LBB101:
 1076              	.LBB96:
2038:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1077              		.loc 2 2038 3 view .LVU292
2038:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1078              		.loc 2 2038 3 view .LVU293
2038:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1079              		.loc 2 2038 3 view .LVU294
 1080              	.LBB97:
 1081              	.LBI97:
1068:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 1082              		.loc 3 1068 31 view .LVU295
 1083              	.LBB98:
1070:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 1084              		.loc 3 1070 5 view .LVU296
1072:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1085              		.loc 3 1072 4 view .LVU297
 1086 0058 02F10C03 		add	r3, r2, #12
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 85


 1087              	.LVL69:
1072:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1088              		.loc 3 1072 4 is_stmt 0 view .LVU298
 1089              		.syntax unified
 1090              	@ 1072 "./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h" 1
 1091 005c 53E8003F 		ldrex r3, [r3]
 1092              	@ 0 "" 2
 1093              	.LVL70:
1073:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 1094              		.loc 3 1073 4 is_stmt 1 view .LVU299
1073:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 1095              		.loc 3 1073 4 is_stmt 0 view .LVU300
 1096              		.thumb
 1097              		.syntax unified
 1098              	.LBE98:
 1099              	.LBE97:
2038:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1100              		.loc 2 2038 3 view .LVU301
 1101 0060 43F02003 		orr	r3, r3, #32
 1102              	.LVL71:
2038:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1103              		.loc 2 2038 3 is_stmt 1 view .LVU302
 1104              	.LBB99:
 1105              	.LBI99:
1119:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 1106              		.loc 3 1119 31 view .LVU303
 1107              	.LBB100:
1121:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 1108              		.loc 3 1121 4 view .LVU304
1123:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1109              		.loc 3 1123 4 view .LVU305
 1110 0064 02F10C00 		add	r0, r2, #12
 1111              	.LVL72:
1123:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1112              		.loc 3 1123 4 is_stmt 0 view .LVU306
 1113              		.syntax unified
 1114              	@ 1123 "./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h" 1
 1115 0068 40E80031 		strex r1, r3, [r0]
 1116              	@ 0 "" 2
 1117              	.LVL73:
 1118              		.loc 3 1124 4 is_stmt 1 view .LVU307
 1119              		.loc 3 1124 4 is_stmt 0 view .LVU308
 1120              		.thumb
 1121              		.syntax unified
 1122              	.LBE100:
 1123              	.LBE99:
2038:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1124              		.loc 2 2038 3 view .LVU309
 1125 006c 0029     		cmp	r1, #0
 1126 006e F3D1     		bne	.L67
 1127              	.LBE96:
 1128              	.LBE101:
2038:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1129              		.loc 2 2038 3 is_stmt 1 view .LVU310
 1130              	.LVL74:
 181:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1131              		.loc 1 181 3 view .LVU311
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 86


 181:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1132              		.loc 1 181 35 is_stmt 0 view .LVU312
 1133 0070 6368     		ldr	r3, [r4, #4]
 181:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1134              		.loc 1 181 3 view .LVU313
 1135 0072 1A68     		ldr	r2, [r3]
 1136              	.LVL75:
 1137              	.LBB102:
 1138              	.LBI102:
2058:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 1139              		.loc 2 2058 22 is_stmt 1 view .LVU314
 1140              	.L68:
 1141              	.LBE102:
2060:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1142              		.loc 2 2060 3 view .LVU315
 1143              	.LBB108:
 1144              	.LBB103:
2060:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1145              		.loc 2 2060 3 view .LVU316
2060:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1146              		.loc 2 2060 3 view .LVU317
2060:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1147              		.loc 2 2060 3 view .LVU318
 1148              	.LBB104:
 1149              	.LBI104:
1068:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 1150              		.loc 3 1068 31 view .LVU319
 1151              	.LBB105:
1070:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 1152              		.loc 3 1070 5 view .LVU320
1072:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1153              		.loc 3 1072 4 view .LVU321
 1154 0074 02F10C03 		add	r3, r2, #12
 1155              	.LVL76:
1072:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1156              		.loc 3 1072 4 is_stmt 0 view .LVU322
 1157              		.syntax unified
 1158              	@ 1072 "./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h" 1
 1159 0078 53E8003F 		ldrex r3, [r3]
 1160              	@ 0 "" 2
 1161              	.LVL77:
1073:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 1162              		.loc 3 1073 4 is_stmt 1 view .LVU323
1073:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** }
 1163              		.loc 3 1073 4 is_stmt 0 view .LVU324
 1164              		.thumb
 1165              		.syntax unified
 1166              	.LBE105:
 1167              	.LBE104:
2060:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1168              		.loc 2 2060 3 view .LVU325
 1169 007c 43F08003 		orr	r3, r3, #128
 1170              	.LVL78:
2060:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1171              		.loc 2 2060 3 is_stmt 1 view .LVU326
 1172              	.LBB106:
 1173              	.LBI106:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 87


1119:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** {
 1174              		.loc 3 1119 31 view .LVU327
 1175              	.LBB107:
1121:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h **** 
 1176              		.loc 3 1121 4 view .LVU328
1123:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1177              		.loc 3 1123 4 view .LVU329
 1178 0080 02F10C00 		add	r0, r2, #12
 1179              	.LVL79:
1123:./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1180              		.loc 3 1123 4 is_stmt 0 view .LVU330
 1181              		.syntax unified
 1182              	@ 1123 "./flight/uvos/stm32f4xx/libraries/CMSIS/Include/cmsis_gcc.h" 1
 1183 0084 40E80031 		strex r1, r3, [r0]
 1184              	@ 0 "" 2
 1185              	.LVL80:
 1186              		.loc 3 1124 4 is_stmt 1 view .LVU331
 1187              		.loc 3 1124 4 is_stmt 0 view .LVU332
 1188              		.thumb
 1189              		.syntax unified
 1190              	.LBE107:
 1191              	.LBE106:
2060:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1192              		.loc 2 2060 3 view .LVU333
 1193 0088 0029     		cmp	r1, #0
 1194 008a F3D1     		bne	.L68
 1195              	.LBE103:
 1196              	.LBE108:
2060:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1197              		.loc 2 2060 3 is_stmt 1 view .LVU334
 1198              	.LVL81:
 187:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1199              		.loc 1 187 3 view .LVU335
 187:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1200              		.loc 1 187 29 is_stmt 0 view .LVU336
 1201 008c 6368     		ldr	r3, [r4, #4]
 187:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1202              		.loc 1 187 3 view .LVU337
 1203 008e 1A68     		ldr	r2, [r3]
 1204              	.LVL82:
 1205              	.LBB109:
 1206              	.LBI109:
 411:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 1207              		.loc 2 411 22 is_stmt 1 view .LVU338
 1208              	.LBB110:
 413:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1209              		.loc 2 413 3 view .LVU339
 1210 0090 D368     		ldr	r3, [r2, #12]
 1211 0092 43F40053 		orr	r3, r3, #8192
 1212 0096 D360     		str	r3, [r2, #12]
 1213              	.LVL83:
 413:./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 1214              		.loc 2 413 3 is_stmt 0 view .LVU340
 1215              	.LBE110:
 1216              	.LBE109:
 189:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1217              		.loc 1 189 3 is_stmt 1 view .LVU341
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 88


 189:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1218              		.loc 1 189 10 is_stmt 0 view .LVU342
 1219 0098 0020     		movs	r0, #0
 1220              	.LVL84:
 1221              	.L61:
 193:flight/uvos/stm32f4xx/uvos_usart.c **** 
 1222              		.loc 1 193 1 view .LVU343
 1223 009a 70BD     		pop	{r4, r5, r6, pc}
 1224              	.LVL85:
 1225              	.L63:
 157:flight/uvos/stm32f4xx/uvos_usart.c ****     break;
 1226              		.loc 1 157 5 is_stmt 1 view .LVU344
 157:flight/uvos/stm32f4xx/uvos_usart.c ****     break;
 1227              		.loc 1 157 21 is_stmt 0 view .LVU345
 1228 009c 064B     		ldr	r3, .L72+4
 1229 009e 1C60     		str	r4, [r3]
 158:flight/uvos/stm32f4xx/uvos_usart.c ****   case ( uint32_t )USART2:
 1230              		.loc 1 158 5 is_stmt 1 view .LVU346
 1231 00a0 D5E7     		b	.L66
 1232              	.L71:
 160:flight/uvos/stm32f4xx/uvos_usart.c ****     break;
 1233              		.loc 1 160 5 view .LVU347
 160:flight/uvos/stm32f4xx/uvos_usart.c ****     break;
 1234              		.loc 1 160 21 is_stmt 0 view .LVU348
 1235 00a2 064B     		ldr	r3, .L72+8
 1236 00a4 1C60     		str	r4, [r3]
 161:flight/uvos/stm32f4xx/uvos_usart.c **** #if !defined(STM32F401xC) && !defined(STM32F401xE) && !defined(STM32F411xE)
 1237              		.loc 1 161 5 is_stmt 1 view .LVU349
 1238 00a6 D2E7     		b	.L66
 1239              	.L64:
 174:flight/uvos/stm32f4xx/uvos_usart.c ****     break;
 1240              		.loc 1 174 5 view .LVU350
 174:flight/uvos/stm32f4xx/uvos_usart.c ****     break;
 1241              		.loc 1 174 21 is_stmt 0 view .LVU351
 1242 00a8 054B     		ldr	r3, .L72+12
 1243 00aa 1C60     		str	r4, [r3]
 175:flight/uvos/stm32f4xx/uvos_usart.c ****   }
 1244              		.loc 1 175 5 is_stmt 1 view .LVU352
 1245 00ac CFE7     		b	.L66
 1246              	.LVL86:
 1247              	.L69:
 192:flight/uvos/stm32f4xx/uvos_usart.c **** }
 1248              		.loc 1 192 10 is_stmt 0 view .LVU353
 1249 00ae 4FF0FF30 		mov	r0, #-1
 1250              	.LVL87:
 1251              	.LDL1:
 192:flight/uvos/stm32f4xx/uvos_usart.c **** }
 1252              		.loc 1 192 10 view .LVU354
 1253 00b2 F2E7     		b	.L61
 1254              	.L73:
 1255              		.align	2
 1256              	.L72:
 1257 00b4 00100140 		.word	1073811456
 1258 00b8 00000000 		.word	.LANCHOR2
 1259 00bc 00000000 		.word	.LANCHOR3
 1260 00c0 00000000 		.word	.LANCHOR4
 1261              		.cfi_endproc
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 89


 1262              	.LFE1380:
 1264              		.global	uvos_usart_com_driver
 1265              		.section	.bss.UVOS_USART_1_id,"aw",%nobits
 1266              		.align	2
 1267              		.set	.LANCHOR2,. + 0
 1270              	UVOS_USART_1_id:
 1271 0000 00000000 		.space	4
 1272              		.section	.bss.UVOS_USART_2_id,"aw",%nobits
 1273              		.align	2
 1274              		.set	.LANCHOR3,. + 0
 1277              	UVOS_USART_2_id:
 1278 0000 00000000 		.space	4
 1279              		.section	.bss.UVOS_USART_6_id,"aw",%nobits
 1280              		.align	2
 1281              		.set	.LANCHOR4,. + 0
 1284              	UVOS_USART_6_id:
 1285 0000 00000000 		.space	4
 1286              		.section	.bss.uvos_usart_devs,"aw",%nobits
 1287              		.align	2
 1288              		.set	.LANCHOR1,. + 0
 1291              	uvos_usart_devs:
 1292 0000 00000000 		.space	120
 1292      00000000 
 1292      00000000 
 1292      00000000 
 1292      00000000 
 1293              		.section	.bss.uvos_usart_num_devs,"aw",%nobits
 1294              		.set	.LANCHOR0,. + 0
 1297              	uvos_usart_num_devs:
 1298 0000 00       		.space	1
 1299              		.section	.rodata.uvos_usart_com_driver,"a"
 1300              		.align	2
 1303              	uvos_usart_com_driver:
 1304 0000 00000000 		.word	UVOS_USART_ChangeBaud
 1305 0004 00000000 		.word	UVOS_USART_TxStart
 1306 0008 00000000 		.word	UVOS_USART_RxStart
 1307 000c 00000000 		.word	UVOS_USART_RegisterRxCallback
 1308 0010 00000000 		.word	UVOS_USART_RegisterTxCallback
 1309 0014 00000000 		.space	8
 1309      00000000 
 1310              		.text
 1311              	.Letext0:
 1312              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10.3-2021.10\\arm-none-eabi\\include
 1313              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10.3-2021.10\\arm-none-eabi\\include
 1314              		.file 6 "./flight/uvos/stm32f4xx/libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1315              		.file 7 "./flight/uvos/stm32f4xx/libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1316              		.file 8 "./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_gpio.h"
 1317              		.file 9 "./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
 1318              		.file 10 "./flight/uvos/stm32f4xx/libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h"
 1319              		.file 11 "./flight/uvos/inc/misc.h"
 1320              		.file 12 "./flight/uvos/inc/uvos_com.h"
 1321              		.file 13 "./flight/uvos/inc/uvos_stm32.h"
 1322              		.file 14 "./flight/uvos/inc/uvos_usart_priv.h"
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 90


DEFINED SYMBOLS
                            *ABS*:00000000 uvos_usart.c
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:20     .text.UVOS_USART_validate:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:25     .text.UVOS_USART_validate:00000000 UVOS_USART_validate
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:48     .text.UVOS_USART_validate:00000010 $d
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:53     .text.UVOS_USART_RxStart:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:58     .text.UVOS_USART_RxStart:00000000 UVOS_USART_RxStart
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:163    .text.UVOS_USART_TxStart:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:168    .text.UVOS_USART_TxStart:00000000 UVOS_USART_TxStart
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:271    .text.UVOS_USART_RegisterRxCallback:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:276    .text.UVOS_USART_RegisterRxCallback:00000000 UVOS_USART_RegisterRxCallback
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:322    .text.UVOS_USART_RegisterTxCallback:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:327    .text.UVOS_USART_RegisterTxCallback:00000000 UVOS_USART_RegisterTxCallback
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:373    .text.UVOS_USART_generic_irq_handler:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:378    .text.UVOS_USART_generic_irq_handler:00000000 UVOS_USART_generic_irq_handler
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:661    .text.UVOS_USART_ChangeBaud:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:666    .text.UVOS_USART_ChangeBaud:00000000 UVOS_USART_ChangeBaud
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:735    .text.UVOS_USART_alloc:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:740    .text.UVOS_USART_alloc:00000000 UVOS_USART_alloc
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:790    .text.UVOS_USART_alloc:00000038 $d
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:797    .text.UVOS_USART_1_irq_handler:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:802    .text.UVOS_USART_1_irq_handler:00000000 UVOS_USART_1_irq_handler
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:823    .text.UVOS_USART_1_irq_handler:0000000c $d
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:802    .text.UVOS_USART_1_irq_handler:00000000 USART1_IRQHandler
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:830    .text.UVOS_USART_2_irq_handler:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:835    .text.UVOS_USART_2_irq_handler:00000000 UVOS_USART_2_irq_handler
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:856    .text.UVOS_USART_2_irq_handler:0000000c $d
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:835    .text.UVOS_USART_2_irq_handler:00000000 USART2_IRQHandler
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:863    .text.UVOS_USART_3_irq_handler:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:868    .text.UVOS_USART_3_irq_handler:00000000 UVOS_USART_3_irq_handler
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:868    .text.UVOS_USART_3_irq_handler:00000000 USART3_IRQHandler
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:891    .text.UVOS_USART_4_irq_handler:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:896    .text.UVOS_USART_4_irq_handler:00000000 UVOS_USART_4_irq_handler
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:896    .text.UVOS_USART_4_irq_handler:00000000 USART4_IRQHandler
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:919    .text.UVOS_USART_5_irq_handler:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:924    .text.UVOS_USART_5_irq_handler:00000000 UVOS_USART_5_irq_handler
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:924    .text.UVOS_USART_5_irq_handler:00000000 USART5_IRQHandler
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:947    .text.UVOS_USART_6_irq_handler:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:952    .text.UVOS_USART_6_irq_handler:00000000 UVOS_USART_6_irq_handler
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:973    .text.UVOS_USART_6_irq_handler:0000000c $d
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:952    .text.UVOS_USART_6_irq_handler:00000000 USART6_IRQHandler
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:980    .text.UVOS_USART_Init:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:986    .text.UVOS_USART_Init:00000000 UVOS_USART_Init
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:1257   .text.UVOS_USART_Init:000000b4 $d
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:1303   .rodata.uvos_usart_com_driver:00000000 uvos_usart_com_driver
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:1266   .bss.UVOS_USART_1_id:00000000 $d
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:1270   .bss.UVOS_USART_1_id:00000000 UVOS_USART_1_id
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:1273   .bss.UVOS_USART_2_id:00000000 $d
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:1277   .bss.UVOS_USART_2_id:00000000 UVOS_USART_2_id
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:1280   .bss.UVOS_USART_6_id:00000000 $d
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:1284   .bss.UVOS_USART_6_id:00000000 UVOS_USART_6_id
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:1287   .bss.uvos_usart_devs:00000000 $d
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:1291   .bss.uvos_usart_devs:00000000 uvos_usart_devs
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:1297   .bss.uvos_usart_num_devs:00000000 uvos_usart_num_devs
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:1298   .bss.uvos_usart_num_devs:00000000 $d
C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s:1300   .rodata.uvos_usart_com_driver:00000000 $d

ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccaANC7d.s 			page 91


UNDEFINED SYMBOLS
LL_USART_Init
LL_GPIO_Init
NVIC_Init
