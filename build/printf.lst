ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"printf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.atou_,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	atou_:
  26              	.LVL0:
  27              	.LFB12:
  28              		.file 1 "flight/libraries/printf/printf.c"
   1:flight/libraries/printf/printf.c **** /**
   2:flight/libraries/printf/printf.c ****  * @author (c) Eyal Rozenberg <eyalroz1@gmx.com>
   3:flight/libraries/printf/printf.c ****  *             2021-2022, Haifa, Palestine/Israel
   4:flight/libraries/printf/printf.c ****  * @author (c) Marco Paland (info@paland.com)
   5:flight/libraries/printf/printf.c ****  *             2014-2019, PALANDesign Hannover, Germany
   6:flight/libraries/printf/printf.c ****  *
   7:flight/libraries/printf/printf.c ****  * @note Others have made smaller contributions to this file: see the
   8:flight/libraries/printf/printf.c ****  * contributors page at https://github.com/eyalroz/printf/graphs/contributors
   9:flight/libraries/printf/printf.c ****  * or ask one of the authors. The original code for exponential specifiers was
  10:flight/libraries/printf/printf.c ****  * contributed by Martijn Jasperse <m.jasperse@gmail.com>.
  11:flight/libraries/printf/printf.c ****  *
  12:flight/libraries/printf/printf.c ****  * @brief Small stand-alone implementation of the printf family of functions
  13:flight/libraries/printf/printf.c ****  * (`(v)printf`, `(v)s(n)printf` etc., geared towards use on embedded systems with
  14:flight/libraries/printf/printf.c ****  * a very limited resources.
  15:flight/libraries/printf/printf.c ****  *
  16:flight/libraries/printf/printf.c ****  * @note the implementations are thread-safe; re-entrant; use no functions from
  17:flight/libraries/printf/printf.c ****  * the standard library; and do not dynamically allocate any memory.
  18:flight/libraries/printf/printf.c ****  *
  19:flight/libraries/printf/printf.c ****  * @license The MIT License (MIT)
  20:flight/libraries/printf/printf.c ****  *
  21:flight/libraries/printf/printf.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
  22:flight/libraries/printf/printf.c ****  * of this software and associated documentation files (the "Software"), to deal
  23:flight/libraries/printf/printf.c ****  * in the Software without restriction, including without limitation the rights
  24:flight/libraries/printf/printf.c ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  25:flight/libraries/printf/printf.c ****  * copies of the Software, and to permit persons to whom the Software is
  26:flight/libraries/printf/printf.c ****  * furnished to do so, subject to the following conditions:
  27:flight/libraries/printf/printf.c ****  *
  28:flight/libraries/printf/printf.c ****  * The above copyright notice and this permission notice shall be included in
  29:flight/libraries/printf/printf.c ****  * all copies or substantial portions of the Software.
  30:flight/libraries/printf/printf.c ****  *
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 2


  31:flight/libraries/printf/printf.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  32:flight/libraries/printf/printf.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  33:flight/libraries/printf/printf.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  34:flight/libraries/printf/printf.c ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  35:flight/libraries/printf/printf.c ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  36:flight/libraries/printf/printf.c ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  37:flight/libraries/printf/printf.c ****  * THE SOFTWARE.
  38:flight/libraries/printf/printf.c ****  */
  39:flight/libraries/printf/printf.c **** 
  40:flight/libraries/printf/printf.c **** #ifdef __cplusplus
  41:flight/libraries/printf/printf.c **** #include <cstdint>
  42:flight/libraries/printf/printf.c **** #include <climits>
  43:flight/libraries/printf/printf.c **** extern "C" {
  44:flight/libraries/printf/printf.c **** #else
  45:flight/libraries/printf/printf.c **** #include <stdbool.h>
  46:flight/libraries/printf/printf.c **** #include <stdint.h>
  47:flight/libraries/printf/printf.c **** #include <limits.h>
  48:flight/libraries/printf/printf.c **** #endif // __cplusplus
  49:flight/libraries/printf/printf.c **** 
  50:flight/libraries/printf/printf.c **** // Define this globally (e.g. gcc -DPRINTF_INCLUDE_CONFIG_H ...) to include the
  51:flight/libraries/printf/printf.c **** // printf_config.h header file
  52:flight/libraries/printf/printf.c **** #if PRINTF_INCLUDE_CONFIG_H
  53:flight/libraries/printf/printf.c **** #include "printf_config.h"
  54:flight/libraries/printf/printf.c **** #endif
  55:flight/libraries/printf/printf.c **** 
  56:flight/libraries/printf/printf.c **** #include <stdbool.h>
  57:flight/libraries/printf/printf.c **** #include <stdint.h>
  58:flight/libraries/printf/printf.c **** 
  59:flight/libraries/printf/printf.c **** #include <printf.h>
  60:flight/libraries/printf/printf.c **** 
  61:flight/libraries/printf/printf.c **** #if PRINTF_ALIAS_STANDARD_FUNCTION_NAMES
  62:flight/libraries/printf/printf.c **** # define printf_    printf
  63:flight/libraries/printf/printf.c **** # define sprintf_   sprintf
  64:flight/libraries/printf/printf.c **** # define vsprintf_  vsprintf
  65:flight/libraries/printf/printf.c **** # define snprintf_  snprintf
  66:flight/libraries/printf/printf.c **** # define vsnprintf_ vsnprintf
  67:flight/libraries/printf/printf.c **** # define vprintf_   vprintf
  68:flight/libraries/printf/printf.c **** #endif
  69:flight/libraries/printf/printf.c **** 
  70:flight/libraries/printf/printf.c **** 
  71:flight/libraries/printf/printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  72:flight/libraries/printf/printf.c **** // numeric number including padded zeros (dynamically created on stack)
  73:flight/libraries/printf/printf.c **** #ifndef PRINTF_INTEGER_BUFFER_SIZE
  74:flight/libraries/printf/printf.c **** #define PRINTF_INTEGER_BUFFER_SIZE    32
  75:flight/libraries/printf/printf.c **** #endif
  76:flight/libraries/printf/printf.c **** 
  77:flight/libraries/printf/printf.c **** // size of the fixed (on-stack) buffer for printing individual decimal numbers.
  78:flight/libraries/printf/printf.c **** // this must be big enough to hold one converted floating-point value including
  79:flight/libraries/printf/printf.c **** // padded zeros.
  80:flight/libraries/printf/printf.c **** #ifndef PRINTF_DECIMAL_BUFFER_SIZE
  81:flight/libraries/printf/printf.c **** #define PRINTF_DECIMAL_BUFFER_SIZE    32
  82:flight/libraries/printf/printf.c **** #endif
  83:flight/libraries/printf/printf.c **** 
  84:flight/libraries/printf/printf.c **** // Support for the decimal notation floating point conversion specifiers (%f, %F)
  85:flight/libraries/printf/printf.c **** #ifndef PRINTF_SUPPORT_DECIMAL_SPECIFIERS
  86:flight/libraries/printf/printf.c **** #define PRINTF_SUPPORT_DECIMAL_SPECIFIERS 1
  87:flight/libraries/printf/printf.c **** #endif
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 3


  88:flight/libraries/printf/printf.c **** 
  89:flight/libraries/printf/printf.c **** // Support for the exponential notation floating point conversion specifiers (%e, %g, %E, %G)
  90:flight/libraries/printf/printf.c **** #ifndef PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
  91:flight/libraries/printf/printf.c **** #define PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS 1
  92:flight/libraries/printf/printf.c **** #endif
  93:flight/libraries/printf/printf.c **** 
  94:flight/libraries/printf/printf.c **** // Support for the length write-back specifier (%n)
  95:flight/libraries/printf/printf.c **** #ifndef PRINTF_SUPPORT_WRITEBACK_SPECIFIER
  96:flight/libraries/printf/printf.c **** #define PRINTF_SUPPORT_WRITEBACK_SPECIFIER 1
  97:flight/libraries/printf/printf.c **** #endif
  98:flight/libraries/printf/printf.c **** 
  99:flight/libraries/printf/printf.c **** // Default precision for the floating point conversion specifiers (the C standard sets this at 6)
 100:flight/libraries/printf/printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
 101:flight/libraries/printf/printf.c **** #define PRINTF_DEFAULT_FLOAT_PRECISION  6
 102:flight/libraries/printf/printf.c **** #endif
 103:flight/libraries/printf/printf.c **** 
 104:flight/libraries/printf/printf.c **** // According to the C languages standard, printf() and related functions must be able to print any
 105:flight/libraries/printf/printf.c **** // integral number in floating-point notation, regardless of length, when using the %f specifier -
 106:flight/libraries/printf/printf.c **** // possibly hundreds of characters, potentially overflowing your buffers. In this implementation,
 107:flight/libraries/printf/printf.c **** // all values beyond this threshold are switched to exponential notation.
 108:flight/libraries/printf/printf.c **** #ifndef PRINTF_MAX_INTEGRAL_DIGITS_FOR_DECIMAL
 109:flight/libraries/printf/printf.c **** #define PRINTF_MAX_INTEGRAL_DIGITS_FOR_DECIMAL 9
 110:flight/libraries/printf/printf.c **** #endif
 111:flight/libraries/printf/printf.c **** 
 112:flight/libraries/printf/printf.c **** // Support for the long long integral types (with the ll, z and t length modifiers for specifiers
 113:flight/libraries/printf/printf.c **** // %d,%i,%o,%x,%X,%u, and with the %p specifier). Note: 'L' (long double) is not supported.
 114:flight/libraries/printf/printf.c **** #ifndef PRINTF_SUPPORT_LONG_LONG
 115:flight/libraries/printf/printf.c **** #define PRINTF_SUPPORT_LONG_LONG 1
 116:flight/libraries/printf/printf.c **** #endif
 117:flight/libraries/printf/printf.c **** 
 118:flight/libraries/printf/printf.c **** // The number of terms in a Taylor series expansion of log_10(x) to
 119:flight/libraries/printf/printf.c **** // use for approximation - including the power-zero term (i.e. the
 120:flight/libraries/printf/printf.c **** // value at the point of expansion).
 121:flight/libraries/printf/printf.c **** #ifndef PRINTF_LOG10_TAYLOR_TERMS
 122:flight/libraries/printf/printf.c **** #define PRINTF_LOG10_TAYLOR_TERMS 4
 123:flight/libraries/printf/printf.c **** #endif
 124:flight/libraries/printf/printf.c **** 
 125:flight/libraries/printf/printf.c **** #if PRINTF_LOG10_TAYLOR_TERMS <= 1
 126:flight/libraries/printf/printf.c **** #error "At least one non-constant Taylor expansion is necessary for the log10() calculation"
 127:flight/libraries/printf/printf.c **** #endif
 128:flight/libraries/printf/printf.c **** 
 129:flight/libraries/printf/printf.c **** 
 130:flight/libraries/printf/printf.c **** #define PRINTF_PREFER_DECIMAL     false
 131:flight/libraries/printf/printf.c **** #define PRINTF_PREFER_EXPONENTIAL true
 132:flight/libraries/printf/printf.c **** 
 133:flight/libraries/printf/printf.c **** ///////////////////////////////////////////////////////////////////////////////
 134:flight/libraries/printf/printf.c **** 
 135:flight/libraries/printf/printf.c **** // The following will convert the number-of-digits into an exponential-notation literal
 136:flight/libraries/printf/printf.c **** #define PRINTF_CONCATENATE(s1, s2) s1##s2
 137:flight/libraries/printf/printf.c **** #define PRINTF_EXPAND_THEN_CONCATENATE(s1, s2) PRINTF_CONCATENATE(s1, s2)
 138:flight/libraries/printf/printf.c **** #define PRINTF_FLOAT_NOTATION_THRESHOLD PRINTF_EXPAND_THEN_CONCATENATE(1e,PRINTF_MAX_INTEGRAL_DIGIT
 139:flight/libraries/printf/printf.c **** 
 140:flight/libraries/printf/printf.c **** // internal flag definitions
 141:flight/libraries/printf/printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
 142:flight/libraries/printf/printf.c **** #define FLAGS_LEFT      (1U <<  1U)
 143:flight/libraries/printf/printf.c **** #define FLAGS_PLUS      (1U <<  2U)
 144:flight/libraries/printf/printf.c **** #define FLAGS_SPACE     (1U <<  3U)
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 4


 145:flight/libraries/printf/printf.c **** #define FLAGS_HASH      (1U <<  4U)
 146:flight/libraries/printf/printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 147:flight/libraries/printf/printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 148:flight/libraries/printf/printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 149:flight/libraries/printf/printf.c **** #define FLAGS_INT       (1U <<  8U)
 150:flight/libraries/printf/printf.c ****   // Only used with PRINTF_SUPPORT_MSVC_STYLE_INTEGER_SPECIFIERS
 151:flight/libraries/printf/printf.c **** #define FLAGS_LONG      (1U <<  9U)
 152:flight/libraries/printf/printf.c **** #define FLAGS_LONG_LONG (1U << 10U)
 153:flight/libraries/printf/printf.c **** #define FLAGS_PRECISION (1U << 11U)
 154:flight/libraries/printf/printf.c **** #define FLAGS_ADAPT_EXP (1U << 12U)
 155:flight/libraries/printf/printf.c **** #define FLAGS_POINTER   (1U << 13U)
 156:flight/libraries/printf/printf.c ****   // Note: Similar, but not identical, effect as FLAGS_HASH
 157:flight/libraries/printf/printf.c **** #define FLAGS_SIGNED    (1U << 14U)
 158:flight/libraries/printf/printf.c ****   // Only used with PRINTF_SUPPORT_MSVC_STYLE_INTEGER_SPECIFIERS
 159:flight/libraries/printf/printf.c **** 
 160:flight/libraries/printf/printf.c **** #ifdef PRINTF_SUPPORT_MSVC_STYLE_INTEGER_SPECIFIERS
 161:flight/libraries/printf/printf.c **** 
 162:flight/libraries/printf/printf.c **** #define FLAGS_INT8 FLAGS_CHAR
 163:flight/libraries/printf/printf.c **** 
 164:flight/libraries/printf/printf.c **** 
 165:flight/libraries/printf/printf.c **** #if   (SHRT_MAX   == 32767LL)
 166:flight/libraries/printf/printf.c **** #define FLAGS_INT16       FLAGS_SHORT
 167:flight/libraries/printf/printf.c **** #elif (INT_MAX    == 32767LL)
 168:flight/libraries/printf/printf.c **** #define FLAGS_INT16       FLAGS_INT
 169:flight/libraries/printf/printf.c **** #elif (LONG_MAX   == 32767LL)
 170:flight/libraries/printf/printf.c **** #define FLAGS_INT16       FLAGS_LONG
 171:flight/libraries/printf/printf.c **** #elif (LLONG_MAX  == 32767LL)
 172:flight/libraries/printf/printf.c **** #define FLAGS_INT16       FLAGS_LONG_LONG
 173:flight/libraries/printf/printf.c **** #else
 174:flight/libraries/printf/printf.c **** #error "No basic integer type has a size of 16 bits exactly"
 175:flight/libraries/printf/printf.c **** #endif
 176:flight/libraries/printf/printf.c **** 
 177:flight/libraries/printf/printf.c **** #if   (SHRT_MAX   == 2147483647LL)
 178:flight/libraries/printf/printf.c **** #define FLAGS_INT32       FLAGS_SHORT
 179:flight/libraries/printf/printf.c **** #elif (INT_MAX    == 2147483647LL)
 180:flight/libraries/printf/printf.c **** #define FLAGS_INT32       FLAGS_INT
 181:flight/libraries/printf/printf.c **** #elif (LONG_MAX   == 2147483647LL)
 182:flight/libraries/printf/printf.c **** #define FLAGS_INT32       FLAGS_LONG
 183:flight/libraries/printf/printf.c **** #elif (LLONG_MAX  == 2147483647LL)
 184:flight/libraries/printf/printf.c **** #define FLAGS_INT32       FLAGS_LONG_LONG
 185:flight/libraries/printf/printf.c **** #else
 186:flight/libraries/printf/printf.c **** #error "No basic integer type has a size of 32 bits exactly"
 187:flight/libraries/printf/printf.c **** #endif
 188:flight/libraries/printf/printf.c **** 
 189:flight/libraries/printf/printf.c **** #if   (SHRT_MAX   == 9223372036854775807LL)
 190:flight/libraries/printf/printf.c **** #define FLAGS_INT64       FLAGS_SHORT
 191:flight/libraries/printf/printf.c **** #elif (INT_MAX    == 9223372036854775807LL)
 192:flight/libraries/printf/printf.c **** #define FLAGS_INT64       FLAGS_INT
 193:flight/libraries/printf/printf.c **** #elif (LONG_MAX   == 9223372036854775807LL)
 194:flight/libraries/printf/printf.c **** #define FLAGS_INT64       FLAGS_LONG
 195:flight/libraries/printf/printf.c **** #elif (LLONG_MAX  == 9223372036854775807LL)
 196:flight/libraries/printf/printf.c **** #define FLAGS_INT64       FLAGS_LONG_LONG
 197:flight/libraries/printf/printf.c **** #else
 198:flight/libraries/printf/printf.c **** #error "No basic integer type has a size of 64 bits exactly"
 199:flight/libraries/printf/printf.c **** #endif
 200:flight/libraries/printf/printf.c **** 
 201:flight/libraries/printf/printf.c **** #endif // PRINTF_SUPPORT_MSVC_STYLE_INTEGER_SPECIFIERS
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 5


 202:flight/libraries/printf/printf.c **** 
 203:flight/libraries/printf/printf.c **** 
 204:flight/libraries/printf/printf.c **** typedef unsigned int printf_flags_t;
 205:flight/libraries/printf/printf.c **** 
 206:flight/libraries/printf/printf.c **** #define BASE_BINARY    2
 207:flight/libraries/printf/printf.c **** #define BASE_OCTAL     8
 208:flight/libraries/printf/printf.c **** #define BASE_DECIMAL  10
 209:flight/libraries/printf/printf.c **** #define BASE_HEX      16
 210:flight/libraries/printf/printf.c **** 
 211:flight/libraries/printf/printf.c **** typedef uint8_t numeric_base_t;
 212:flight/libraries/printf/printf.c **** 
 213:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_LONG_LONG
 214:flight/libraries/printf/printf.c **** typedef unsigned long long printf_unsigned_value_t;
 215:flight/libraries/printf/printf.c **** typedef long long          printf_signed_value_t;
 216:flight/libraries/printf/printf.c **** #else
 217:flight/libraries/printf/printf.c **** typedef unsigned long printf_unsigned_value_t;
 218:flight/libraries/printf/printf.c **** typedef long          printf_signed_value_t;
 219:flight/libraries/printf/printf.c **** #endif
 220:flight/libraries/printf/printf.c **** 
 221:flight/libraries/printf/printf.c **** // The printf()-family functions return an `int`; it is therefore
 222:flight/libraries/printf/printf.c **** // unnecessary/inappropriate to use size_t - often larger than int
 223:flight/libraries/printf/printf.c **** // in practice - for non-negative related values, such as widths,
 224:flight/libraries/printf/printf.c **** // precisions, offsets into buffers used for printing and the sizes
 225:flight/libraries/printf/printf.c **** // of these buffers. instead, we use:
 226:flight/libraries/printf/printf.c **** typedef unsigned int printf_size_t;
 227:flight/libraries/printf/printf.c **** #define PRINTF_MAX_POSSIBLE_BUFFER_SIZE INT_MAX
 228:flight/libraries/printf/printf.c ****   // If we were to nitpick, this would actually be INT_MAX + 1,
 229:flight/libraries/printf/printf.c ****   // since INT_MAX is the maximum return value, which excludes the
 230:flight/libraries/printf/printf.c ****   // trailing '\0'.
 231:flight/libraries/printf/printf.c **** 
 232:flight/libraries/printf/printf.c **** #if (PRINTF_SUPPORT_DECIMAL_SPECIFIERS || PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS)
 233:flight/libraries/printf/printf.c **** #include <float.h>
 234:flight/libraries/printf/printf.c **** #if FLT_RADIX != 2
 235:flight/libraries/printf/printf.c **** #error "Non-binary-radix floating-point types are unsupported."
 236:flight/libraries/printf/printf.c **** #endif
 237:flight/libraries/printf/printf.c **** 
 238:flight/libraries/printf/printf.c **** #if DBL_MANT_DIG == 24
 239:flight/libraries/printf/printf.c **** 
 240:flight/libraries/printf/printf.c **** #define DOUBLE_SIZE_IN_BITS 32
 241:flight/libraries/printf/printf.c **** typedef uint32_t double_uint_t;
 242:flight/libraries/printf/printf.c **** #define DOUBLE_EXPONENT_MASK 0xFFU
 243:flight/libraries/printf/printf.c **** #define DOUBLE_BASE_EXPONENT 127
 244:flight/libraries/printf/printf.c **** #define DOUBLE_MAX_SUBNORMAL_EXPONENT_OF_10 -38
 245:flight/libraries/printf/printf.c **** #define DOUBLE_MAX_SUBNORMAL_POWER_OF_10 1e-38
 246:flight/libraries/printf/printf.c **** 
 247:flight/libraries/printf/printf.c **** #elif DBL_MANT_DIG == 53
 248:flight/libraries/printf/printf.c **** 
 249:flight/libraries/printf/printf.c **** #define DOUBLE_SIZE_IN_BITS 64
 250:flight/libraries/printf/printf.c **** typedef uint64_t double_uint_t;
 251:flight/libraries/printf/printf.c **** #define DOUBLE_EXPONENT_MASK 0x7FFU
 252:flight/libraries/printf/printf.c **** #define DOUBLE_BASE_EXPONENT 1023
 253:flight/libraries/printf/printf.c **** #define DOUBLE_MAX_SUBNORMAL_EXPONENT_OF_10 -308
 254:flight/libraries/printf/printf.c **** #define DOUBLE_MAX_SUBNORMAL_POWER_OF_10 1e-308
 255:flight/libraries/printf/printf.c **** 
 256:flight/libraries/printf/printf.c **** #else
 257:flight/libraries/printf/printf.c **** #error "Unsupported double type configuration"
 258:flight/libraries/printf/printf.c **** #endif
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 6


 259:flight/libraries/printf/printf.c **** #define DOUBLE_STORED_MANTISSA_BITS (DBL_MANT_DIG - 1)
 260:flight/libraries/printf/printf.c **** 
 261:flight/libraries/printf/printf.c **** typedef union {
 262:flight/libraries/printf/printf.c ****   double_uint_t U;
 263:flight/libraries/printf/printf.c ****   double        F;
 264:flight/libraries/printf/printf.c **** } double_with_bit_access;
 265:flight/libraries/printf/printf.c **** 
 266:flight/libraries/printf/printf.c **** // This is unnecessary in C99, since compound initializers can be used,
 267:flight/libraries/printf/printf.c **** // but:
 268:flight/libraries/printf/printf.c **** // 1. Some compilers are finicky about this;
 269:flight/libraries/printf/printf.c **** // 2. Some people may want to convert this to C89;
 270:flight/libraries/printf/printf.c **** // 3. If you try to use it as C++, only C++20 supports compound literals
 271:flight/libraries/printf/printf.c **** static inline double_with_bit_access get_bit_access(double x)
 272:flight/libraries/printf/printf.c **** {
 273:flight/libraries/printf/printf.c ****   double_with_bit_access dwba;
 274:flight/libraries/printf/printf.c ****   dwba.F = x;
 275:flight/libraries/printf/printf.c ****   return dwba;
 276:flight/libraries/printf/printf.c **** }
 277:flight/libraries/printf/printf.c **** 
 278:flight/libraries/printf/printf.c **** static inline int get_sign_bit(double x)
 279:flight/libraries/printf/printf.c **** {
 280:flight/libraries/printf/printf.c ****   // The sign is stored in the highest bit
 281:flight/libraries/printf/printf.c ****   return (int) (get_bit_access(x).U >> (DOUBLE_SIZE_IN_BITS - 1));
 282:flight/libraries/printf/printf.c **** }
 283:flight/libraries/printf/printf.c **** 
 284:flight/libraries/printf/printf.c **** static inline int get_exp2(double_with_bit_access x)
 285:flight/libraries/printf/printf.c **** {
 286:flight/libraries/printf/printf.c ****   // The exponent in an IEEE-754 floating-point number occupies a contiguous
 287:flight/libraries/printf/printf.c ****   // sequence of bits (e.g. 52..62 for 64-bit doubles), but with a non-trivial representation: An
 288:flight/libraries/printf/printf.c ****   // unsigned offset from some negative value (with the extremal offset values reserved for
 289:flight/libraries/printf/printf.c ****   // special use).
 290:flight/libraries/printf/printf.c ****   return (int)((x.U >> DOUBLE_STORED_MANTISSA_BITS ) & DOUBLE_EXPONENT_MASK) - DOUBLE_BASE_EXPONENT
 291:flight/libraries/printf/printf.c **** }
 292:flight/libraries/printf/printf.c **** #define PRINTF_ABS(_x) ( (_x) > 0 ? (_x) : -(_x) )
 293:flight/libraries/printf/printf.c **** 
 294:flight/libraries/printf/printf.c **** #endif // (PRINTF_SUPPORT_DECIMAL_SPECIFIERS || PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS)
 295:flight/libraries/printf/printf.c **** 
 296:flight/libraries/printf/printf.c **** // Note in particular the behavior here on LONG_MIN or LLONG_MIN; it is valid
 297:flight/libraries/printf/printf.c **** // and well-defined, but if you're not careful you can easily trigger undefined
 298:flight/libraries/printf/printf.c **** // behavior with -LONG_MIN or -LLONG_MIN
 299:flight/libraries/printf/printf.c **** #define ABS_FOR_PRINTING(_x) ((printf_unsigned_value_t) ( (_x) > 0 ? (_x) : -((printf_signed_value_
 300:flight/libraries/printf/printf.c **** 
 301:flight/libraries/printf/printf.c **** // wrapper (used as buffer) for output function type
 302:flight/libraries/printf/printf.c **** //
 303:flight/libraries/printf/printf.c **** // One of the following must hold:
 304:flight/libraries/printf/printf.c **** // 1. max_chars is 0
 305:flight/libraries/printf/printf.c **** // 2. buffer is non-null
 306:flight/libraries/printf/printf.c **** // 3. function is non-null
 307:flight/libraries/printf/printf.c **** //
 308:flight/libraries/printf/printf.c **** // ... otherwise bad things will happen.
 309:flight/libraries/printf/printf.c **** typedef struct {
 310:flight/libraries/printf/printf.c ****   void (*function)(char c, void* extra_arg);
 311:flight/libraries/printf/printf.c ****   void* extra_function_arg;
 312:flight/libraries/printf/printf.c ****   char* buffer;
 313:flight/libraries/printf/printf.c ****   printf_size_t pos;
 314:flight/libraries/printf/printf.c ****   printf_size_t max_chars;
 315:flight/libraries/printf/printf.c **** } output_gadget_t;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 7


 316:flight/libraries/printf/printf.c **** 
 317:flight/libraries/printf/printf.c **** // Note: This function currently assumes it is not passed a '\0' c,
 318:flight/libraries/printf/printf.c **** // or alternatively, that '\0' can be passed to the function in the output
 319:flight/libraries/printf/printf.c **** // gadget. The former assumption holds within the printf library. It also
 320:flight/libraries/printf/printf.c **** // assumes that the output gadget has been properly initialized.
 321:flight/libraries/printf/printf.c **** static inline void putchar_via_gadget(output_gadget_t* gadget, char c)
 322:flight/libraries/printf/printf.c **** {
 323:flight/libraries/printf/printf.c ****   printf_size_t write_pos = gadget->pos++;
 324:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 325:flight/libraries/printf/printf.c ****     // _would_ have been written if not for the max_chars limitation
 326:flight/libraries/printf/printf.c ****   if (write_pos >= gadget->max_chars) {
 327:flight/libraries/printf/printf.c ****     return;
 328:flight/libraries/printf/printf.c ****   }
 329:flight/libraries/printf/printf.c ****   if (gadget->function != NULL) {
 330:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 331:flight/libraries/printf/printf.c ****     gadget->function(c, gadget->extra_function_arg);
 332:flight/libraries/printf/printf.c ****   }
 333:flight/libraries/printf/printf.c ****   else {
 334:flight/libraries/printf/printf.c ****     // it must be the case that gadget->buffer != NULL , due to the constraint
 335:flight/libraries/printf/printf.c ****     // on output_gadget_t ; and note we're relying on write_pos being non-negative.
 336:flight/libraries/printf/printf.c ****     gadget->buffer[write_pos] = c;
 337:flight/libraries/printf/printf.c ****   }
 338:flight/libraries/printf/printf.c **** }
 339:flight/libraries/printf/printf.c **** 
 340:flight/libraries/printf/printf.c **** // Possibly-write the string-terminating '\0' character
 341:flight/libraries/printf/printf.c **** static inline void append_termination_with_gadget(output_gadget_t* gadget)
 342:flight/libraries/printf/printf.c **** {
 343:flight/libraries/printf/printf.c ****   if (gadget->function != NULL || gadget->max_chars == 0) {
 344:flight/libraries/printf/printf.c ****     return;
 345:flight/libraries/printf/printf.c ****   }
 346:flight/libraries/printf/printf.c ****   if (gadget->buffer == NULL) {
 347:flight/libraries/printf/printf.c ****     return;
 348:flight/libraries/printf/printf.c ****   }
 349:flight/libraries/printf/printf.c ****   printf_size_t null_char_pos = gadget->pos < gadget->max_chars ? gadget->pos : gadget->max_chars -
 350:flight/libraries/printf/printf.c ****   gadget->buffer[null_char_pos] = '\0';
 351:flight/libraries/printf/printf.c **** }
 352:flight/libraries/printf/printf.c **** 
 353:flight/libraries/printf/printf.c **** // We can't use putchar_ as is, since our output gadget
 354:flight/libraries/printf/printf.c **** // only takes pointers to functions with an extra argument
 355:flight/libraries/printf/printf.c **** static inline void putchar_wrapper(char c, void* unused)
 356:flight/libraries/printf/printf.c **** {
 357:flight/libraries/printf/printf.c ****   (void) unused;
 358:flight/libraries/printf/printf.c ****   putchar_(c);
 359:flight/libraries/printf/printf.c **** }
 360:flight/libraries/printf/printf.c **** 
 361:flight/libraries/printf/printf.c **** static inline output_gadget_t discarding_gadget()
 362:flight/libraries/printf/printf.c **** {
 363:flight/libraries/printf/printf.c ****   output_gadget_t gadget;
 364:flight/libraries/printf/printf.c ****   gadget.function = NULL;
 365:flight/libraries/printf/printf.c ****   gadget.extra_function_arg = NULL;
 366:flight/libraries/printf/printf.c ****   gadget.buffer = NULL;
 367:flight/libraries/printf/printf.c ****   gadget.pos = 0;
 368:flight/libraries/printf/printf.c ****   gadget.max_chars = 0;
 369:flight/libraries/printf/printf.c ****   return gadget;
 370:flight/libraries/printf/printf.c **** }
 371:flight/libraries/printf/printf.c **** 
 372:flight/libraries/printf/printf.c **** static inline output_gadget_t buffer_gadget(char* buffer, size_t buffer_size)
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 8


 373:flight/libraries/printf/printf.c **** {
 374:flight/libraries/printf/printf.c ****   printf_size_t usable_buffer_size = (buffer_size > PRINTF_MAX_POSSIBLE_BUFFER_SIZE) ?
 375:flight/libraries/printf/printf.c ****     PRINTF_MAX_POSSIBLE_BUFFER_SIZE : (printf_size_t) buffer_size;
 376:flight/libraries/printf/printf.c ****   output_gadget_t result = discarding_gadget();
 377:flight/libraries/printf/printf.c ****   if (buffer != NULL) {
 378:flight/libraries/printf/printf.c ****     result.buffer = buffer;
 379:flight/libraries/printf/printf.c ****     result.max_chars = usable_buffer_size;
 380:flight/libraries/printf/printf.c ****   }
 381:flight/libraries/printf/printf.c ****   return result;
 382:flight/libraries/printf/printf.c **** }
 383:flight/libraries/printf/printf.c **** 
 384:flight/libraries/printf/printf.c **** static inline output_gadget_t function_gadget(void (*function)(char, void*), void* extra_arg)
 385:flight/libraries/printf/printf.c **** {
 386:flight/libraries/printf/printf.c ****   output_gadget_t result = discarding_gadget();
 387:flight/libraries/printf/printf.c ****   result.function = function;
 388:flight/libraries/printf/printf.c ****   result.extra_function_arg = extra_arg;
 389:flight/libraries/printf/printf.c ****   result.max_chars = PRINTF_MAX_POSSIBLE_BUFFER_SIZE;
 390:flight/libraries/printf/printf.c ****   return result;
 391:flight/libraries/printf/printf.c **** }
 392:flight/libraries/printf/printf.c **** 
 393:flight/libraries/printf/printf.c **** static inline output_gadget_t extern_putchar_gadget()
 394:flight/libraries/printf/printf.c **** {
 395:flight/libraries/printf/printf.c ****   return function_gadget(putchar_wrapper, NULL);
 396:flight/libraries/printf/printf.c **** }
 397:flight/libraries/printf/printf.c **** 
 398:flight/libraries/printf/printf.c **** // internal secure strlen
 399:flight/libraries/printf/printf.c **** // @return The length of the string (excluding the terminating 0) limited by 'maxsize'
 400:flight/libraries/printf/printf.c **** // @note strlen uses size_t, but wes only use this function with printf_size_t
 401:flight/libraries/printf/printf.c **** // variables - hence the signature.
 402:flight/libraries/printf/printf.c **** static inline printf_size_t strnlen_s_(const char* str, printf_size_t maxsize)
 403:flight/libraries/printf/printf.c **** {
 404:flight/libraries/printf/printf.c ****   const char* s;
 405:flight/libraries/printf/printf.c ****   for (s = str; *s && maxsize--; ++s);
 406:flight/libraries/printf/printf.c ****   return (printf_size_t)(s - str);
 407:flight/libraries/printf/printf.c **** }
 408:flight/libraries/printf/printf.c **** 
 409:flight/libraries/printf/printf.c **** 
 410:flight/libraries/printf/printf.c **** // internal test if char is a digit (0-9)
 411:flight/libraries/printf/printf.c **** // @return true if char is a digit
 412:flight/libraries/printf/printf.c **** static inline bool is_digit_(char ch)
 413:flight/libraries/printf/printf.c **** {
 414:flight/libraries/printf/printf.c ****   return (ch >= '0') && (ch <= '9');
 415:flight/libraries/printf/printf.c **** }
 416:flight/libraries/printf/printf.c **** 
 417:flight/libraries/printf/printf.c **** 
 418:flight/libraries/printf/printf.c **** // internal ASCII string to printf_size_t conversion
 419:flight/libraries/printf/printf.c **** static printf_size_t atou_(const char** str)
 420:flight/libraries/printf/printf.c **** {
  29              		.loc 1 420 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 420 1 is_stmt 0 view .LVU1
  35 0000 0146     		mov	r1, r0
 421:flight/libraries/printf/printf.c ****   printf_size_t i = 0U;
  36              		.loc 1 421 3 is_stmt 1 view .LVU2
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 9


  37              	.LVL1:
 422:flight/libraries/printf/printf.c ****   while (is_digit_(**str)) {
  38              		.loc 1 422 3 view .LVU3
 421:flight/libraries/printf/printf.c ****   printf_size_t i = 0U;
  39              		.loc 1 421 17 is_stmt 0 view .LVU4
  40 0002 0020     		movs	r0, #0
  41              	.LVL2:
  42              		.loc 1 422 9 view .LVU5
  43 0004 07E0     		b	.L2
  44              	.LVL3:
  45              	.L3:
 423:flight/libraries/printf/printf.c ****     i = i * 10U + (printf_size_t)(*((*str)++) - '0');
  46              		.loc 1 423 5 is_stmt 1 view .LVU6
  47              		.loc 1 423 11 is_stmt 0 view .LVU7
  48 0006 00EB8000 		add	r0, r0, r0, lsl #2
  49              	.LVL4:
  50              		.loc 1 423 43 view .LVU8
  51 000a 531C     		adds	r3, r2, #1
  52 000c 0B60     		str	r3, [r1]
  53              		.loc 1 423 35 view .LVU9
  54 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  55              		.loc 1 423 17 view .LVU10
  56 0010 03EB4000 		add	r0, r3, r0, lsl #1
  57              		.loc 1 423 7 view .LVU11
  58 0014 3038     		subs	r0, r0, #48
  59              	.LVL5:
  60              	.L2:
 422:flight/libraries/printf/printf.c ****   while (is_digit_(**str)) {
  61              		.loc 1 422 9 is_stmt 1 view .LVU12
 422:flight/libraries/printf/printf.c ****   while (is_digit_(**str)) {
  62              		.loc 1 422 21 is_stmt 0 view .LVU13
  63 0016 0A68     		ldr	r2, [r1]
 422:flight/libraries/printf/printf.c ****   while (is_digit_(**str)) {
  64              		.loc 1 422 10 view .LVU14
  65 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  66              	.LVL6:
  67              	.LBB49:
  68              	.LBI49:
 412:flight/libraries/printf/printf.c **** {
  69              		.loc 1 412 20 is_stmt 1 view .LVU15
  70              	.LBB50:
 414:flight/libraries/printf/printf.c **** }
  71              		.loc 1 414 3 view .LVU16
 414:flight/libraries/printf/printf.c **** }
  72              		.loc 1 414 22 is_stmt 0 view .LVU17
  73 001a 303B     		subs	r3, r3, #48
  74              	.LVL7:
 414:flight/libraries/printf/printf.c **** }
  75              		.loc 1 414 22 view .LVU18
  76 001c DBB2     		uxtb	r3, r3
  77              	.LVL8:
 414:flight/libraries/printf/printf.c **** }
  78              		.loc 1 414 22 view .LVU19
  79              	.LBE50:
  80              	.LBE49:
 422:flight/libraries/printf/printf.c ****     i = i * 10U + (printf_size_t)(*((*str)++) - '0');
  81              		.loc 1 422 9 view .LVU20
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 10


  82 001e 092B     		cmp	r3, #9
  83 0020 F1D9     		bls	.L3
 424:flight/libraries/printf/printf.c ****   }
 425:flight/libraries/printf/printf.c ****   return i;
  84              		.loc 1 425 3 is_stmt 1 view .LVU21
 426:flight/libraries/printf/printf.c **** }
  85              		.loc 1 426 1 is_stmt 0 view .LVU22
  86 0022 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE12:
  90              		.global	__aeabi_d2lz
  91              		.global	__aeabi_l2d
  92              		.global	__aeabi_dsub
  93              		.global	__aeabi_dmul
  94              		.global	__aeabi_dcmpgt
  95              		.global	__aeabi_dcmple
  96              		.global	__aeabi_dcmpeq
  97              		.global	__aeabi_dcmplt
  98              		.section	.text.get_components,"ax",%progbits
  99              		.align	1
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 104              	get_components:
 105              	.LVL9:
 106              	.LFB16:
 427:flight/libraries/printf/printf.c **** 
 428:flight/libraries/printf/printf.c **** 
 429:flight/libraries/printf/printf.c **** // output the specified string in reverse, taking care of any zero-padding
 430:flight/libraries/printf/printf.c **** static void out_rev_(output_gadget_t* output, const char* buf, printf_size_t len, printf_size_t wid
 431:flight/libraries/printf/printf.c **** {
 432:flight/libraries/printf/printf.c ****   const printf_size_t start_pos = output->pos;
 433:flight/libraries/printf/printf.c **** 
 434:flight/libraries/printf/printf.c ****   // pad spaces up to given width
 435:flight/libraries/printf/printf.c ****   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 436:flight/libraries/printf/printf.c ****     for (printf_size_t i = len; i < width; i++) {
 437:flight/libraries/printf/printf.c ****       putchar_via_gadget(output, ' ');
 438:flight/libraries/printf/printf.c ****     }
 439:flight/libraries/printf/printf.c ****   }
 440:flight/libraries/printf/printf.c **** 
 441:flight/libraries/printf/printf.c ****   // reverse string
 442:flight/libraries/printf/printf.c ****   while (len) {
 443:flight/libraries/printf/printf.c ****     putchar_via_gadget(output, buf[--len]);
 444:flight/libraries/printf/printf.c ****   }
 445:flight/libraries/printf/printf.c **** 
 446:flight/libraries/printf/printf.c ****   // append pad spaces up to given width
 447:flight/libraries/printf/printf.c ****   if (flags & FLAGS_LEFT) {
 448:flight/libraries/printf/printf.c ****     while (output->pos - start_pos < width) {
 449:flight/libraries/printf/printf.c ****       putchar_via_gadget(output, ' ');
 450:flight/libraries/printf/printf.c ****     }
 451:flight/libraries/printf/printf.c ****   }
 452:flight/libraries/printf/printf.c **** }
 453:flight/libraries/printf/printf.c **** 
 454:flight/libraries/printf/printf.c **** 
 455:flight/libraries/printf/printf.c **** // Invoked by print_integer after the actual number has been printed, performing necessary
 456:flight/libraries/printf/printf.c **** // work on the number's prefix (as the number is initially printed in reverse order)
 457:flight/libraries/printf/printf.c **** static void print_integer_finalization(output_gadget_t* output, char* buf, printf_size_t len, bool 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 11


 458:flight/libraries/printf/printf.c **** {
 459:flight/libraries/printf/printf.c ****   printf_size_t unpadded_len = len;
 460:flight/libraries/printf/printf.c **** 
 461:flight/libraries/printf/printf.c ****   // pad with leading zeros
 462:flight/libraries/printf/printf.c ****   {
 463:flight/libraries/printf/printf.c ****     if (!(flags & FLAGS_LEFT)) {
 464:flight/libraries/printf/printf.c ****       if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 465:flight/libraries/printf/printf.c ****         width--;
 466:flight/libraries/printf/printf.c ****       }
 467:flight/libraries/printf/printf.c ****       while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_INTEGER_BUFFER_SIZE)) {
 468:flight/libraries/printf/printf.c ****         buf[len++] = '0';
 469:flight/libraries/printf/printf.c ****       }
 470:flight/libraries/printf/printf.c ****     }
 471:flight/libraries/printf/printf.c **** 
 472:flight/libraries/printf/printf.c ****     while ((len < precision) && (len < PRINTF_INTEGER_BUFFER_SIZE)) {
 473:flight/libraries/printf/printf.c ****       buf[len++] = '0';
 474:flight/libraries/printf/printf.c ****     }
 475:flight/libraries/printf/printf.c **** 
 476:flight/libraries/printf/printf.c ****     if (base == BASE_OCTAL && (len > unpadded_len)) {
 477:flight/libraries/printf/printf.c ****       // Since we've written some zeros, we've satisfied the alternative format leading space requi
 478:flight/libraries/printf/printf.c ****       flags &= ~FLAGS_HASH;
 479:flight/libraries/printf/printf.c ****     }
 480:flight/libraries/printf/printf.c ****   }
 481:flight/libraries/printf/printf.c **** 
 482:flight/libraries/printf/printf.c ****   // handle hash
 483:flight/libraries/printf/printf.c ****   if (flags & (FLAGS_HASH | FLAGS_POINTER)) {
 484:flight/libraries/printf/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == precision) || (len == width))) {
 485:flight/libraries/printf/printf.c ****       // Let's take back some padding digits to fit in what will eventually
 486:flight/libraries/printf/printf.c ****       // be the format-specific prefix
 487:flight/libraries/printf/printf.c ****       if (unpadded_len < len) {
 488:flight/libraries/printf/printf.c ****         len--; // This should suffice for BASE_OCTAL
 489:flight/libraries/printf/printf.c ****       }
 490:flight/libraries/printf/printf.c ****       if (len && (base == BASE_HEX || base == BASE_BINARY) && (unpadded_len < len)) {
 491:flight/libraries/printf/printf.c ****         len--; // ... and an extra one for 0x or 0b
 492:flight/libraries/printf/printf.c ****       }
 493:flight/libraries/printf/printf.c ****     }
 494:flight/libraries/printf/printf.c ****     if ((base == BASE_HEX) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_INTEGER_BUFFER_SIZE)) {
 495:flight/libraries/printf/printf.c ****       buf[len++] = 'x';
 496:flight/libraries/printf/printf.c ****     }
 497:flight/libraries/printf/printf.c ****     else if ((base == BASE_HEX) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_INTEGER_BUFFER_SIZE))
 498:flight/libraries/printf/printf.c ****       buf[len++] = 'X';
 499:flight/libraries/printf/printf.c ****     }
 500:flight/libraries/printf/printf.c ****     else if ((base == BASE_BINARY) && (len < PRINTF_INTEGER_BUFFER_SIZE)) {
 501:flight/libraries/printf/printf.c ****       buf[len++] = 'b';
 502:flight/libraries/printf/printf.c ****     }
 503:flight/libraries/printf/printf.c ****     if (len < PRINTF_INTEGER_BUFFER_SIZE) {
 504:flight/libraries/printf/printf.c ****       buf[len++] = '0';
 505:flight/libraries/printf/printf.c ****     }
 506:flight/libraries/printf/printf.c ****   }
 507:flight/libraries/printf/printf.c **** 
 508:flight/libraries/printf/printf.c ****   if (len < PRINTF_INTEGER_BUFFER_SIZE) {
 509:flight/libraries/printf/printf.c ****     if (negative) {
 510:flight/libraries/printf/printf.c ****       buf[len++] = '-';
 511:flight/libraries/printf/printf.c ****     }
 512:flight/libraries/printf/printf.c ****     else if (flags & FLAGS_PLUS) {
 513:flight/libraries/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 514:flight/libraries/printf/printf.c ****     }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 12


 515:flight/libraries/printf/printf.c ****     else if (flags & FLAGS_SPACE) {
 516:flight/libraries/printf/printf.c ****       buf[len++] = ' ';
 517:flight/libraries/printf/printf.c ****     }
 518:flight/libraries/printf/printf.c ****   }
 519:flight/libraries/printf/printf.c **** 
 520:flight/libraries/printf/printf.c ****   out_rev_(output, buf, len, width, flags);
 521:flight/libraries/printf/printf.c **** }
 522:flight/libraries/printf/printf.c **** 
 523:flight/libraries/printf/printf.c **** // An internal itoa-like function
 524:flight/libraries/printf/printf.c **** static void print_integer(output_gadget_t* output, printf_unsigned_value_t value, bool negative, nu
 525:flight/libraries/printf/printf.c **** {
 526:flight/libraries/printf/printf.c ****   char buf[PRINTF_INTEGER_BUFFER_SIZE];
 527:flight/libraries/printf/printf.c ****   printf_size_t len = 0U;
 528:flight/libraries/printf/printf.c **** 
 529:flight/libraries/printf/printf.c ****   if (!value) {
 530:flight/libraries/printf/printf.c ****     if ( !(flags & FLAGS_PRECISION) ) {
 531:flight/libraries/printf/printf.c ****       buf[len++] = '0';
 532:flight/libraries/printf/printf.c ****       flags &= ~FLAGS_HASH;
 533:flight/libraries/printf/printf.c ****       // We drop this flag this since either the alternative and regular modes of the specifier
 534:flight/libraries/printf/printf.c ****       // don't differ on 0 values, or (in the case of octal) we've already provided the special
 535:flight/libraries/printf/printf.c ****       // handling for this mode.
 536:flight/libraries/printf/printf.c ****     }
 537:flight/libraries/printf/printf.c ****     else if (base == BASE_HEX) {
 538:flight/libraries/printf/printf.c ****       flags &= ~FLAGS_HASH;
 539:flight/libraries/printf/printf.c ****       // We drop this flag this since either the alternative and regular modes of the specifier
 540:flight/libraries/printf/printf.c ****       // don't differ on 0 values
 541:flight/libraries/printf/printf.c ****     }
 542:flight/libraries/printf/printf.c ****   }
 543:flight/libraries/printf/printf.c ****   else {
 544:flight/libraries/printf/printf.c ****     do {
 545:flight/libraries/printf/printf.c ****       const char digit = (char)(value % base);
 546:flight/libraries/printf/printf.c ****       buf[len++] = (char)(digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit 
 547:flight/libraries/printf/printf.c ****       value /= base;
 548:flight/libraries/printf/printf.c ****     } while (value && (len < PRINTF_INTEGER_BUFFER_SIZE));
 549:flight/libraries/printf/printf.c ****   }
 550:flight/libraries/printf/printf.c **** 
 551:flight/libraries/printf/printf.c ****   print_integer_finalization(output, buf, len, negative, base, precision, width, flags);
 552:flight/libraries/printf/printf.c **** }
 553:flight/libraries/printf/printf.c **** 
 554:flight/libraries/printf/printf.c **** #if (PRINTF_SUPPORT_DECIMAL_SPECIFIERS || PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS)
 555:flight/libraries/printf/printf.c **** 
 556:flight/libraries/printf/printf.c **** // Stores a fixed-precision representation of a double relative
 557:flight/libraries/printf/printf.c **** // to a fixed precision (which cannot be determined by examining this structure)
 558:flight/libraries/printf/printf.c **** struct double_components {
 559:flight/libraries/printf/printf.c ****   int_fast64_t integral;
 560:flight/libraries/printf/printf.c ****   int_fast64_t fractional;
 561:flight/libraries/printf/printf.c ****     // ... truncation of the actual fractional part of the double value, scaled
 562:flight/libraries/printf/printf.c ****     // by the precision value
 563:flight/libraries/printf/printf.c ****   bool is_negative;
 564:flight/libraries/printf/printf.c **** };
 565:flight/libraries/printf/printf.c **** 
 566:flight/libraries/printf/printf.c **** #define NUM_DECIMAL_DIGITS_IN_INT64_T 18
 567:flight/libraries/printf/printf.c **** #define PRINTF_MAX_PRECOMPUTED_POWER_OF_10  NUM_DECIMAL_DIGITS_IN_INT64_T
 568:flight/libraries/printf/printf.c **** static const double powers_of_10[NUM_DECIMAL_DIGITS_IN_INT64_T] = {
 569:flight/libraries/printf/printf.c ****   1e00, 1e01, 1e02, 1e03, 1e04, 1e05, 1e06, 1e07, 1e08,
 570:flight/libraries/printf/printf.c ****   1e09, 1e10, 1e11, 1e12, 1e13, 1e14, 1e15, 1e16, 1e17
 571:flight/libraries/printf/printf.c **** };
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 13


 572:flight/libraries/printf/printf.c **** 
 573:flight/libraries/printf/printf.c **** #define PRINTF_MAX_SUPPORTED_PRECISION NUM_DECIMAL_DIGITS_IN_INT64_T - 1
 574:flight/libraries/printf/printf.c **** 
 575:flight/libraries/printf/printf.c **** 
 576:flight/libraries/printf/printf.c **** // Break up a double number - which is known to be a finite non-negative number -
 577:flight/libraries/printf/printf.c **** // into its base-10 parts: integral - before the decimal point, and fractional - after it.
 578:flight/libraries/printf/printf.c **** // Taken the precision into account, but does not change it even internally.
 579:flight/libraries/printf/printf.c **** static struct double_components get_components(double number, printf_size_t precision)
 580:flight/libraries/printf/printf.c **** {
 107              		.loc 1 580 1 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 4, pretend = 0, frame = 16
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		.loc 1 580 1 is_stmt 0 view .LVU24
 112 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 113              	.LCFI0:
 114              		.cfi_def_cfa_offset 36
 115              		.cfi_offset 4, -36
 116              		.cfi_offset 5, -32
 117              		.cfi_offset 6, -28
 118              		.cfi_offset 7, -24
 119              		.cfi_offset 8, -20
 120              		.cfi_offset 9, -16
 121              		.cfi_offset 10, -12
 122              		.cfi_offset 11, -8
 123              		.cfi_offset 14, -4
 124 0004 85B0     		sub	sp, sp, #20
 125              	.LCFI1:
 126              		.cfi_def_cfa_offset 56
 127 0006 0446     		mov	r4, r0
 128 0008 1646     		mov	r6, r2
 129 000a 1F46     		mov	r7, r3
 581:flight/libraries/printf/printf.c ****   struct double_components number_;
 130              		.loc 1 581 3 is_stmt 1 view .LVU25
 582:flight/libraries/printf/printf.c ****   number_.is_negative = get_sign_bit(number);
 131              		.loc 1 582 3 view .LVU26
 132              	.LVL10:
 133              	.LBB51:
 134              	.LBI51:
 278:flight/libraries/printf/printf.c **** {
 135              		.loc 1 278 19 view .LVU27
 136              	.LBB52:
 281:flight/libraries/printf/printf.c **** }
 137              		.loc 1 281 3 view .LVU28
 138              	.LBB53:
 139              	.LBI53:
 271:flight/libraries/printf/printf.c **** {
 140              		.loc 1 271 38 view .LVU29
 141              	.LBB54:
 273:flight/libraries/printf/printf.c ****   dwba.F = x;
 142              		.loc 1 273 3 view .LVU30
 274:flight/libraries/printf/printf.c ****   return dwba;
 143              		.loc 1 274 3 view .LVU31
 275:flight/libraries/printf/printf.c **** }
 144              		.loc 1 275 3 view .LVU32
 275:flight/libraries/printf/printf.c **** }
 145              		.loc 1 275 3 is_stmt 0 view .LVU33
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 14


 146              	.LBE54:
 147              	.LBE53:
 148              	.LBE52:
 149              	.LBE51:
 150              		.loc 1 582 25 view .LVU34
 151 000c DB0F     		lsrs	r3, r3, #31
 152              		.loc 1 582 23 view .LVU35
 153 000e 0374     		strb	r3, [r0, #16]
 583:flight/libraries/printf/printf.c ****   double abs_number = (number_.is_negative) ? -number : number;
 154              		.loc 1 583 3 is_stmt 1 view .LVU36
 155              		.loc 1 583 55 is_stmt 0 view .LVU37
 156 0010 13B1     		cbz	r3, .L5
 157              		.loc 1 583 55 discriminator 1 view .LVU38
 158 0012 07F10043 		add	r3, r7, #-2147483648
 159 0016 1F46     		mov	r7, r3
 160              	.L5:
 161              	.LVL11:
 584:flight/libraries/printf/printf.c ****   number_.integral = (int_fast64_t)abs_number;
 162              		.loc 1 584 3 is_stmt 1 discriminator 4 view .LVU39
 163              		.loc 1 584 22 is_stmt 0 discriminator 4 view .LVU40
 164 0018 3046     		mov	r0, r6
 165              	.LVL12:
 166              		.loc 1 584 22 discriminator 4 view .LVU41
 167 001a 3946     		mov	r1, r7
 168 001c FFF7FEFF 		bl	__aeabi_d2lz
 169              	.LVL13:
 170              		.loc 1 584 22 discriminator 4 view .LVU42
 171 0020 8146     		mov	r9, r0
 172              		.loc 1 584 20 discriminator 4 view .LVU43
 173 0022 2060     		str	r0, [r4]
 174 0024 0391     		str	r1, [sp, #12]
 175 0026 6160     		str	r1, [r4, #4]
 585:flight/libraries/printf/printf.c ****   double remainder = (abs_number - (double) number_.integral) * powers_of_10[precision];
 176              		.loc 1 585 3 is_stmt 1 discriminator 4 view .LVU44
 177              		.loc 1 585 36 is_stmt 0 discriminator 4 view .LVU45
 178 0028 FFF7FEFF 		bl	__aeabi_l2d
 179              	.LVL14:
 180 002c 0246     		mov	r2, r0
 181 002e 0B46     		mov	r3, r1
 182              		.loc 1 585 34 discriminator 4 view .LVU46
 183 0030 3046     		mov	r0, r6
 184 0032 3946     		mov	r1, r7
 185 0034 FFF7FEFF 		bl	__aeabi_dsub
 186              	.LVL15:
 187              		.loc 1 585 77 discriminator 4 view .LVU47
 188 0038 3D4B     		ldr	r3, .L22
 189 003a 0E9A     		ldr	r2, [sp, #56]
 190 003c 03EBC203 		add	r3, r3, r2, lsl #3
 191 0040 D3E900AB 		ldrd	r10, [r3]
 192              		.loc 1 585 10 discriminator 4 view .LVU48
 193 0044 5246     		mov	r2, r10
 194 0046 5B46     		mov	r3, fp
 195 0048 FFF7FEFF 		bl	__aeabi_dmul
 196              	.LVL16:
 197 004c 0246     		mov	r2, r0
 198 004e 0B46     		mov	r3, r1
 199 0050 CDE90023 		strd	r2, [sp]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 15


 200              	.LVL17:
 586:flight/libraries/printf/printf.c ****   number_.fractional = (int_fast64_t)remainder;
 201              		.loc 1 586 3 is_stmt 1 discriminator 4 view .LVU49
 202              		.loc 1 586 24 is_stmt 0 discriminator 4 view .LVU50
 203 0054 FFF7FEFF 		bl	__aeabi_d2lz
 204              	.LVL18:
 205              		.loc 1 586 24 discriminator 4 view .LVU51
 206 0058 0546     		mov	r5, r0
 207 005a 8846     		mov	r8, r1
 208              		.loc 1 586 22 discriminator 4 view .LVU52
 209 005c A060     		str	r0, [r4, #8]
 210 005e E160     		str	r1, [r4, #12]
 587:flight/libraries/printf/printf.c **** 
 588:flight/libraries/printf/printf.c ****   remainder -= (double) number_.fractional;
 211              		.loc 1 588 3 is_stmt 1 discriminator 4 view .LVU53
 212              		.loc 1 588 16 is_stmt 0 discriminator 4 view .LVU54
 213 0060 FFF7FEFF 		bl	__aeabi_l2d
 214              	.LVL19:
 215 0064 0246     		mov	r2, r0
 216 0066 0B46     		mov	r3, r1
 217              		.loc 1 588 13 discriminator 4 view .LVU55
 218 0068 DDE90001 		ldrd	r0, [sp]
 219 006c FFF7FEFF 		bl	__aeabi_dsub
 220              	.LVL20:
 221 0070 0246     		mov	r2, r0
 222 0072 0B46     		mov	r3, r1
 223 0074 CDE90023 		strd	r2, [sp]
 224              	.LVL21:
 589:flight/libraries/printf/printf.c **** 
 590:flight/libraries/printf/printf.c ****   if (remainder > 0.5) {
 225              		.loc 1 590 3 is_stmt 1 discriminator 4 view .LVU56
 226              		.loc 1 590 6 is_stmt 0 discriminator 4 view .LVU57
 227 0078 0022     		movs	r2, #0
 228              	.LVL22:
 229              		.loc 1 590 6 discriminator 4 view .LVU58
 230 007a 2E4B     		ldr	r3, .L22+4
 231 007c FFF7FEFF 		bl	__aeabi_dcmpgt
 232              	.LVL23:
 233 0080 0028     		cmp	r0, #0
 234 0082 41D0     		beq	.L20
 591:flight/libraries/printf/printf.c ****     ++number_.fractional;
 235              		.loc 1 591 5 is_stmt 1 view .LVU59
 236 0084 681C     		adds	r0, r5, #1
 237 0086 48F10001 		adc	r1, r8, #0
 238 008a A060     		str	r0, [r4, #8]
 239 008c E160     		str	r1, [r4, #12]
 592:flight/libraries/printf/printf.c ****     // handle rollover, e.g. case 0.99 with precision 1 is 1.0
 593:flight/libraries/printf/printf.c ****     if ((double) number_.fractional >= powers_of_10[precision]) {
 240              		.loc 1 593 5 view .LVU60
 241              		.loc 1 593 9 is_stmt 0 view .LVU61
 242 008e FFF7FEFF 		bl	__aeabi_l2d
 243              	.LVL24:
 244 0092 0246     		mov	r2, r0
 245 0094 0B46     		mov	r3, r1
 246              		.loc 1 593 8 view .LVU62
 247 0096 5046     		mov	r0, r10
 248 0098 5946     		mov	r1, fp
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 16


 249 009a FFF7FEFF 		bl	__aeabi_dcmple
 250              	.LVL25:
 251 009e 50B1     		cbz	r0, .L8
 594:flight/libraries/printf/printf.c ****       number_.fractional = 0;
 252              		.loc 1 594 7 is_stmt 1 view .LVU63
 253              		.loc 1 594 26 is_stmt 0 view .LVU64
 254 00a0 0022     		movs	r2, #0
 255 00a2 0023     		movs	r3, #0
 256 00a4 C4E90223 		strd	r2, [r4, #8]
 595:flight/libraries/printf/printf.c ****       ++number_.integral;
 257              		.loc 1 595 7 is_stmt 1 view .LVU65
 258 00a8 19F10100 		adds	r0, r9, #1
 259 00ac 039B     		ldr	r3, [sp, #12]
 260 00ae 43F10001 		adc	r1, r3, #0
 261 00b2 2060     		str	r0, [r4]
 262 00b4 6160     		str	r1, [r4, #4]
 263              	.L8:
 596:flight/libraries/printf/printf.c ****     }
 597:flight/libraries/printf/printf.c ****   }
 598:flight/libraries/printf/printf.c ****   else if ((remainder == 0.5) && ((number_.fractional == 0U) || (number_.fractional & 1U))) {
 599:flight/libraries/printf/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 600:flight/libraries/printf/printf.c ****     ++number_.fractional;
 601:flight/libraries/printf/printf.c ****   }
 602:flight/libraries/printf/printf.c **** 
 603:flight/libraries/printf/printf.c ****   if (precision == 0U) {
 264              		.loc 1 603 3 view .LVU66
 265              		.loc 1 603 6 is_stmt 0 view .LVU67
 266 00b6 0E9B     		ldr	r3, [sp, #56]
 267 00b8 13BB     		cbnz	r3, .L4
 604:flight/libraries/printf/printf.c ****     remainder = abs_number - (double) number_.integral;
 268              		.loc 1 604 5 is_stmt 1 view .LVU68
 269              		.loc 1 604 46 is_stmt 0 view .LVU69
 270 00ba 2568     		ldr	r5, [r4]
 271 00bc D4F80480 		ldr	r8, [r4, #4]
 272              		.loc 1 604 30 view .LVU70
 273 00c0 2846     		mov	r0, r5
 274 00c2 4146     		mov	r1, r8
 275 00c4 FFF7FEFF 		bl	__aeabi_l2d
 276              	.LVL26:
 277 00c8 0246     		mov	r2, r0
 278 00ca 0B46     		mov	r3, r1
 279              		.loc 1 604 15 view .LVU71
 280 00cc 3046     		mov	r0, r6
 281 00ce 3946     		mov	r1, r7
 282 00d0 FFF7FEFF 		bl	__aeabi_dsub
 283              	.LVL27:
 284 00d4 0646     		mov	r6, r0
 285              	.LVL28:
 286              		.loc 1 604 15 view .LVU72
 287 00d6 0F46     		mov	r7, r1
 288              	.LVL29:
 605:flight/libraries/printf/printf.c ****     if ((!(remainder < 0.5) || (remainder > 0.5)) && (number_.integral & 1)) {
 289              		.loc 1 605 5 is_stmt 1 view .LVU73
 290              		.loc 1 605 8 is_stmt 0 view .LVU74
 291 00d8 0022     		movs	r2, #0
 292 00da 164B     		ldr	r3, .L22+4
 293 00dc FFF7FEFF 		bl	__aeabi_dcmplt
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 17


 294              	.LVL30:
 295 00e0 30B1     		cbz	r0, .L13
 296              		.loc 1 605 29 discriminator 2 view .LVU75
 297 00e2 0022     		movs	r2, #0
 298 00e4 134B     		ldr	r3, .L22+4
 299 00e6 3046     		mov	r0, r6
 300 00e8 3946     		mov	r1, r7
 301 00ea FFF7FEFF 		bl	__aeabi_dcmpgt
 302              	.LVL31:
 303 00ee 38B1     		cbz	r0, .L4
 304              	.L13:
 305              		.loc 1 605 51 discriminator 3 view .LVU76
 306 00f0 15F0010F 		tst	r5, #1
 307 00f4 04D0     		beq	.L4
 606:flight/libraries/printf/printf.c ****       // exactly 0.5 and ODD, then round up
 607:flight/libraries/printf/printf.c ****       // 1.5 -> 2, but 2.5 -> 2
 608:flight/libraries/printf/printf.c ****       ++number_.integral;
 308              		.loc 1 608 7 is_stmt 1 view .LVU77
 309 00f6 0135     		adds	r5, r5, #1
 310 00f8 48F10003 		adc	r3, r8, #0
 311 00fc 2560     		str	r5, [r4]
 312 00fe 6360     		str	r3, [r4, #4]
 609:flight/libraries/printf/printf.c ****     }
 610:flight/libraries/printf/printf.c ****   }
 611:flight/libraries/printf/printf.c ****   return number_;
 313              		.loc 1 611 3 view .LVU78
 314              	.LVL32:
 315              	.L4:
 612:flight/libraries/printf/printf.c **** }
 316              		.loc 1 612 1 is_stmt 0 view .LVU79
 317 0100 2046     		mov	r0, r4
 318 0102 05B0     		add	sp, sp, #20
 319              	.LCFI2:
 320              		.cfi_remember_state
 321              		.cfi_def_cfa_offset 36
 322              		@ sp needed
 323 0104 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 324              	.LVL33:
 325              	.L20:
 326              	.LCFI3:
 327              		.cfi_restore_state
 598:flight/libraries/printf/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 328              		.loc 1 598 8 is_stmt 1 view .LVU80
 598:flight/libraries/printf/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 329              		.loc 1 598 11 is_stmt 0 view .LVU81
 330 0108 0022     		movs	r2, #0
 331 010a 0A4B     		ldr	r3, .L22+4
 332 010c DDE90001 		ldrd	r0, [sp]
 333 0110 FFF7FEFF 		bl	__aeabi_dcmpeq
 334              	.LVL34:
 335 0114 0028     		cmp	r0, #0
 336 0116 CED0     		beq	.L8
 598:flight/libraries/printf/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 337              		.loc 1 598 31 discriminator 1 view .LVU82
 338 0118 55EA0803 		orrs	r3, r5, r8
 339 011c 02D0     		beq	.L11
 598:flight/libraries/printf/printf.c ****     // if halfway, round up if odd OR if last digit is 0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 18


 340              		.loc 1 598 62 discriminator 2 view .LVU83
 341 011e 15F0010F 		tst	r5, #1
 342 0122 C8D0     		beq	.L8
 343              	.L11:
 600:flight/libraries/printf/printf.c ****   }
 344              		.loc 1 600 5 is_stmt 1 view .LVU84
 345 0124 0135     		adds	r5, r5, #1
 346 0126 48F10001 		adc	r1, r8, #0
 347 012a A560     		str	r5, [r4, #8]
 348 012c E160     		str	r1, [r4, #12]
 349 012e C2E7     		b	.L8
 350              	.L23:
 351              		.align	2
 352              	.L22:
 353 0130 00000000 		.word	.LANCHOR0
 354 0134 0000E03F 		.word	1071644672
 355              		.cfi_endproc
 356              	.LFE16:
 358              		.global	__aeabi_ddiv
 359              		.section	.text.apply_scaling,"ax",%progbits
 360              		.align	1
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 365              	apply_scaling:
 366              	.LVL35:
 367              	.LFB17:
 613:flight/libraries/printf/printf.c **** 
 614:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
 615:flight/libraries/printf/printf.c **** struct scaling_factor {
 616:flight/libraries/printf/printf.c ****   double raw_factor;
 617:flight/libraries/printf/printf.c ****   bool multiply; // if true, need to multiply by raw_factor; otherwise need to divide by it
 618:flight/libraries/printf/printf.c **** };
 619:flight/libraries/printf/printf.c **** 
 620:flight/libraries/printf/printf.c **** static double apply_scaling(double num, struct scaling_factor normalization)
 621:flight/libraries/printf/printf.c **** {
 368              		.loc 1 621 1 view -0
 369              		.cfi_startproc
 370              		@ args = 16, pretend = 8, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		.loc 1 621 1 is_stmt 0 view .LVU86
 373 0000 82B0     		sub	sp, sp, #8
 374              	.LCFI4:
 375              		.cfi_def_cfa_offset 8
 376 0002 08B5     		push	{r3, lr}
 377              	.LCFI5:
 378              		.cfi_def_cfa_offset 16
 379              		.cfi_offset 3, -16
 380              		.cfi_offset 14, -12
 381 0004 0DF1080C 		add	ip, sp, #8
 382 0008 8CE80C00 		stm	ip, {r2, r3}
 622:flight/libraries/printf/printf.c ****   return normalization.multiply ? num * normalization.raw_factor : num / normalization.raw_factor;
 383              		.loc 1 622 3 is_stmt 1 view .LVU87
 384              		.loc 1 622 23 is_stmt 0 view .LVU88
 385 000c 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 386              		.loc 1 622 66 view .LVU89
 387 0010 4BB1     		cbz	r3, .L25
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 19


 388              		.loc 1 622 66 discriminator 1 view .LVU90
 389 0012 0246     		mov	r2, r0
 390 0014 0B46     		mov	r3, r1
 391 0016 DDE90201 		ldrd	r0, [sp, #8]
 392              	.LVL36:
 393              		.loc 1 622 66 discriminator 1 view .LVU91
 394 001a FFF7FEFF 		bl	__aeabi_dmul
 395              	.LVL37:
 396              	.L24:
 623:flight/libraries/printf/printf.c **** }
 397              		.loc 1 623 1 view .LVU92
 398 001e BDE80840 		pop	{r3, lr}
 399              	.LCFI6:
 400              		.cfi_remember_state
 401              		.cfi_restore 14
 402              		.cfi_restore 3
 403              		.cfi_def_cfa_offset 8
 404 0022 02B0     		add	sp, sp, #8
 405              	.LCFI7:
 406              		.cfi_def_cfa_offset 0
 407 0024 7047     		bx	lr
 408              	.LVL38:
 409              	.L25:
 410              	.LCFI8:
 411              		.cfi_restore_state
 622:flight/libraries/printf/printf.c ****   return normalization.multiply ? num * normalization.raw_factor : num / normalization.raw_factor;
 412              		.loc 1 622 66 discriminator 2 view .LVU93
 413 0026 DDE90223 		ldrd	r2, [sp, #8]
 414 002a FFF7FEFF 		bl	__aeabi_ddiv
 415              	.LVL39:
 622:flight/libraries/printf/printf.c ****   return normalization.multiply ? num * normalization.raw_factor : num / normalization.raw_factor;
 416              		.loc 1 622 66 discriminator 2 view .LVU94
 417 002e F6E7     		b	.L24
 418              		.cfi_endproc
 419              	.LFE17:
 421              		.section	.text.unapply_scaling,"ax",%progbits
 422              		.align	1
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 427              	unapply_scaling:
 428              	.LVL40:
 429              	.LFB18:
 624:flight/libraries/printf/printf.c **** 
 625:flight/libraries/printf/printf.c **** static double unapply_scaling(double normalized, struct scaling_factor normalization)
 626:flight/libraries/printf/printf.c **** {
 430              		.loc 1 626 1 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ args = 16, pretend = 8, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		.loc 1 626 1 is_stmt 0 view .LVU96
 435 0000 82B0     		sub	sp, sp, #8
 436              	.LCFI9:
 437              		.cfi_def_cfa_offset 8
 438 0002 08B5     		push	{r3, lr}
 439              	.LCFI10:
 440              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 20


 441              		.cfi_offset 3, -16
 442              		.cfi_offset 14, -12
 443 0004 0DF1080C 		add	ip, sp, #8
 444 0008 8CE80C00 		stm	ip, {r2, r3}
 627:flight/libraries/printf/printf.c ****   return normalization.multiply ? normalized / normalization.raw_factor : normalized * normalizatio
 445              		.loc 1 627 3 is_stmt 1 view .LVU97
 446              		.loc 1 627 23 is_stmt 0 view .LVU98
 447 000c 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 448              		.loc 1 627 73 view .LVU99
 449 0010 3BB1     		cbz	r3, .L29
 450              		.loc 1 627 73 discriminator 1 view .LVU100
 451 0012 DDE90223 		ldrd	r2, [sp, #8]
 452 0016 FFF7FEFF 		bl	__aeabi_ddiv
 453              	.LVL41:
 454              	.L28:
 628:flight/libraries/printf/printf.c **** }
 455              		.loc 1 628 1 view .LVU101
 456 001a BDE80840 		pop	{r3, lr}
 457              	.LCFI11:
 458              		.cfi_remember_state
 459              		.cfi_restore 14
 460              		.cfi_restore 3
 461              		.cfi_def_cfa_offset 8
 462 001e 02B0     		add	sp, sp, #8
 463              	.LCFI12:
 464              		.cfi_def_cfa_offset 0
 465 0020 7047     		bx	lr
 466              	.LVL42:
 467              	.L29:
 468              	.LCFI13:
 469              		.cfi_restore_state
 627:flight/libraries/printf/printf.c ****   return normalization.multiply ? normalized / normalization.raw_factor : normalized * normalizatio
 470              		.loc 1 627 73 discriminator 2 view .LVU102
 471 0022 0246     		mov	r2, r0
 472 0024 0B46     		mov	r3, r1
 473 0026 DDE90201 		ldrd	r0, [sp, #8]
 474              	.LVL43:
 627:flight/libraries/printf/printf.c ****   return normalization.multiply ? normalized / normalization.raw_factor : normalized * normalizatio
 475              		.loc 1 627 73 discriminator 2 view .LVU103
 476 002a FFF7FEFF 		bl	__aeabi_dmul
 477              	.LVL44:
 478 002e F4E7     		b	.L28
 479              		.cfi_endproc
 480              	.LFE18:
 482              		.section	.text.update_normalization,"ax",%progbits
 483              		.align	1
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 488              	update_normalization:
 489              	.LVL45:
 490              	.LFB19:
 629:flight/libraries/printf/printf.c **** 
 630:flight/libraries/printf/printf.c **** static struct scaling_factor update_normalization(struct scaling_factor sf, double extra_multiplica
 631:flight/libraries/printf/printf.c **** {
 491              		.loc 1 631 1 is_stmt 1 view -0
 492              		.cfi_startproc
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 21


 493              		@ args = 24, pretend = 8, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		.loc 1 631 1 is_stmt 0 view .LVU105
 496 0000 82B0     		sub	sp, sp, #8
 497              	.LCFI14:
 498              		.cfi_def_cfa_offset 8
 499 0002 D0B5     		push	{r4, r6, r7, lr}
 500              	.LCFI15:
 501              		.cfi_def_cfa_offset 24
 502              		.cfi_offset 4, -24
 503              		.cfi_offset 6, -20
 504              		.cfi_offset 7, -16
 505              		.cfi_offset 14, -12
 506 0004 0446     		mov	r4, r0
 507 0006 04A9     		add	r1, sp, #16
 508 0008 81E80C00 		stm	r1, {r2, r3}
 509 000c DDE90867 		ldrd	r6, [sp, #32]
 632:flight/libraries/printf/printf.c ****   struct scaling_factor result;
 510              		.loc 1 632 3 is_stmt 1 view .LVU106
 633:flight/libraries/printf/printf.c ****   if (sf.multiply) {
 511              		.loc 1 633 3 view .LVU107
 512              		.loc 1 633 9 is_stmt 0 view .LVU108
 513 0010 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 514              		.loc 1 633 6 view .LVU109
 515 0014 73B1     		cbz	r3, .L33
 634:flight/libraries/printf/printf.c ****     result.multiply = true;
 516              		.loc 1 634 5 is_stmt 1 view .LVU110
 517              		.loc 1 634 21 is_stmt 0 view .LVU111
 518 0016 0123     		movs	r3, #1
 519 0018 0372     		strb	r3, [r0, #8]
 635:flight/libraries/printf/printf.c ****     result.raw_factor = sf.raw_factor * extra_multiplicative_factor;
 520              		.loc 1 635 5 is_stmt 1 view .LVU112
 521              		.loc 1 635 39 is_stmt 0 view .LVU113
 522 001a 3246     		mov	r2, r6
 523 001c 3B46     		mov	r3, r7
 524 001e DDE90401 		ldrd	r0, [sp, #16]
 525              	.LVL46:
 526              		.loc 1 635 39 view .LVU114
 527 0022 FFF7FEFF 		bl	__aeabi_dmul
 528              	.LVL47:
 529              		.loc 1 635 23 view .LVU115
 530 0026 C4E90001 		strd	r0, [r4]
 531              	.L32:
 636:flight/libraries/printf/printf.c ****   }
 637:flight/libraries/printf/printf.c ****   else {
 638:flight/libraries/printf/printf.c ****     int factor_exp2 = get_exp2(get_bit_access(sf.raw_factor));
 639:flight/libraries/printf/printf.c ****     int extra_factor_exp2 = get_exp2(get_bit_access(extra_multiplicative_factor));
 640:flight/libraries/printf/printf.c **** 
 641:flight/libraries/printf/printf.c ****     // Divide the larger-exponent raw raw_factor by the smaller
 642:flight/libraries/printf/printf.c ****     if (PRINTF_ABS(factor_exp2) > PRINTF_ABS(extra_factor_exp2)) {
 643:flight/libraries/printf/printf.c ****       result.multiply = false;
 644:flight/libraries/printf/printf.c ****       result.raw_factor = sf.raw_factor / extra_multiplicative_factor;
 645:flight/libraries/printf/printf.c ****     }
 646:flight/libraries/printf/printf.c ****     else {
 647:flight/libraries/printf/printf.c ****       result.multiply = true;
 648:flight/libraries/printf/printf.c ****       result.raw_factor = extra_multiplicative_factor / sf.raw_factor;
 649:flight/libraries/printf/printf.c ****     }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 22


 650:flight/libraries/printf/printf.c ****   }
 651:flight/libraries/printf/printf.c ****   return result;
 652:flight/libraries/printf/printf.c **** }
 532              		.loc 1 652 1 view .LVU116
 533 002a 2046     		mov	r0, r4
 534 002c BDE8D040 		pop	{r4, r6, r7, lr}
 535              	.LCFI16:
 536              		.cfi_remember_state
 537              		.cfi_restore 14
 538              		.cfi_restore 7
 539              		.cfi_restore 6
 540              		.cfi_restore 4
 541              		.cfi_def_cfa_offset 8
 542              	.LVL48:
 543              		.loc 1 652 1 view .LVU117
 544 0030 02B0     		add	sp, sp, #8
 545              	.LCFI17:
 546              		.cfi_def_cfa_offset 0
 547 0032 7047     		bx	lr
 548              	.L33:
 549              	.LCFI18:
 550              		.cfi_restore_state
 551              	.LBB55:
 638:flight/libraries/printf/printf.c ****     int extra_factor_exp2 = get_exp2(get_bit_access(extra_multiplicative_factor));
 552              		.loc 1 638 5 is_stmt 1 view .LVU118
 638:flight/libraries/printf/printf.c ****     int extra_factor_exp2 = get_exp2(get_bit_access(extra_multiplicative_factor));
 553              		.loc 1 638 23 is_stmt 0 view .LVU119
 554 0034 DDE90401 		ldrd	r0, [sp, #16]
 555              	.LVL49:
 556              	.LBB56:
 557              	.LBI56:
 271:flight/libraries/printf/printf.c **** {
 558              		.loc 1 271 38 is_stmt 1 view .LVU120
 559              	.LBB57:
 273:flight/libraries/printf/printf.c ****   dwba.F = x;
 560              		.loc 1 273 3 view .LVU121
 274:flight/libraries/printf/printf.c ****   return dwba;
 561              		.loc 1 274 3 view .LVU122
 275:flight/libraries/printf/printf.c **** }
 562              		.loc 1 275 3 view .LVU123
 275:flight/libraries/printf/printf.c **** }
 563              		.loc 1 275 3 is_stmt 0 view .LVU124
 564              	.LBE57:
 565              	.LBE56:
 566              	.LBB58:
 567              	.LBI58:
 284:flight/libraries/printf/printf.c **** {
 568              		.loc 1 284 19 is_stmt 1 view .LVU125
 569              	.LBB59:
 290:flight/libraries/printf/printf.c **** }
 570              		.loc 1 290 3 view .LVU126
 290:flight/libraries/printf/printf.c **** }
 571              		.loc 1 290 10 is_stmt 0 view .LVU127
 572 0038 C1F30A52 		ubfx	r2, r1, #20, #11
 290:flight/libraries/printf/printf.c **** }
 573              		.loc 1 290 78 view .LVU128
 574 003c A2F2FF32 		subw	r2, r2, #1023
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 23


 575              	.LVL50:
 290:flight/libraries/printf/printf.c **** }
 576              		.loc 1 290 78 view .LVU129
 577              	.LBE59:
 578              	.LBE58:
 639:flight/libraries/printf/printf.c **** 
 579              		.loc 1 639 5 is_stmt 1 view .LVU130
 580              	.LBB60:
 581              	.LBI60:
 271:flight/libraries/printf/printf.c **** {
 582              		.loc 1 271 38 view .LVU131
 583              	.LBB61:
 273:flight/libraries/printf/printf.c ****   dwba.F = x;
 584              		.loc 1 273 3 view .LVU132
 274:flight/libraries/printf/printf.c ****   return dwba;
 585              		.loc 1 274 3 view .LVU133
 275:flight/libraries/printf/printf.c **** }
 586              		.loc 1 275 3 view .LVU134
 275:flight/libraries/printf/printf.c **** }
 587              		.loc 1 275 3 is_stmt 0 view .LVU135
 588              	.LBE61:
 589              	.LBE60:
 590              	.LBB62:
 591              	.LBI62:
 284:flight/libraries/printf/printf.c **** {
 592              		.loc 1 284 19 is_stmt 1 view .LVU136
 593              	.LBB63:
 290:flight/libraries/printf/printf.c **** }
 594              		.loc 1 290 3 view .LVU137
 290:flight/libraries/printf/printf.c **** }
 595              		.loc 1 290 10 is_stmt 0 view .LVU138
 596 0040 C7F30A53 		ubfx	r3, r7, #20, #11
 290:flight/libraries/printf/printf.c **** }
 597              		.loc 1 290 78 view .LVU139
 598 0044 A3F2FF33 		subw	r3, r3, #1023
 599              	.LVL51:
 290:flight/libraries/printf/printf.c **** }
 600              		.loc 1 290 78 view .LVU140
 601              	.LBE63:
 602              	.LBE62:
 642:flight/libraries/printf/printf.c ****       result.multiply = false;
 603              		.loc 1 642 5 is_stmt 1 view .LVU141
 642:flight/libraries/printf/printf.c ****       result.multiply = false;
 604              		.loc 1 642 9 is_stmt 0 view .LVU142
 605 0048 002A     		cmp	r2, #0
 606 004a B8BF     		it	lt
 607 004c 5242     		rsblt	r2, r2, #0
 608              	.LVL52:
 642:flight/libraries/printf/printf.c ****       result.multiply = false;
 609              		.loc 1 642 35 view .LVU143
 610 004e 002B     		cmp	r3, #0
 611 0050 B8BF     		it	lt
 612 0052 5B42     		rsblt	r3, r3, #0
 613              	.LVL53:
 642:flight/libraries/printf/printf.c ****       result.multiply = false;
 614              		.loc 1 642 8 view .LVU144
 615 0054 9A42     		cmp	r2, r3
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 24


 616 0056 08DD     		ble	.L35
 643:flight/libraries/printf/printf.c ****       result.raw_factor = sf.raw_factor / extra_multiplicative_factor;
 617              		.loc 1 643 7 is_stmt 1 view .LVU145
 643:flight/libraries/printf/printf.c ****       result.raw_factor = sf.raw_factor / extra_multiplicative_factor;
 618              		.loc 1 643 23 is_stmt 0 view .LVU146
 619 0058 0023     		movs	r3, #0
 620 005a 2372     		strb	r3, [r4, #8]
 644:flight/libraries/printf/printf.c ****     }
 621              		.loc 1 644 7 is_stmt 1 view .LVU147
 644:flight/libraries/printf/printf.c ****     }
 622              		.loc 1 644 41 is_stmt 0 view .LVU148
 623 005c 3246     		mov	r2, r6
 624 005e 3B46     		mov	r3, r7
 625 0060 FFF7FEFF 		bl	__aeabi_ddiv
 626              	.LVL54:
 644:flight/libraries/printf/printf.c ****     }
 627              		.loc 1 644 25 view .LVU149
 628 0064 C4E90001 		strd	r0, [r4]
 629 0068 DFE7     		b	.L32
 630              	.LVL55:
 631              	.L35:
 647:flight/libraries/printf/printf.c ****       result.raw_factor = extra_multiplicative_factor / sf.raw_factor;
 632              		.loc 1 647 7 is_stmt 1 view .LVU150
 647:flight/libraries/printf/printf.c ****       result.raw_factor = extra_multiplicative_factor / sf.raw_factor;
 633              		.loc 1 647 23 is_stmt 0 view .LVU151
 634 006a 0123     		movs	r3, #1
 635 006c 2372     		strb	r3, [r4, #8]
 648:flight/libraries/printf/printf.c ****     }
 636              		.loc 1 648 7 is_stmt 1 view .LVU152
 648:flight/libraries/printf/printf.c ****     }
 637              		.loc 1 648 55 is_stmt 0 view .LVU153
 638 006e 0246     		mov	r2, r0
 639 0070 0B46     		mov	r3, r1
 640 0072 3046     		mov	r0, r6
 641 0074 3946     		mov	r1, r7
 642              	.LVL56:
 648:flight/libraries/printf/printf.c ****     }
 643              		.loc 1 648 55 view .LVU154
 644 0076 FFF7FEFF 		bl	__aeabi_ddiv
 645              	.LVL57:
 648:flight/libraries/printf/printf.c ****     }
 646              		.loc 1 648 25 view .LVU155
 647 007a C4E90001 		strd	r0, [r4]
 648              	.LBE55:
 651:flight/libraries/printf/printf.c **** }
 649              		.loc 1 651 3 is_stmt 1 view .LVU156
 651:flight/libraries/printf/printf.c **** }
 650              		.loc 1 651 10 is_stmt 0 view .LVU157
 651 007e D4E7     		b	.L32
 652              		.cfi_endproc
 653              	.LFE19:
 655              		.global	__aeabi_dcmpge
 656              		.section	.text.get_normalized_components,"ax",%progbits
 657              		.align	1
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 25


 662              	get_normalized_components:
 663              	.LVL58:
 664              	.LFB20:
 653:flight/libraries/printf/printf.c **** 
 654:flight/libraries/printf/printf.c **** static struct double_components get_normalized_components(bool negative, printf_size_t precision, d
 655:flight/libraries/printf/printf.c **** {
 665              		.loc 1 655 1 is_stmt 1 view -0
 666              		.cfi_startproc
 667              		@ args = 28, pretend = 0, frame = 48
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              		.loc 1 655 1 is_stmt 0 view .LVU159
 670 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 671              	.LCFI19:
 672              		.cfi_def_cfa_offset 36
 673              		.cfi_offset 4, -36
 674              		.cfi_offset 5, -32
 675              		.cfi_offset 6, -28
 676              		.cfi_offset 7, -24
 677              		.cfi_offset 8, -20
 678              		.cfi_offset 9, -16
 679              		.cfi_offset 10, -12
 680              		.cfi_offset 11, -8
 681              		.cfi_offset 14, -4
 682 0004 2DED028B 		vpush.64	{d8}
 683              	.LCFI20:
 684              		.cfi_def_cfa_offset 44
 685              		.cfi_offset 80, -44
 686              		.cfi_offset 81, -40
 687 0008 91B0     		sub	sp, sp, #68
 688              	.LCFI21:
 689              		.cfi_def_cfa_offset 112
 690 000a 8346     		mov	fp, r0
 691 000c 0D46     		mov	r5, r1
 692 000e 1446     		mov	r4, r2
 693 0010 DDE91C67 		ldrd	r6, [sp, #112]
 656:flight/libraries/printf/printf.c ****   struct double_components components;
 694              		.loc 1 656 3 is_stmt 1 view .LVU160
 657:flight/libraries/printf/printf.c ****   components.is_negative = negative;
 695              		.loc 1 657 3 view .LVU161
 696              		.loc 1 657 26 is_stmt 0 view .LVU162
 697 0014 8DF83810 		strb	r1, [sp, #56]
 658:flight/libraries/printf/printf.c ****   double scaled = apply_scaling(non_normalized, normalization);
 698              		.loc 1 658 3 is_stmt 1 view .LVU163
 699              		.loc 1 658 19 is_stmt 0 view .LVU164
 700 0018 20AB     		add	r3, sp, #128
 701 001a 93E80300 		ldm	r3, {r0, r1}
 702              	.LVL59:
 703              		.loc 1 658 19 view .LVU165
 704 001e 8DE80300 		stm	sp, {r0, r1}
 705 0022 1EAB     		add	r3, sp, #120
 706 0024 0CCB     		ldm	r3, {r2, r3}
 707              	.LVL60:
 708              		.loc 1 658 19 view .LVU166
 709 0026 3046     		mov	r0, r6
 710 0028 3946     		mov	r1, r7
 711 002a FFF7FEFF 		bl	apply_scaling
 712              	.LVL61:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 26


 659:flight/libraries/printf/printf.c **** 
 660:flight/libraries/printf/printf.c ****   bool close_to_representation_extremum = ( (-floored_exp10 + (int) precision) >= DBL_MAX_10_EXP - 
 713              		.loc 1 660 3 is_stmt 1 view .LVU167
 714              		.loc 1 660 61 is_stmt 0 view .LVU168
 715 002e 229B     		ldr	r3, [sp, #136]
 716 0030 E31A     		subs	r3, r4, r3
 717              	.LVL62:
 661:flight/libraries/printf/printf.c ****   if (close_to_representation_extremum) {
 718              		.loc 1 661 3 is_stmt 1 view .LVU169
 719              		.loc 1 661 6 is_stmt 0 view .LVU170
 720 0032 B3F5997F 		cmp	r3, #306
 721 0036 00F38680 		bgt	.L49
 662:flight/libraries/printf/printf.c ****     // We can't have a normalization factor which also accounts for the precision, i.e. moves
 663:flight/libraries/printf/printf.c ****     // some decimal digits into the mantissa, since it's unrepresentable, or nearly unrepresentable
 664:flight/libraries/printf/printf.c ****     // So, we'll give up early on getting extra precision...
 665:flight/libraries/printf/printf.c ****     return get_components(negative ? -scaled : scaled, precision);
 666:flight/libraries/printf/printf.c ****   }
 667:flight/libraries/printf/printf.c ****   components.integral = (int_fast64_t) scaled;
 722              		.loc 1 667 3 is_stmt 1 view .LVU171
 723              		.loc 1 667 25 is_stmt 0 view .LVU172
 724 003a FFF7FEFF 		bl	__aeabi_d2lz
 725              	.LVL63:
 726              		.loc 1 667 25 view .LVU173
 727 003e 0490     		str	r0, [sp, #16]
 728 0040 0591     		str	r1, [sp, #20]
 729              		.loc 1 667 23 view .LVU174
 730 0042 0A90     		str	r0, [sp, #40]
 731 0044 0B91     		str	r1, [sp, #44]
 668:flight/libraries/printf/printf.c ****   double remainder = non_normalized - unapply_scaling((double) components.integral, normalization);
 732              		.loc 1 668 3 is_stmt 1 view .LVU175
 733              		.loc 1 668 39 is_stmt 0 view .LVU176
 734 0046 FFF7FEFF 		bl	__aeabi_l2d
 735              	.LVL64:
 736 004a 8046     		mov	r8, r0
 737 004c 8946     		mov	r9, r1
 738 004e 0DF1800A 		add	r10, sp, #128
 739 0052 9AE80300 		ldm	r10, {r0, r1}
 740 0056 8DE80300 		stm	sp, {r0, r1}
 741 005a 1EAD     		add	r5, sp, #120
 742 005c 95E80C00 		ldm	r5, {r2, r3}
 743 0060 4046     		mov	r0, r8
 744 0062 4946     		mov	r1, r9
 745 0064 FFF7FEFF 		bl	unapply_scaling
 746              	.LVL65:
 747 0068 0246     		mov	r2, r0
 748 006a 0B46     		mov	r3, r1
 749              		.loc 1 668 10 view .LVU177
 750 006c 3046     		mov	r0, r6
 751 006e 3946     		mov	r1, r7
 752 0070 FFF7FEFF 		bl	__aeabi_dsub
 753              	.LVL66:
 754 0074 0646     		mov	r6, r0
 755 0076 0F46     		mov	r7, r1
 756              	.LVL67:
 669:flight/libraries/printf/printf.c ****   double prec_power_of_10 = powers_of_10[precision];
 757              		.loc 1 669 3 is_stmt 1 view .LVU178
 758              		.loc 1 669 10 is_stmt 0 view .LVU179
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 27


 759 0078 384A     		ldr	r2, .L50
 760 007a 02EBC404 		add	r4, r2, r4, lsl #3
 761              	.LVL68:
 762              		.loc 1 669 10 view .LVU180
 763 007e 94ED008B 		vldr.64	d8, [r4]
 764              	.LVL69:
 670:flight/libraries/printf/printf.c ****   struct scaling_factor account_for_precision = update_normalization(normalization, prec_power_of_1
 765              		.loc 1 670 3 is_stmt 1 view .LVU181
 766              		.loc 1 670 49 is_stmt 0 view .LVU182
 767 0082 06AC     		add	r4, sp, #24
 768 0084 8DED028B 		vstr.64	d8, [sp, #8]
 769 0088 9AE80300 		ldm	r10, {r0, r1}
 770 008c 8DE80300 		stm	sp, {r0, r1}
 771 0090 95E80C00 		ldm	r5, {r2, r3}
 772 0094 2046     		mov	r0, r4
 773 0096 FFF7FEFF 		bl	update_normalization
 774              	.LVL70:
 671:flight/libraries/printf/printf.c ****   double scaled_remainder = apply_scaling(remainder, account_for_precision);
 775              		.loc 1 671 3 is_stmt 1 view .LVU183
 776              		.loc 1 671 29 is_stmt 0 view .LVU184
 777 009a 08AB     		add	r3, sp, #32
 778 009c 93E80300 		ldm	r3, {r0, r1}
 779 00a0 8DE80300 		stm	sp, {r0, r1}
 780 00a4 94E80C00 		ldm	r4, {r2, r3}
 781 00a8 3046     		mov	r0, r6
 782 00aa 3946     		mov	r1, r7
 783 00ac FFF7FEFF 		bl	apply_scaling
 784              	.LVL71:
 785 00b0 0646     		mov	r6, r0
 786              	.LVL72:
 787              		.loc 1 671 29 view .LVU185
 788 00b2 0F46     		mov	r7, r1
 789              	.LVL73:
 672:flight/libraries/printf/printf.c ****   double rounding_threshold = 0.5;
 790              		.loc 1 672 3 is_stmt 1 view .LVU186
 673:flight/libraries/printf/printf.c **** 
 674:flight/libraries/printf/printf.c ****   components.fractional = (int_fast64_t) scaled_remainder; // when precision == 0, the assigned val
 791              		.loc 1 674 3 view .LVU187
 792              		.loc 1 674 27 is_stmt 0 view .LVU188
 793 00b4 FFF7FEFF 		bl	__aeabi_d2lz
 794              	.LVL74:
 795 00b8 0546     		mov	r5, r0
 796 00ba 8846     		mov	r8, r1
 797              		.loc 1 674 25 view .LVU189
 798 00bc 0C90     		str	r0, [sp, #48]
 799 00be 0D91     		str	r1, [sp, #52]
 675:flight/libraries/printf/printf.c ****   scaled_remainder -= (double) components.fractional; //when precision == 0, this will not change s
 800              		.loc 1 675 3 is_stmt 1 view .LVU190
 801              		.loc 1 675 23 is_stmt 0 view .LVU191
 802 00c0 FFF7FEFF 		bl	__aeabi_l2d
 803              	.LVL75:
 804 00c4 0246     		mov	r2, r0
 805 00c6 0B46     		mov	r3, r1
 806              		.loc 1 675 20 view .LVU192
 807 00c8 3046     		mov	r0, r6
 808 00ca 3946     		mov	r1, r7
 809 00cc FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 28


 810              	.LVL76:
 811 00d0 8146     		mov	r9, r0
 812 00d2 8A46     		mov	r10, r1
 813              	.LVL77:
 676:flight/libraries/printf/printf.c **** 
 677:flight/libraries/printf/printf.c ****   components.fractional += (scaled_remainder >= rounding_threshold);
 814              		.loc 1 677 3 is_stmt 1 view .LVU193
 815              		.loc 1 677 46 is_stmt 0 view .LVU194
 816 00d4 0124     		movs	r4, #1
 817 00d6 0026     		movs	r6, #0
 818 00d8 0022     		movs	r2, #0
 819 00da 214B     		ldr	r3, .L50+4
 820 00dc FFF7FEFF 		bl	__aeabi_dcmpge
 821              	.LVL78:
 822 00e0 00B9     		cbnz	r0, .L41
 823 00e2 3446     		mov	r4, r6
 824              	.L41:
 825              		.loc 1 677 25 view .LVU195
 826 00e4 2C19     		adds	r4, r5, r4
 827 00e6 48EB0606 		adc	r6, r8, r6
 828 00ea 0C94     		str	r4, [sp, #48]
 829 00ec 0D96     		str	r6, [sp, #52]
 678:flight/libraries/printf/printf.c ****   if (scaled_remainder == rounding_threshold) {
 830              		.loc 1 678 3 is_stmt 1 view .LVU196
 831              		.loc 1 678 6 is_stmt 0 view .LVU197
 832 00ee 0022     		movs	r2, #0
 833 00f0 1B4B     		ldr	r3, .L50+4
 834 00f2 4846     		mov	r0, r9
 835 00f4 5146     		mov	r1, r10
 836 00f6 FFF7FEFF 		bl	__aeabi_dcmpeq
 837              	.LVL79:
 838 00fa 10B1     		cbz	r0, .L42
 679:flight/libraries/printf/printf.c ****     // banker's rounding: Round towards the even number (making the mean error 0)
 680:flight/libraries/printf/printf.c ****     components.fractional &= ~((int_fast64_t) 0x1);
 839              		.loc 1 680 5 is_stmt 1 view .LVU198
 840              		.loc 1 680 27 is_stmt 0 view .LVU199
 841 00fc 24F00104 		bic	r4, r4, #1
 842 0100 0C94     		str	r4, [sp, #48]
 843              	.L42:
 681:flight/libraries/printf/printf.c ****   }
 682:flight/libraries/printf/printf.c ****   // handle rollover, e.g. the case of 0.99 with precision 1 becoming (0,100),
 683:flight/libraries/printf/printf.c ****   // and must then be corrected into (1, 0).
 684:flight/libraries/printf/printf.c ****   // Note: for precision = 0, this will "translate" the rounding effect from
 685:flight/libraries/printf/printf.c ****   // the fractional part to the integral part where it should actually be
 686:flight/libraries/printf/printf.c ****   // felt (as prec_power_of_10 is 1)
 687:flight/libraries/printf/printf.c ****   if ((double) components.fractional >= prec_power_of_10) {
 844              		.loc 1 687 3 is_stmt 1 view .LVU200
 845              		.loc 1 687 7 is_stmt 0 view .LVU201
 846 0102 DDE90C01 		ldrd	r0, [sp, #48]
 847 0106 FFF7FEFF 		bl	__aeabi_l2d
 848              	.LVL80:
 849              		.loc 1 687 6 view .LVU202
 850 010a 53EC182B 		vmov	r2, r3, d8
 851 010e FFF7FEFF 		bl	__aeabi_dcmpge
 852              	.LVL81:
 853 0112 50B1     		cbz	r0, .L44
 688:flight/libraries/printf/printf.c ****     components.fractional = 0;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 29


 854              		.loc 1 688 5 is_stmt 1 view .LVU203
 855              		.loc 1 688 27 is_stmt 0 view .LVU204
 856 0114 0022     		movs	r2, #0
 857 0116 0023     		movs	r3, #0
 858 0118 CDE90C23 		strd	r2, [sp, #48]
 689:flight/libraries/printf/printf.c ****     ++components.integral;
 859              		.loc 1 689 5 is_stmt 1 view .LVU205
 860 011c 049B     		ldr	r3, [sp, #16]
 861 011e 581C     		adds	r0, r3, #1
 862 0120 059B     		ldr	r3, [sp, #20]
 863 0122 43F10001 		adc	r1, r3, #0
 864 0126 0A90     		str	r0, [sp, #40]
 865 0128 0B91     		str	r1, [sp, #44]
 866              	.L44:
 690:flight/libraries/printf/printf.c ****   }
 691:flight/libraries/printf/printf.c ****   return components;
 867              		.loc 1 691 3 view .LVU206
 868              		.loc 1 691 10 is_stmt 0 view .LVU207
 869 012a 5C46     		mov	r4, fp
 870 012c 0AAD     		add	r5, sp, #40
 871 012e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 872 0130 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 873 0132 95E80300 		ldm	r5, {r0, r1}
 874 0136 84E80300 		stm	r4, {r0, r1}
 875              	.LVL82:
 876              	.L37:
 692:flight/libraries/printf/printf.c **** }
 877              		.loc 1 692 1 view .LVU208
 878 013a 5846     		mov	r0, fp
 879 013c 11B0     		add	sp, sp, #68
 880              	.LCFI22:
 881              		.cfi_remember_state
 882              		.cfi_def_cfa_offset 44
 883              		@ sp needed
 884 013e BDEC028B 		vldm	sp!, {d8}
 885              	.LCFI23:
 886              		.cfi_restore 80
 887              		.cfi_restore 81
 888              		.cfi_def_cfa_offset 36
 889 0142 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 890              	.LVL83:
 891              	.L49:
 892              	.LCFI24:
 893              		.cfi_restore_state
 665:flight/libraries/printf/printf.c ****   }
 894              		.loc 1 665 5 is_stmt 1 view .LVU209
 665:flight/libraries/printf/printf.c ****   }
 895              		.loc 1 665 12 is_stmt 0 view .LVU210
 896 0146 15B1     		cbz	r5, .L39
 665:flight/libraries/printf/printf.c ****   }
 897              		.loc 1 665 12 discriminator 1 view .LVU211
 898 0148 01F10043 		add	r3, r1, #-2147483648
 899              	.LVL84:
 665:flight/libraries/printf/printf.c ****   }
 900              		.loc 1 665 12 discriminator 1 view .LVU212
 901 014c 1946     		mov	r1, r3
 902              	.L39:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 30


 665:flight/libraries/printf/printf.c ****   }
 903              		.loc 1 665 12 discriminator 4 view .LVU213
 904 014e 0094     		str	r4, [sp]
 905 0150 0246     		mov	r2, r0
 906 0152 0B46     		mov	r3, r1
 907 0154 5846     		mov	r0, fp
 908              	.LVL85:
 665:flight/libraries/printf/printf.c ****   }
 909              		.loc 1 665 12 discriminator 4 view .LVU214
 910 0156 FFF7FEFF 		bl	get_components
 911              	.LVL86:
 912 015a EEE7     		b	.L37
 913              	.L51:
 914              		.align	2
 915              	.L50:
 916 015c 00000000 		.word	.LANCHOR0
 917 0160 0000E03F 		.word	1071644672
 918              		.cfi_endproc
 919              	.LFE20:
 921              		.global	__aeabi_d2iz
 922              		.global	__aeabi_i2d
 923              		.section	.text.bastardized_floor,"ax",%progbits
 924              		.align	1
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 929              	bastardized_floor:
 930              	.LVL87:
 931              	.LFB23:
 693:flight/libraries/printf/printf.c **** #endif // PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
 694:flight/libraries/printf/printf.c **** 
 695:flight/libraries/printf/printf.c **** static void print_broken_up_decimal(
 696:flight/libraries/printf/printf.c ****   struct double_components number_, output_gadget_t* output, printf_size_t precision,
 697:flight/libraries/printf/printf.c ****   printf_size_t width, printf_flags_t flags, char *buf, printf_size_t len)
 698:flight/libraries/printf/printf.c **** {
 699:flight/libraries/printf/printf.c ****   if (precision != 0U) {
 700:flight/libraries/printf/printf.c ****     // do fractional part, as an unsigned number
 701:flight/libraries/printf/printf.c **** 
 702:flight/libraries/printf/printf.c ****     printf_size_t count = precision;
 703:flight/libraries/printf/printf.c **** 
 704:flight/libraries/printf/printf.c ****     // %g/%G mandates we skip the trailing 0 digits...
 705:flight/libraries/printf/printf.c ****     if ((flags & FLAGS_ADAPT_EXP) && !(flags & FLAGS_HASH) && (number_.fractional > 0)) {
 706:flight/libraries/printf/printf.c ****       while(true) {
 707:flight/libraries/printf/printf.c ****         int_fast64_t digit = number_.fractional % 10U;
 708:flight/libraries/printf/printf.c ****         if (digit != 0) {
 709:flight/libraries/printf/printf.c ****           break;
 710:flight/libraries/printf/printf.c ****         }
 711:flight/libraries/printf/printf.c ****         --count;
 712:flight/libraries/printf/printf.c ****         number_.fractional /= 10U;
 713:flight/libraries/printf/printf.c **** 
 714:flight/libraries/printf/printf.c ****       }
 715:flight/libraries/printf/printf.c ****       // ... and even the decimal point if there are no
 716:flight/libraries/printf/printf.c ****       // non-zero fractional part digits (see below)
 717:flight/libraries/printf/printf.c ****     }
 718:flight/libraries/printf/printf.c **** 
 719:flight/libraries/printf/printf.c ****     if (number_.fractional > 0 || !(flags & FLAGS_ADAPT_EXP) || (flags & FLAGS_HASH) ) {
 720:flight/libraries/printf/printf.c ****       while (len < PRINTF_DECIMAL_BUFFER_SIZE) {
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 31


 721:flight/libraries/printf/printf.c ****         --count;
 722:flight/libraries/printf/printf.c ****         buf[len++] = (char)('0' + number_.fractional % 10U);
 723:flight/libraries/printf/printf.c ****         if (!(number_.fractional /= 10U)) {
 724:flight/libraries/printf/printf.c ****           break;
 725:flight/libraries/printf/printf.c ****         }
 726:flight/libraries/printf/printf.c ****       }
 727:flight/libraries/printf/printf.c ****       // add extra 0s
 728:flight/libraries/printf/printf.c ****       while ((len < PRINTF_DECIMAL_BUFFER_SIZE) && (count > 0U)) {
 729:flight/libraries/printf/printf.c ****         buf[len++] = '0';
 730:flight/libraries/printf/printf.c ****         --count;
 731:flight/libraries/printf/printf.c ****       }
 732:flight/libraries/printf/printf.c ****       if (len < PRINTF_DECIMAL_BUFFER_SIZE) {
 733:flight/libraries/printf/printf.c ****         buf[len++] = '.';
 734:flight/libraries/printf/printf.c ****       }
 735:flight/libraries/printf/printf.c ****     }
 736:flight/libraries/printf/printf.c ****   }
 737:flight/libraries/printf/printf.c ****   else {
 738:flight/libraries/printf/printf.c ****     if ((flags & FLAGS_HASH) && (len < PRINTF_DECIMAL_BUFFER_SIZE)) {
 739:flight/libraries/printf/printf.c ****       buf[len++] = '.';
 740:flight/libraries/printf/printf.c ****     }
 741:flight/libraries/printf/printf.c ****   }
 742:flight/libraries/printf/printf.c **** 
 743:flight/libraries/printf/printf.c ****   // Write the integer part of the number (it comes after the fractional
 744:flight/libraries/printf/printf.c ****   // since the character order is reversed)
 745:flight/libraries/printf/printf.c ****   while (len < PRINTF_DECIMAL_BUFFER_SIZE) {
 746:flight/libraries/printf/printf.c ****     buf[len++] = (char)('0' + (number_.integral % 10));
 747:flight/libraries/printf/printf.c ****     if (!(number_.integral /= 10)) {
 748:flight/libraries/printf/printf.c ****       break;
 749:flight/libraries/printf/printf.c ****     }
 750:flight/libraries/printf/printf.c ****   }
 751:flight/libraries/printf/printf.c **** 
 752:flight/libraries/printf/printf.c ****   // pad leading zeros
 753:flight/libraries/printf/printf.c ****   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 754:flight/libraries/printf/printf.c ****     if (width && (number_.is_negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 755:flight/libraries/printf/printf.c ****       width--;
 756:flight/libraries/printf/printf.c ****     }
 757:flight/libraries/printf/printf.c ****     while ((len < width) && (len < PRINTF_DECIMAL_BUFFER_SIZE)) {
 758:flight/libraries/printf/printf.c ****       buf[len++] = '0';
 759:flight/libraries/printf/printf.c ****     }
 760:flight/libraries/printf/printf.c ****   }
 761:flight/libraries/printf/printf.c **** 
 762:flight/libraries/printf/printf.c ****   if (len < PRINTF_DECIMAL_BUFFER_SIZE) {
 763:flight/libraries/printf/printf.c ****     if (number_.is_negative) {
 764:flight/libraries/printf/printf.c ****       buf[len++] = '-';
 765:flight/libraries/printf/printf.c ****     }
 766:flight/libraries/printf/printf.c ****     else if (flags & FLAGS_PLUS) {
 767:flight/libraries/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 768:flight/libraries/printf/printf.c ****     }
 769:flight/libraries/printf/printf.c ****     else if (flags & FLAGS_SPACE) {
 770:flight/libraries/printf/printf.c ****       buf[len++] = ' ';
 771:flight/libraries/printf/printf.c ****     }
 772:flight/libraries/printf/printf.c ****   }
 773:flight/libraries/printf/printf.c **** 
 774:flight/libraries/printf/printf.c ****   out_rev_(output, buf, len, width, flags);
 775:flight/libraries/printf/printf.c **** }
 776:flight/libraries/printf/printf.c **** 
 777:flight/libraries/printf/printf.c ****       // internal ftoa for fixed decimal floating point
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 32


 778:flight/libraries/printf/printf.c **** static void print_decimal_number(output_gadget_t* output, double number, printf_size_t precision, p
 779:flight/libraries/printf/printf.c **** {
 780:flight/libraries/printf/printf.c ****   struct double_components value_ = get_components(number, precision);
 781:flight/libraries/printf/printf.c ****   print_broken_up_decimal(value_, output, precision, width, flags, buf, len);
 782:flight/libraries/printf/printf.c **** }
 783:flight/libraries/printf/printf.c **** 
 784:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
 785:flight/libraries/printf/printf.c **** 
 786:flight/libraries/printf/printf.c **** // A floor function - but one which only works for numbers whose
 787:flight/libraries/printf/printf.c **** // floor value is representable by an int.
 788:flight/libraries/printf/printf.c **** static int bastardized_floor(double x)
 789:flight/libraries/printf/printf.c **** {
 932              		.loc 1 789 1 is_stmt 1 view -0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              		.loc 1 789 1 is_stmt 0 view .LVU216
 937 0000 70B5     		push	{r4, r5, r6, lr}
 938              	.LCFI25:
 939              		.cfi_def_cfa_offset 16
 940              		.cfi_offset 4, -16
 941              		.cfi_offset 5, -12
 942              		.cfi_offset 6, -8
 943              		.cfi_offset 14, -4
 944 0002 0446     		mov	r4, r0
 945 0004 0D46     		mov	r5, r1
 790:flight/libraries/printf/printf.c ****   if (x >= 0) { return (int) x; }
 946              		.loc 1 790 3 is_stmt 1 view .LVU217
 947              		.loc 1 790 6 is_stmt 0 view .LVU218
 948 0006 0022     		movs	r2, #0
 949 0008 0023     		movs	r3, #0
 950 000a FFF7FEFF 		bl	__aeabi_dcmpge
 951              	.LVL88:
 952              		.loc 1 790 6 view .LVU219
 953 000e 68B9     		cbnz	r0, .L61
 791:flight/libraries/printf/printf.c ****   int n = (int) x;
 954              		.loc 1 791 3 is_stmt 1 view .LVU220
 955              		.loc 1 791 7 is_stmt 0 view .LVU221
 956 0010 2046     		mov	r0, r4
 957 0012 2946     		mov	r1, r5
 958 0014 FFF7FEFF 		bl	__aeabi_d2iz
 959              	.LVL89:
 960 0018 0646     		mov	r6, r0
 961              	.LVL90:
 792:flight/libraries/printf/printf.c ****   return ( ((double) n) == x ) ? n : n-1;
 962              		.loc 1 792 3 is_stmt 1 view .LVU222
 963              		.loc 1 792 13 is_stmt 0 view .LVU223
 964 001a FFF7FEFF 		bl	__aeabi_i2d
 965              	.LVL91:
 966              		.loc 1 792 36 view .LVU224
 967 001e 2246     		mov	r2, r4
 968 0020 2B46     		mov	r3, r5
 969 0022 FFF7FEFF 		bl	__aeabi_dcmpeq
 970              	.LVL92:
 971 0026 30B9     		cbnz	r0, .L52
 972              		.loc 1 792 36 discriminator 1 view .LVU225
 973 0028 013E     		subs	r6, r6, #1
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 33


 974              	.LVL93:
 975              		.loc 1 792 36 discriminator 1 view .LVU226
 976 002a 04E0     		b	.L52
 977              	.LVL94:
 978              	.L61:
 790:flight/libraries/printf/printf.c ****   if (x >= 0) { return (int) x; }
 979              		.loc 1 790 17 is_stmt 1 discriminator 1 view .LVU227
 790:flight/libraries/printf/printf.c ****   if (x >= 0) { return (int) x; }
 980              		.loc 1 790 24 is_stmt 0 discriminator 1 view .LVU228
 981 002c 2046     		mov	r0, r4
 982 002e 2946     		mov	r1, r5
 983 0030 FFF7FEFF 		bl	__aeabi_d2iz
 984              	.LVL95:
 985 0034 0646     		mov	r6, r0
 986              	.L52:
 793:flight/libraries/printf/printf.c **** }
 987              		.loc 1 793 1 view .LVU229
 988 0036 3046     		mov	r0, r6
 989 0038 70BD     		pop	{r4, r5, r6, pc}
 990              		.cfi_endproc
 991              	.LFE23:
 993              		.global	__aeabi_dadd
 994              		.section	.text.log10_of_positive,"ax",%progbits
 995              		.align	1
 996              		.syntax unified
 997              		.thumb
 998              		.thumb_func
 1000              	log10_of_positive:
 1001              	.LVL96:
 1002              	.LFB24:
 794:flight/libraries/printf/printf.c **** 
 795:flight/libraries/printf/printf.c **** // Computes the base-10 logarithm of the input number - which must be an actual
 796:flight/libraries/printf/printf.c **** // positive number (not infinity or NaN, nor a sub-normal)
 797:flight/libraries/printf/printf.c **** static double log10_of_positive(double positive_number)
 798:flight/libraries/printf/printf.c **** {
 1003              		.loc 1 798 1 is_stmt 1 view -0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 1007              		.loc 1 798 1 is_stmt 0 view .LVU231
 1008 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1009              	.LCFI26:
 1010              		.cfi_def_cfa_offset 32
 1011              		.cfi_offset 4, -32
 1012              		.cfi_offset 5, -28
 1013              		.cfi_offset 6, -24
 1014              		.cfi_offset 7, -20
 1015              		.cfi_offset 8, -16
 1016              		.cfi_offset 9, -12
 1017              		.cfi_offset 10, -8
 1018              		.cfi_offset 14, -4
 799:flight/libraries/printf/printf.c ****   // The implementation follows David Gay (https://www.ampl.com/netlib/fp/dtoa.c).
 800:flight/libraries/printf/printf.c ****   //
 801:flight/libraries/printf/printf.c ****   // Since log_10 ( M * 2^x ) = log_10(M) + x , we can separate the components of
 802:flight/libraries/printf/printf.c ****   // our input number, and need only solve log_10(M) for M between 1 and 2 (as
 803:flight/libraries/printf/printf.c ****   // the base-2 mantissa is always 1-point-something). In that limited range, a
 804:flight/libraries/printf/printf.c ****   // Taylor series expansion of log10(x) should serve us well enough; and we'll
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 34


 805:flight/libraries/printf/printf.c ****   // take the mid-point, 1.5, as the point of expansion.
 806:flight/libraries/printf/printf.c **** 
 807:flight/libraries/printf/printf.c ****   double_with_bit_access dwba = get_bit_access(positive_number);
 1019              		.loc 1 807 3 is_stmt 1 view .LVU232
 1020              	.LVL97:
 1021              	.LBB64:
 1022              	.LBI64:
 271:flight/libraries/printf/printf.c **** {
 1023              		.loc 1 271 38 view .LVU233
 1024              	.LBB65:
 273:flight/libraries/printf/printf.c ****   dwba.F = x;
 1025              		.loc 1 273 3 view .LVU234
 274:flight/libraries/printf/printf.c ****   return dwba;
 1026              		.loc 1 274 3 view .LVU235
 275:flight/libraries/printf/printf.c **** }
 1027              		.loc 1 275 3 view .LVU236
 275:flight/libraries/printf/printf.c **** }
 1028              		.loc 1 275 3 is_stmt 0 view .LVU237
 1029              	.LBE65:
 1030              	.LBE64:
 808:flight/libraries/printf/printf.c ****   // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 809:flight/libraries/printf/printf.c ****   int exp2 = get_exp2(dwba);
 1031              		.loc 1 809 3 is_stmt 1 view .LVU238
 1032              	.LBB66:
 1033              	.LBI66:
 284:flight/libraries/printf/printf.c **** {
 1034              		.loc 1 284 19 view .LVU239
 1035              	.LBB67:
 290:flight/libraries/printf/printf.c **** }
 1036              		.loc 1 290 3 view .LVU240
 290:flight/libraries/printf/printf.c **** }
 1037              		.loc 1 290 10 is_stmt 0 view .LVU241
 1038 0004 C1F30A5A 		ubfx	r10, r1, #20, #11
 290:flight/libraries/printf/printf.c **** }
 1039              		.loc 1 290 78 view .LVU242
 1040 0008 AAF2FF3A 		subw	r10, r10, #1023
 1041              	.LVL98:
 290:flight/libraries/printf/printf.c **** }
 1042              		.loc 1 290 78 view .LVU243
 1043              	.LBE67:
 1044              	.LBE66:
 810:flight/libraries/printf/printf.c ****   // drop the exponent, so dwba.F comes into the range [1,2)
 811:flight/libraries/printf/printf.c ****   dwba.U = (dwba.U & (((double_uint_t) (1) << DOUBLE_STORED_MANTISSA_BITS) - 1U)) |
 1045              		.loc 1 811 3 is_stmt 1 view .LVU244
 1046              		.loc 1 811 20 is_stmt 0 view .LVU245
 1047 000c C1F31303 		ubfx	r3, r1, #0, #20
 1048              		.loc 1 811 83 view .LVU246
 1049 0010 43F07F51 		orr	r1, r3, #1069547520
 1050 0014 41F44011 		orr	r1, r1, #3145728
 812:flight/libraries/printf/printf.c ****            ((double_uint_t) DOUBLE_BASE_EXPONENT << DOUBLE_STORED_MANTISSA_BITS);
 813:flight/libraries/printf/printf.c ****   double z = (dwba.F - 1.5);
 1051              		.loc 1 813 3 is_stmt 1 view .LVU247
 1052              		.loc 1 813 10 is_stmt 0 view .LVU248
 1053 0018 0022     		movs	r2, #0
 1054 001a 2F4B     		ldr	r3, .L64+40
 1055 001c FFF7FEFF 		bl	__aeabi_dsub
 1056              	.LVL99:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 35


 1057              		.loc 1 813 10 view .LVU249
 1058 0020 0446     		mov	r4, r0
 1059 0022 0D46     		mov	r5, r1
 1060              	.LVL100:
 814:flight/libraries/printf/printf.c ****   return (
 1061              		.loc 1 814 3 is_stmt 1 view .LVU250
 815:flight/libraries/printf/printf.c ****     // Taylor expansion around 1.5:
 816:flight/libraries/printf/printf.c ****     0.1760912590556812420           // Expansion term 0: ln(1.5)            / ln(10)
 817:flight/libraries/printf/printf.c ****     + z     * 0.2895296546021678851 // Expansion term 1: (M - 1.5)   * 2/3  / ln(10)
 1062              		.loc 1 817 13 is_stmt 0 view .LVU251
 1063 0024 22A3     		adr	r3, .L64
 1064 0026 D3E90023 		ldrd	r2, [r3]
 1065 002a FFF7FEFF 		bl	__aeabi_dmul
 1066              	.LVL101:
 1067              		.loc 1 817 5 view .LVU252
 1068 002e 22A3     		adr	r3, .L64+8
 1069 0030 D3E90023 		ldrd	r2, [r3]
 1070 0034 FFF7FEFF 		bl	__aeabi_dadd
 1071              	.LVL102:
 1072 0038 8046     		mov	r8, r0
 1073 003a 8946     		mov	r9, r1
 818:flight/libraries/printf/printf.c **** #if PRINTF_LOG10_TAYLOR_TERMS > 2
 819:flight/libraries/printf/printf.c ****     - z*z   * 0.0965098848673892950 // Expansion term 2: (M - 1.5)^2 * 2/9  / ln(10)
 1074              		.loc 1 819 8 view .LVU253
 1075 003c 2246     		mov	r2, r4
 1076 003e 2B46     		mov	r3, r5
 1077 0040 2046     		mov	r0, r4
 1078 0042 2946     		mov	r1, r5
 1079 0044 FFF7FEFF 		bl	__aeabi_dmul
 1080              	.LVL103:
 1081 0048 0646     		mov	r6, r0
 1082 004a 0F46     		mov	r7, r1
 1083              		.loc 1 819 13 view .LVU254
 1084 004c 1CA3     		adr	r3, .L64+16
 1085 004e D3E90023 		ldrd	r2, [r3]
 1086 0052 FFF7FEFF 		bl	__aeabi_dmul
 1087              	.LVL104:
 1088 0056 0246     		mov	r2, r0
 1089 0058 0B46     		mov	r3, r1
 1090              		.loc 1 819 5 view .LVU255
 1091 005a 4046     		mov	r0, r8
 1092 005c 4946     		mov	r1, r9
 1093 005e FFF7FEFF 		bl	__aeabi_dsub
 1094              	.LVL105:
 1095 0062 8046     		mov	r8, r0
 1096 0064 8946     		mov	r9, r1
 820:flight/libraries/printf/printf.c **** #if PRINTF_LOG10_TAYLOR_TERMS > 3
 821:flight/libraries/printf/printf.c ****     + z*z*z * 0.0428932821632841311 // Expansion term 2: (M - 1.5)^3 * 8/81 / ln(10)
 1097              		.loc 1 821 10 view .LVU256
 1098 0066 2246     		mov	r2, r4
 1099 0068 2B46     		mov	r3, r5
 1100 006a 3046     		mov	r0, r6
 1101 006c 3946     		mov	r1, r7
 1102 006e FFF7FEFF 		bl	__aeabi_dmul
 1103              	.LVL106:
 1104              		.loc 1 821 13 view .LVU257
 1105 0072 15A3     		adr	r3, .L64+24
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 36


 1106 0074 D3E90023 		ldrd	r2, [r3]
 1107 0078 FFF7FEFF 		bl	__aeabi_dmul
 1108              	.LVL107:
 1109 007c 0246     		mov	r2, r0
 1110 007e 0B46     		mov	r3, r1
 1111              		.loc 1 821 5 view .LVU258
 1112 0080 4046     		mov	r0, r8
 1113 0082 4946     		mov	r1, r9
 1114 0084 FFF7FEFF 		bl	__aeabi_dadd
 1115              	.LVL108:
 1116 0088 0446     		mov	r4, r0
 1117              	.LVL109:
 1118              		.loc 1 821 5 view .LVU259
 1119 008a 0D46     		mov	r5, r1
 822:flight/libraries/printf/printf.c **** #endif
 823:flight/libraries/printf/printf.c **** #endif
 824:flight/libraries/printf/printf.c ****     // exact log_2 of the exponent x, with logarithm base change
 825:flight/libraries/printf/printf.c ****     + exp2 * 0.30102999566398119521 // = exp2 * log_10(2) = exp2 * ln(2)/ln(10)
 1120              		.loc 1 825 12 view .LVU260
 1121 008c 5046     		mov	r0, r10
 1122 008e FFF7FEFF 		bl	__aeabi_i2d
 1123              	.LVL110:
 1124 0092 0FA3     		adr	r3, .L64+32
 1125 0094 D3E90023 		ldrd	r2, [r3]
 1126 0098 FFF7FEFF 		bl	__aeabi_dmul
 1127              	.LVL111:
 1128 009c 0246     		mov	r2, r0
 1129 009e 0B46     		mov	r3, r1
 1130              		.loc 1 825 5 view .LVU261
 1131 00a0 2046     		mov	r0, r4
 1132 00a2 2946     		mov	r1, r5
 1133 00a4 FFF7FEFF 		bl	__aeabi_dadd
 1134              	.LVL112:
 826:flight/libraries/printf/printf.c ****   );
 827:flight/libraries/printf/printf.c **** }
 1135              		.loc 1 827 1 view .LVU262
 1136 00a8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1137              	.LVL113:
 1138              	.L65:
 1139              		.loc 1 827 1 view .LVU263
 1140 00ac AFF30080 		.align	3
 1141              	.L64:
 1142 00b0 5F436F63 		.word	1668236127
 1143 00b4 A787D23F 		.word	1070761895
 1144 00b8 FCB7608B 		.word	-1956595716
 1145 00bc 288AC63F 		.word	1069976104
 1146 00c0 7E043F2F 		.word	792659070
 1147 00c4 DFB4B83F 		.word	1069069535
 1148 00c8 FF0338B8 		.word	-1204288513
 1149 00cc 1BF6A53F 		.word	1067841051
 1150 00d0 FF799F50 		.word	1352628735
 1151 00d4 1344D33F 		.word	1070810131
 1152 00d8 0000F83F 		.word	1073217536
 1153              		.cfi_endproc
 1154              	.LFE24:
 1156              		.section	.text.pow10_of_int,"ax",%progbits
 1157              		.align	1
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 37


 1158              		.syntax unified
 1159              		.thumb
 1160              		.thumb_func
 1162              	pow10_of_int:
 1163              	.LVL114:
 1164              	.LFB25:
 828:flight/libraries/printf/printf.c **** 
 829:flight/libraries/printf/printf.c **** 
 830:flight/libraries/printf/printf.c **** static double pow10_of_int(int floored_exp10)
 831:flight/libraries/printf/printf.c **** {
 1165              		.loc 1 831 1 is_stmt 1 view -0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 832:flight/libraries/printf/printf.c ****   // A crude hack for avoiding undesired behavior with barely-normal or slightly-subnormal values.
 833:flight/libraries/printf/printf.c ****   if (floored_exp10 == DOUBLE_MAX_SUBNORMAL_EXPONENT_OF_10) {
 1169              		.loc 1 833 3 view .LVU265
 1170              		.loc 1 833 6 is_stmt 0 view .LVU266
 1171 0000 10F59A7F 		cmn	r0, #308
 1172 0004 77D0     		beq	.L68
 831:flight/libraries/printf/printf.c ****   // A crude hack for avoiding undesired behavior with barely-normal or slightly-subnormal values.
 1173              		.loc 1 831 1 view .LVU267
 1174 0006 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1175              	.LCFI27:
 1176              		.cfi_def_cfa_offset 40
 1177              		.cfi_offset 3, -40
 1178              		.cfi_offset 4, -36
 1179              		.cfi_offset 5, -32
 1180              		.cfi_offset 6, -28
 1181              		.cfi_offset 7, -24
 1182              		.cfi_offset 8, -20
 1183              		.cfi_offset 9, -16
 1184              		.cfi_offset 10, -12
 1185              		.cfi_offset 11, -8
 1186              		.cfi_offset 14, -4
 834:flight/libraries/printf/printf.c ****     return DOUBLE_MAX_SUBNORMAL_POWER_OF_10;
 835:flight/libraries/printf/printf.c ****   }
 836:flight/libraries/printf/printf.c ****   // Compute 10^(floored_exp10) but (try to) make sure that doesn't overflow
 837:flight/libraries/printf/printf.c ****   double_with_bit_access dwba;
 1187              		.loc 1 837 3 is_stmt 1 view .LVU268
 838:flight/libraries/printf/printf.c ****   int exp2 = bastardized_floor(floored_exp10 * 3.321928094887362 + 0.5);
 1188              		.loc 1 838 3 view .LVU269
 1189              		.loc 1 838 46 is_stmt 0 view .LVU270
 1190 000a FFF7FEFF 		bl	__aeabi_i2d
 1191              	.LVL115:
 1192              		.loc 1 838 46 view .LVU271
 1193 000e 0446     		mov	r4, r0
 1194 0010 0D46     		mov	r5, r1
 1195 0012 46A3     		adr	r3, .L73+44
 1196 0014 D3E90023 		ldrd	r2, [r3]
 1197 0018 FFF7FEFF 		bl	__aeabi_dmul
 1198              	.LVL116:
 1199              		.loc 1 838 14 view .LVU272
 1200 001c 0022     		movs	r2, #0
 1201 001e 3E4B     		ldr	r3, .L73+24
 1202 0020 FFF7FEFF 		bl	__aeabi_dadd
 1203              	.LVL117:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 38


 1204 0024 FFF7FEFF 		bl	bastardized_floor
 1205              	.LVL118:
 1206 0028 8046     		mov	r8, r0
 1207              	.LVL119:
 839:flight/libraries/printf/printf.c ****   const double z  = floored_exp10 * 2.302585092994046 - exp2 * 0.6931471805599453;
 1208              		.loc 1 839 3 is_stmt 1 view .LVU273
 1209              		.loc 1 839 35 is_stmt 0 view .LVU274
 1210 002a 35A3     		adr	r3, .L73
 1211 002c D3E90023 		ldrd	r2, [r3]
 1212 0030 2046     		mov	r0, r4
 1213              	.LVL120:
 1214              		.loc 1 839 35 view .LVU275
 1215 0032 2946     		mov	r1, r5
 1216 0034 FFF7FEFF 		bl	__aeabi_dmul
 1217              	.LVL121:
 1218 0038 0446     		mov	r4, r0
 1219 003a 0D46     		mov	r5, r1
 1220              		.loc 1 839 62 view .LVU276
 1221 003c 4046     		mov	r0, r8
 1222 003e FFF7FEFF 		bl	__aeabi_i2d
 1223              	.LVL122:
 1224 0042 31A3     		adr	r3, .L73+8
 1225 0044 D3E90023 		ldrd	r2, [r3]
 1226 0048 FFF7FEFF 		bl	__aeabi_dmul
 1227              	.LVL123:
 1228 004c 0246     		mov	r2, r0
 1229 004e 0B46     		mov	r3, r1
 1230              		.loc 1 839 16 view .LVU277
 1231 0050 2046     		mov	r0, r4
 1232 0052 2946     		mov	r1, r5
 1233 0054 FFF7FEFF 		bl	__aeabi_dsub
 1234              	.LVL124:
 1235 0058 0446     		mov	r4, r0
 1236 005a 0D46     		mov	r5, r1
 1237              	.LVL125:
 840:flight/libraries/printf/printf.c ****   const double z2 = z * z;
 1238              		.loc 1 840 3 is_stmt 1 view .LVU278
 1239              		.loc 1 840 16 is_stmt 0 view .LVU279
 1240 005c 0246     		mov	r2, r0
 1241 005e 0B46     		mov	r3, r1
 1242 0060 FFF7FEFF 		bl	__aeabi_dmul
 1243              	.LVL126:
 1244 0064 0646     		mov	r6, r0
 1245 0066 0F46     		mov	r7, r1
 1246              	.LVL127:
 841:flight/libraries/printf/printf.c ****   dwba.U = ((double_uint_t)(exp2) + DOUBLE_BASE_EXPONENT) << DOUBLE_STORED_MANTISSA_BITS;
 1247              		.loc 1 841 3 is_stmt 1 view .LVU280
 1248              		.loc 1 841 35 is_stmt 0 view .LVU281
 1249 0068 08F2FF30 		addw	r0, r8, #1023
 1250              		.loc 1 841 59 view .LVU282
 1251 006c 4FF00008 		mov	r8, #0
 1252              	.LVL128:
 1253              		.loc 1 841 59 view .LVU283
 1254 0070 4FEA0059 		lsl	r9, r0, #20
 842:flight/libraries/printf/printf.c ****   // compute exp(z) using continued fractions,
 843:flight/libraries/printf/printf.c ****   // see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
 844:flight/libraries/printf/printf.c ****   dwba.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 39


 1255              		.loc 1 844 3 is_stmt 1 view .LVU284
 1256              		.loc 1 844 19 is_stmt 0 view .LVU285
 1257 0074 2246     		mov	r2, r4
 1258 0076 2B46     		mov	r3, r5
 1259 0078 2046     		mov	r0, r4
 1260              	.LVL129:
 1261              		.loc 1 844 19 view .LVU286
 1262 007a 2946     		mov	r1, r5
 1263 007c FFF7FEFF 		bl	__aeabi_dadd
 1264              	.LVL130:
 1265 0080 8246     		mov	r10, r0
 1266 0082 8B46     		mov	fp, r1
 1267              		.loc 1 844 28 view .LVU287
 1268 0084 2246     		mov	r2, r4
 1269 0086 2B46     		mov	r3, r5
 1270 0088 0020     		movs	r0, #0
 1271 008a 4FF08041 		mov	r1, #1073741824
 1272 008e FFF7FEFF 		bl	__aeabi_dsub
 1273              	.LVL131:
 1274 0092 0446     		mov	r4, r0
 1275              	.LVL132:
 1276              		.loc 1 844 28 view .LVU288
 1277 0094 0D46     		mov	r5, r1
 1278              		.loc 1 844 60 view .LVU289
 1279 0096 0022     		movs	r2, #0
 1280 0098 204B     		ldr	r3, .L73+28
 1281 009a 3046     		mov	r0, r6
 1282 009c 3946     		mov	r1, r7
 1283 009e FFF7FEFF 		bl	__aeabi_ddiv
 1284              	.LVL133:
 1285              		.loc 1 844 55 view .LVU290
 1286 00a2 0022     		movs	r2, #0
 1287 00a4 1E4B     		ldr	r3, .L73+32
 1288 00a6 FFF7FEFF 		bl	__aeabi_dadd
 1289              	.LVL134:
 1290 00aa 0246     		mov	r2, r0
 1291 00ac 0B46     		mov	r3, r1
 1292              		.loc 1 844 49 view .LVU291
 1293 00ae 3046     		mov	r0, r6
 1294 00b0 3946     		mov	r1, r7
 1295 00b2 FFF7FEFF 		bl	__aeabi_ddiv
 1296              	.LVL135:
 1297              		.loc 1 844 43 view .LVU292
 1298 00b6 0022     		movs	r2, #0
 1299 00b8 1A4B     		ldr	r3, .L73+36
 1300 00ba FFF7FEFF 		bl	__aeabi_dadd
 1301              	.LVL136:
 1302 00be 0246     		mov	r2, r0
 1303 00c0 0B46     		mov	r3, r1
 1304              		.loc 1 844 38 view .LVU293
 1305 00c2 3046     		mov	r0, r6
 1306 00c4 3946     		mov	r1, r7
 1307 00c6 FFF7FEFF 		bl	__aeabi_ddiv
 1308              	.LVL137:
 1309 00ca 0246     		mov	r2, r0
 1310 00cc 0B46     		mov	r3, r1
 1311              		.loc 1 844 32 view .LVU294
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 40


 1312 00ce 2046     		mov	r0, r4
 1313 00d0 2946     		mov	r1, r5
 1314 00d2 FFF7FEFF 		bl	__aeabi_dadd
 1315              	.LVL138:
 1316 00d6 0246     		mov	r2, r0
 1317 00d8 0B46     		mov	r3, r1
 1318              		.loc 1 844 23 view .LVU295
 1319 00da 5046     		mov	r0, r10
 1320 00dc 5946     		mov	r1, fp
 1321 00de FFF7FEFF 		bl	__aeabi_ddiv
 1322              	.LVL139:
 1323              		.loc 1 844 15 view .LVU296
 1324 00e2 0022     		movs	r2, #0
 1325 00e4 104B     		ldr	r3, .L73+40
 1326 00e6 FFF7FEFF 		bl	__aeabi_dadd
 1327              	.LVL140:
 1328              		.loc 1 844 10 view .LVU297
 1329 00ea 4246     		mov	r2, r8
 1330 00ec 4B46     		mov	r3, r9
 1331 00ee FFF7FEFF 		bl	__aeabi_dmul
 1332              	.LVL141:
 845:flight/libraries/printf/printf.c ****   return dwba.F;
 1333              		.loc 1 845 3 is_stmt 1 view .LVU298
 846:flight/libraries/printf/printf.c **** }
 1334              		.loc 1 846 1 is_stmt 0 view .LVU299
 1335 00f2 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1336              	.LVL142:
 1337              	.L68:
 1338              	.LCFI28:
 1339              		.cfi_def_cfa_offset 0
 1340              		.cfi_restore 3
 1341              		.cfi_restore 4
 1342              		.cfi_restore 5
 1343              		.cfi_restore 6
 1344              		.cfi_restore 7
 1345              		.cfi_restore 8
 1346              		.cfi_restore 9
 1347              		.cfi_restore 10
 1348              		.cfi_restore 11
 1349              		.cfi_restore 14
 834:flight/libraries/printf/printf.c ****   }
 1350              		.loc 1 834 12 view .LVU300
 1351 00f6 06A1     		adr	r1, .L73+16
 1352 00f8 D1E90001 		ldrd	r0, [r1]
 1353              	.LVL143:
 1354              		.loc 1 846 1 view .LVU301
 1355 00fc 7047     		bx	lr
 1356              	.L74:
 1357 00fe 00BF     		.align	3
 1358              	.L73:
 1359 0100 1655B5BB 		.word	-1145744106
 1360 0104 B16B0240 		.word	1073900465
 1361 0108 EF39FAFE 		.word	-17155601
 1362 010c 422EE63F 		.word	1072049730
 1363 0110 D2E81978 		.word	2014963922
 1364 0114 D6300700 		.word	471254
 1365 0118 0000E03F 		.word	1071644672
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 41


 1366 011c 00002C40 		.word	1076625408
 1367 0120 00002440 		.word	1076101120
 1368 0124 00001840 		.word	1075314688
 1369 0128 0000F03F 		.word	1072693248
 1370 012c 71A37909 		.word	158966641
 1371 0130 4F930A40 		.word	1074434895
 1372              		.cfi_endproc
 1373              	.LFE25:
 1375              		.section	.text.parse_flags,"ax",%progbits
 1376              		.align	1
 1377              		.syntax unified
 1378              		.thumb
 1379              		.thumb_func
 1381              	parse_flags:
 1382              	.LVL144:
 1383              	.LFB28:
 847:flight/libraries/printf/printf.c **** 
 848:flight/libraries/printf/printf.c **** static void print_exponential_number(output_gadget_t* output, double number, printf_size_t precisio
 849:flight/libraries/printf/printf.c **** {
 850:flight/libraries/printf/printf.c ****   const bool negative = get_sign_bit(number);
 851:flight/libraries/printf/printf.c ****   // This number will decrease gradually (by factors of 10) as we "extract" the exponent out of it
 852:flight/libraries/printf/printf.c ****   double abs_number =  negative ? -number : number;
 853:flight/libraries/printf/printf.c **** 
 854:flight/libraries/printf/printf.c ****   int floored_exp10;
 855:flight/libraries/printf/printf.c ****   bool abs_exp10_covered_by_powers_table;
 856:flight/libraries/printf/printf.c ****   struct scaling_factor normalization;
 857:flight/libraries/printf/printf.c **** 
 858:flight/libraries/printf/printf.c **** 
 859:flight/libraries/printf/printf.c ****   // Determine the decimal exponent
 860:flight/libraries/printf/printf.c ****   if (abs_number == 0.0) {
 861:flight/libraries/printf/printf.c ****     // TODO: This is a special-case for 0.0 (and -0.0); but proper handling is required for denorma
 862:flight/libraries/printf/printf.c ****     floored_exp10 = 0; // ... and no need to set a normalization factor or check the powers table
 863:flight/libraries/printf/printf.c ****   }
 864:flight/libraries/printf/printf.c ****   else  {
 865:flight/libraries/printf/printf.c ****     double exp10 = log10_of_positive(abs_number);
 866:flight/libraries/printf/printf.c ****     floored_exp10 = bastardized_floor(exp10);
 867:flight/libraries/printf/printf.c ****     double p10 = pow10_of_int(floored_exp10);
 868:flight/libraries/printf/printf.c ****     // correct for rounding errors
 869:flight/libraries/printf/printf.c ****     if (abs_number < p10) {
 870:flight/libraries/printf/printf.c ****       floored_exp10--;
 871:flight/libraries/printf/printf.c ****       p10 /= 10;
 872:flight/libraries/printf/printf.c ****     }
 873:flight/libraries/printf/printf.c ****     abs_exp10_covered_by_powers_table = PRINTF_ABS(floored_exp10) < PRINTF_MAX_PRECOMPUTED_POWER_OF
 874:flight/libraries/printf/printf.c ****     normalization.raw_factor = abs_exp10_covered_by_powers_table ? powers_of_10[PRINTF_ABS(floored_
 875:flight/libraries/printf/printf.c ****   }
 876:flight/libraries/printf/printf.c **** 
 877:flight/libraries/printf/printf.c ****   // We now begin accounting for the widths of the two parts of our printed field:
 878:flight/libraries/printf/printf.c ****   // the decimal part after decimal exponent extraction, and the base-10 exponent part.
 879:flight/libraries/printf/printf.c ****   // For both of these, the value of 0 has a special meaning, but not the same one:
 880:flight/libraries/printf/printf.c ****   // a 0 exponent-part width means "don't print the exponent"; a 0 decimal-part width
 881:flight/libraries/printf/printf.c ****   // means "use as many characters as necessary".
 882:flight/libraries/printf/printf.c **** 
 883:flight/libraries/printf/printf.c ****   bool fall_back_to_decimal_only_mode = false;
 884:flight/libraries/printf/printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
 885:flight/libraries/printf/printf.c ****     int required_significant_digits = (precision == 0) ? 1 : (int) precision;
 886:flight/libraries/printf/printf.c ****     // Should we want to fall-back to "%f" mode, and only print the decimal part?
 887:flight/libraries/printf/printf.c ****     fall_back_to_decimal_only_mode = (floored_exp10 >= -4 && floored_exp10 < required_significant_d
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 42


 888:flight/libraries/printf/printf.c ****     // Now, let's adjust the precision
 889:flight/libraries/printf/printf.c ****     // This also decided how we adjust the precision value - as in "%g" mode,
 890:flight/libraries/printf/printf.c ****     // "precision" is the number of _significant digits_, and this is when we "translate"
 891:flight/libraries/printf/printf.c ****     // the precision value to an actual number of decimal digits.
 892:flight/libraries/printf/printf.c ****     int precision_ = fall_back_to_decimal_only_mode ?
 893:flight/libraries/printf/printf.c ****                      (int) precision - 1 - floored_exp10 :
 894:flight/libraries/printf/printf.c ****         (int) precision - 1; // the presence of the exponent ensures only one significant digit com
 895:flight/libraries/printf/printf.c ****     precision = (precision_ > 0 ? (unsigned) precision_ : 0U);
 896:flight/libraries/printf/printf.c ****     flags |= FLAGS_PRECISION;   // make sure print_broken_up_decimal respects our choice above
 897:flight/libraries/printf/printf.c ****   }
 898:flight/libraries/printf/printf.c **** 
 899:flight/libraries/printf/printf.c ****   normalization.multiply = (floored_exp10 < 0 && abs_exp10_covered_by_powers_table);
 900:flight/libraries/printf/printf.c ****   bool should_skip_normalization = (fall_back_to_decimal_only_mode || floored_exp10 == 0);
 901:flight/libraries/printf/printf.c ****   struct double_components decimal_part_components =
 902:flight/libraries/printf/printf.c ****     should_skip_normalization ?
 903:flight/libraries/printf/printf.c ****     get_components(negative ? -abs_number : abs_number, precision) :
 904:flight/libraries/printf/printf.c ****     get_normalized_components(negative, precision, abs_number, normalization, floored_exp10);
 905:flight/libraries/printf/printf.c **** 
 906:flight/libraries/printf/printf.c ****   // Account for roll-over, e.g. rounding from 9.99 to 100.0 - which effects
 907:flight/libraries/printf/printf.c ****   // the exponent and may require additional tweaking of the parts
 908:flight/libraries/printf/printf.c ****   if (fall_back_to_decimal_only_mode) {
 909:flight/libraries/printf/printf.c ****     if ((flags & FLAGS_ADAPT_EXP) && floored_exp10 >= -1 && decimal_part_components.integral == pow
 910:flight/libraries/printf/printf.c ****       floored_exp10++; // Not strictly necessary, since floored_exp10 is no longer really used
 911:flight/libraries/printf/printf.c ****       precision--;
 912:flight/libraries/printf/printf.c ****       // ... and it should already be the case that decimal_part_components.fractional == 0
 913:flight/libraries/printf/printf.c ****     }
 914:flight/libraries/printf/printf.c ****     // TODO: What about rollover strictly within the fractional part?
 915:flight/libraries/printf/printf.c ****   }
 916:flight/libraries/printf/printf.c ****   else {
 917:flight/libraries/printf/printf.c ****     if (decimal_part_components.integral >= 10) {
 918:flight/libraries/printf/printf.c ****       floored_exp10++;
 919:flight/libraries/printf/printf.c ****       decimal_part_components.integral = 1;
 920:flight/libraries/printf/printf.c ****       decimal_part_components.fractional = 0;
 921:flight/libraries/printf/printf.c ****     }
 922:flight/libraries/printf/printf.c ****   }
 923:flight/libraries/printf/printf.c **** 
 924:flight/libraries/printf/printf.c ****   // the floored_exp10 format is "E%+03d" and largest possible floored_exp10 value for a 64-bit dou
 925:flight/libraries/printf/printf.c ****   // is "307" (for 2^1023), so we set aside 4-5 characters overall
 926:flight/libraries/printf/printf.c ****   printf_size_t exp10_part_width = fall_back_to_decimal_only_mode ? 0U : (PRINTF_ABS(floored_exp10)
 927:flight/libraries/printf/printf.c **** 
 928:flight/libraries/printf/printf.c ****   printf_size_t decimal_part_width =
 929:flight/libraries/printf/printf.c ****     ((flags & FLAGS_LEFT) && exp10_part_width) ?
 930:flight/libraries/printf/printf.c ****       // We're padding on the right, so the width constraint is the exponent part's
 931:flight/libraries/printf/printf.c ****       // problem, not the decimal part's, so we'll use as many characters as we need:
 932:flight/libraries/printf/printf.c ****       0U :
 933:flight/libraries/printf/printf.c ****       // We're padding on the left; so the width constraint is the decimal part's
 934:flight/libraries/printf/printf.c ****       // problem. Well, can both the decimal part and the exponent part fit within our overall widt
 935:flight/libraries/printf/printf.c ****       ((width > exp10_part_width) ?
 936:flight/libraries/printf/printf.c ****         // Yes, so we limit our decimal part's width.
 937:flight/libraries/printf/printf.c ****         // (Note this is trivially valid even if we've fallen back to "%f" mode)
 938:flight/libraries/printf/printf.c ****         width - exp10_part_width :
 939:flight/libraries/printf/printf.c ****         // No; we just give up on any restriction on the decimal part and use as many
 940:flight/libraries/printf/printf.c ****         // characters as we need
 941:flight/libraries/printf/printf.c ****         0U);
 942:flight/libraries/printf/printf.c **** 
 943:flight/libraries/printf/printf.c ****   const printf_size_t printed_exponential_start_pos = output->pos;
 944:flight/libraries/printf/printf.c ****   print_broken_up_decimal(decimal_part_components, output, precision, decimal_part_width, flags, bu
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 43


 945:flight/libraries/printf/printf.c **** 
 946:flight/libraries/printf/printf.c ****   if (! fall_back_to_decimal_only_mode) {
 947:flight/libraries/printf/printf.c ****     putchar_via_gadget(output, (flags & FLAGS_UPPERCASE) ? 'E' : 'e');
 948:flight/libraries/printf/printf.c ****     print_integer(output,
 949:flight/libraries/printf/printf.c ****                   ABS_FOR_PRINTING(floored_exp10),
 950:flight/libraries/printf/printf.c ****                   floored_exp10 < 0, 10, 0, exp10_part_width - 1,
 951:flight/libraries/printf/printf.c ****                 FLAGS_ZEROPAD | FLAGS_PLUS);
 952:flight/libraries/printf/printf.c ****     if (flags & FLAGS_LEFT) {
 953:flight/libraries/printf/printf.c ****       // We need to right-pad with spaces to meet the width requirement
 954:flight/libraries/printf/printf.c ****       while (output->pos - printed_exponential_start_pos < width) {
 955:flight/libraries/printf/printf.c ****         putchar_via_gadget(output, ' ');
 956:flight/libraries/printf/printf.c ****       }
 957:flight/libraries/printf/printf.c ****     }
 958:flight/libraries/printf/printf.c ****   }
 959:flight/libraries/printf/printf.c **** }
 960:flight/libraries/printf/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
 961:flight/libraries/printf/printf.c **** 
 962:flight/libraries/printf/printf.c **** static void print_floating_point(output_gadget_t* output, double value, printf_size_t precision, pr
 963:flight/libraries/printf/printf.c **** {
 964:flight/libraries/printf/printf.c ****   char buf[PRINTF_DECIMAL_BUFFER_SIZE];
 965:flight/libraries/printf/printf.c ****   printf_size_t len = 0U;
 966:flight/libraries/printf/printf.c **** 
 967:flight/libraries/printf/printf.c ****   // test for special values
 968:flight/libraries/printf/printf.c ****   if (value != value) {
 969:flight/libraries/printf/printf.c ****     out_rev_(output, "nan", 3, width, flags);
 970:flight/libraries/printf/printf.c ****     return;
 971:flight/libraries/printf/printf.c ****   }
 972:flight/libraries/printf/printf.c ****   if (value < -DBL_MAX) {
 973:flight/libraries/printf/printf.c ****     out_rev_(output, "fni-", 4, width, flags);
 974:flight/libraries/printf/printf.c ****     return;
 975:flight/libraries/printf/printf.c ****   }
 976:flight/libraries/printf/printf.c ****   if (value > DBL_MAX) {
 977:flight/libraries/printf/printf.c ****     out_rev_(output, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, 
 978:flight/libraries/printf/printf.c ****     return;
 979:flight/libraries/printf/printf.c ****   }
 980:flight/libraries/printf/printf.c **** 
 981:flight/libraries/printf/printf.c ****   if (!prefer_exponential &&
 982:flight/libraries/printf/printf.c ****       ((value > PRINTF_FLOAT_NOTATION_THRESHOLD) || (value < -PRINTF_FLOAT_NOTATION_THRESHOLD))) {
 983:flight/libraries/printf/printf.c ****     // The required behavior of standard printf is to print _every_ integral-part digit -- which co
 984:flight/libraries/printf/printf.c ****     // printing hundreds of characters, overflowing any fixed internal buffer and necessitating a m
 985:flight/libraries/printf/printf.c ****     // implementation.
 986:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
 987:flight/libraries/printf/printf.c ****     print_exponential_number(output, value, precision, width, flags, buf, len);
 988:flight/libraries/printf/printf.c **** #endif
 989:flight/libraries/printf/printf.c ****     return;
 990:flight/libraries/printf/printf.c ****   }
 991:flight/libraries/printf/printf.c **** 
 992:flight/libraries/printf/printf.c ****   // set default precision, if not set explicitly
 993:flight/libraries/printf/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 994:flight/libraries/printf/printf.c ****     precision = PRINTF_DEFAULT_FLOAT_PRECISION;
 995:flight/libraries/printf/printf.c ****   }
 996:flight/libraries/printf/printf.c **** 
 997:flight/libraries/printf/printf.c ****   // limit precision so that our integer holding the fractional part does not overflow
 998:flight/libraries/printf/printf.c ****   while ((len < PRINTF_DECIMAL_BUFFER_SIZE) && (precision > PRINTF_MAX_SUPPORTED_PRECISION)) {
 999:flight/libraries/printf/printf.c ****     buf[len++] = '0'; // This respects the precision in terms of result length only
1000:flight/libraries/printf/printf.c ****     precision--;
1001:flight/libraries/printf/printf.c ****   }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 44


1002:flight/libraries/printf/printf.c **** 
1003:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
1004:flight/libraries/printf/printf.c ****   if (prefer_exponential)
1005:flight/libraries/printf/printf.c ****     print_exponential_number(output, value, precision, width, flags, buf, len);
1006:flight/libraries/printf/printf.c ****   else
1007:flight/libraries/printf/printf.c **** #endif
1008:flight/libraries/printf/printf.c ****     print_decimal_number(output, value, precision, width, flags, buf, len);
1009:flight/libraries/printf/printf.c **** }
1010:flight/libraries/printf/printf.c **** 
1011:flight/libraries/printf/printf.c **** #endif  // (PRINTF_SUPPORT_DECIMAL_SPECIFIERS || PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS)
1012:flight/libraries/printf/printf.c **** 
1013:flight/libraries/printf/printf.c **** // Advances the format pointer past the flags, and returns the parsed flags
1014:flight/libraries/printf/printf.c **** // due to the characters passed
1015:flight/libraries/printf/printf.c **** static printf_flags_t parse_flags(const char** format)
1016:flight/libraries/printf/printf.c **** {
 1384              		.loc 1 1016 1 is_stmt 1 view -0
 1385              		.cfi_startproc
 1386              		@ args = 0, pretend = 0, frame = 0
 1387              		@ frame_needed = 0, uses_anonymous_args = 0
 1388              		@ link register save eliminated.
 1389              		.loc 1 1016 1 is_stmt 0 view .LVU303
 1390 0000 0146     		mov	r1, r0
1017:flight/libraries/printf/printf.c ****   printf_flags_t flags = 0U;
 1391              		.loc 1 1017 3 is_stmt 1 view .LVU304
 1392              	.LVL145:
 1393              		.loc 1 1017 18 is_stmt 0 view .LVU305
 1394 0002 0020     		movs	r0, #0
 1395              	.LVL146:
 1396              	.L76:
1018:flight/libraries/printf/printf.c ****   do {
 1397              		.loc 1 1018 3 is_stmt 1 view .LVU306
1019:flight/libraries/printf/printf.c ****     switch (**format) {
 1398              		.loc 1 1019 5 view .LVU307
 1399              		.loc 1 1019 14 is_stmt 0 view .LVU308
 1400 0004 0A68     		ldr	r2, [r1]
 1401              		.loc 1 1019 13 view .LVU309
 1402 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1403              		.loc 1 1019 5 view .LVU310
 1404 0008 203B     		subs	r3, r3, #32
 1405 000a 102B     		cmp	r3, #16
 1406 000c 23D8     		bhi	.L75
 1407 000e DFE803F0 		tbb	[pc, r3]
 1408              	.L79:
 1409 0012 18       		.byte	(.L83-.L79)/2
 1410 0013 22       		.byte	(.L75-.L79)/2
 1411 0014 22       		.byte	(.L75-.L79)/2
 1412 0015 1D       		.byte	(.L82-.L79)/2
 1413 0016 22       		.byte	(.L75-.L79)/2
 1414 0017 22       		.byte	(.L75-.L79)/2
 1415 0018 22       		.byte	(.L75-.L79)/2
 1416 0019 22       		.byte	(.L75-.L79)/2
 1417 001a 22       		.byte	(.L75-.L79)/2
 1418 001b 22       		.byte	(.L75-.L79)/2
 1419 001c 22       		.byte	(.L75-.L79)/2
 1420 001d 13       		.byte	(.L81-.L79)/2
 1421 001e 22       		.byte	(.L75-.L79)/2
 1422 001f 0E       		.byte	(.L80-.L79)/2
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 45


 1423 0020 22       		.byte	(.L75-.L79)/2
 1424 0021 22       		.byte	(.L75-.L79)/2
 1425 0022 09       		.byte	(.L78-.L79)/2
 1426 0023 00       		.p2align 1
 1427              	.L78:
1020:flight/libraries/printf/printf.c ****       case '0': flags |= FLAGS_ZEROPAD; (*format)++; break;
 1428              		.loc 1 1020 17 is_stmt 1 view .LVU311
 1429              		.loc 1 1020 23 is_stmt 0 view .LVU312
 1430 0024 40F00100 		orr	r0, r0, #1
 1431              	.LVL147:
 1432              		.loc 1 1020 41 is_stmt 1 view .LVU313
 1433              		.loc 1 1020 50 is_stmt 0 view .LVU314
 1434 0028 0132     		adds	r2, r2, #1
 1435 002a 0A60     		str	r2, [r1]
 1436              		.loc 1 1020 54 is_stmt 1 view .LVU315
 1437              		.loc 1 1020 7 is_stmt 0 view .LVU316
 1438 002c EAE7     		b	.L76
 1439              	.L80:
1021:flight/libraries/printf/printf.c ****       case '-': flags |= FLAGS_LEFT;    (*format)++; break;
 1440              		.loc 1 1021 17 is_stmt 1 view .LVU317
 1441              		.loc 1 1021 23 is_stmt 0 view .LVU318
 1442 002e 40F00200 		orr	r0, r0, #2
 1443              	.LVL148:
 1444              		.loc 1 1021 41 is_stmt 1 view .LVU319
 1445              		.loc 1 1021 50 is_stmt 0 view .LVU320
 1446 0032 0132     		adds	r2, r2, #1
 1447 0034 0A60     		str	r2, [r1]
 1448              		.loc 1 1021 54 is_stmt 1 view .LVU321
 1449              		.loc 1 1021 7 is_stmt 0 view .LVU322
 1450 0036 E5E7     		b	.L76
 1451              	.L81:
1022:flight/libraries/printf/printf.c ****       case '+': flags |= FLAGS_PLUS;    (*format)++; break;
 1452              		.loc 1 1022 17 is_stmt 1 view .LVU323
 1453              		.loc 1 1022 23 is_stmt 0 view .LVU324
 1454 0038 40F00400 		orr	r0, r0, #4
 1455              	.LVL149:
 1456              		.loc 1 1022 41 is_stmt 1 view .LVU325
 1457              		.loc 1 1022 50 is_stmt 0 view .LVU326
 1458 003c 0132     		adds	r2, r2, #1
 1459 003e 0A60     		str	r2, [r1]
 1460              		.loc 1 1022 54 is_stmt 1 view .LVU327
 1461              		.loc 1 1022 7 is_stmt 0 view .LVU328
 1462 0040 E0E7     		b	.L76
 1463              	.L83:
1023:flight/libraries/printf/printf.c ****       case ' ': flags |= FLAGS_SPACE;   (*format)++; break;
 1464              		.loc 1 1023 17 is_stmt 1 view .LVU329
 1465              		.loc 1 1023 23 is_stmt 0 view .LVU330
 1466 0042 40F00800 		orr	r0, r0, #8
 1467              	.LVL150:
 1468              		.loc 1 1023 41 is_stmt 1 view .LVU331
 1469              		.loc 1 1023 50 is_stmt 0 view .LVU332
 1470 0046 0132     		adds	r2, r2, #1
 1471 0048 0A60     		str	r2, [r1]
 1472              		.loc 1 1023 54 is_stmt 1 view .LVU333
 1473              		.loc 1 1023 7 is_stmt 0 view .LVU334
 1474 004a DBE7     		b	.L76
 1475              	.L82:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 46


1024:flight/libraries/printf/printf.c ****       case '#': flags |= FLAGS_HASH;    (*format)++; break;
 1476              		.loc 1 1024 17 is_stmt 1 view .LVU335
 1477              		.loc 1 1024 23 is_stmt 0 view .LVU336
 1478 004c 40F01000 		orr	r0, r0, #16
 1479              	.LVL151:
 1480              		.loc 1 1024 41 is_stmt 1 view .LVU337
 1481              		.loc 1 1024 50 is_stmt 0 view .LVU338
 1482 0050 0132     		adds	r2, r2, #1
 1483 0052 0A60     		str	r2, [r1]
 1484              		.loc 1 1024 54 is_stmt 1 view .LVU339
 1485              		.loc 1 1024 7 is_stmt 0 view .LVU340
 1486 0054 D6E7     		b	.L76
 1487              	.L75:
1025:flight/libraries/printf/printf.c ****       default : return flags;
1026:flight/libraries/printf/printf.c ****     }
1027:flight/libraries/printf/printf.c ****   } while (true);
1028:flight/libraries/printf/printf.c **** }
 1488              		.loc 1 1028 1 view .LVU341
 1489 0056 7047     		bx	lr
 1490              		.cfi_endproc
 1491              	.LFE28:
 1493              		.section	.text.putchar_wrapper,"ax",%progbits
 1494              		.align	1
 1495              		.syntax unified
 1496              		.thumb
 1497              		.thumb_func
 1499              	putchar_wrapper:
 1500              	.LVL152:
 1501              	.LFB5:
 356:flight/libraries/printf/printf.c ****   (void) unused;
 1502              		.loc 1 356 1 is_stmt 1 view -0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 356:flight/libraries/printf/printf.c ****   (void) unused;
 1506              		.loc 1 356 1 is_stmt 0 view .LVU343
 1507 0000 08B5     		push	{r3, lr}
 1508              	.LCFI29:
 1509              		.cfi_def_cfa_offset 8
 1510              		.cfi_offset 3, -8
 1511              		.cfi_offset 14, -4
 357:flight/libraries/printf/printf.c ****   putchar_(c);
 1512              		.loc 1 357 3 is_stmt 1 view .LVU344
 358:flight/libraries/printf/printf.c **** }
 1513              		.loc 1 358 3 view .LVU345
 1514 0002 FFF7FEFF 		bl	putchar_
 1515              	.LVL153:
 359:flight/libraries/printf/printf.c **** 
 1516              		.loc 1 359 1 is_stmt 0 view .LVU346
 1517 0006 08BD     		pop	{r3, pc}
 1518              		.cfi_endproc
 1519              	.LFE5:
 1521              		.section	.text.out_rev_,"ax",%progbits
 1522              		.align	1
 1523              		.syntax unified
 1524              		.thumb
 1525              		.thumb_func
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 47


 1527              	out_rev_:
 1528              	.LVL154:
 1529              	.LFB13:
 431:flight/libraries/printf/printf.c ****   const printf_size_t start_pos = output->pos;
 1530              		.loc 1 431 1 is_stmt 1 view -0
 1531              		.cfi_startproc
 1532              		@ args = 4, pretend = 0, frame = 0
 1533              		@ frame_needed = 0, uses_anonymous_args = 0
 431:flight/libraries/printf/printf.c ****   const printf_size_t start_pos = output->pos;
 1534              		.loc 1 431 1 is_stmt 0 view .LVU348
 1535 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1536              	.LCFI30:
 1537              		.cfi_def_cfa_offset 32
 1538              		.cfi_offset 4, -32
 1539              		.cfi_offset 5, -28
 1540              		.cfi_offset 6, -24
 1541              		.cfi_offset 7, -20
 1542              		.cfi_offset 8, -16
 1543              		.cfi_offset 9, -12
 1544              		.cfi_offset 10, -8
 1545              		.cfi_offset 14, -4
 1546 0004 0446     		mov	r4, r0
 1547 0006 8846     		mov	r8, r1
 1548 0008 1546     		mov	r5, r2
 1549 000a 1E46     		mov	r6, r3
 1550 000c DDF82090 		ldr	r9, [sp, #32]
 432:flight/libraries/printf/printf.c **** 
 1551              		.loc 1 432 3 is_stmt 1 view .LVU349
 432:flight/libraries/printf/printf.c **** 
 1552              		.loc 1 432 23 is_stmt 0 view .LVU350
 1553 0010 C768     		ldr	r7, [r0, #12]
 1554              	.LVL155:
 435:flight/libraries/printf/printf.c ****     for (printf_size_t i = len; i < width; i++) {
 1555              		.loc 1 435 3 is_stmt 1 view .LVU351
 435:flight/libraries/printf/printf.c ****     for (printf_size_t i = len; i < width; i++) {
 1556              		.loc 1 435 6 is_stmt 0 view .LVU352
 1557 0012 19F0030F 		tst	r9, #3
 1558 0016 17D1     		bne	.L89
 1559              	.LBB75:
 436:flight/libraries/printf/printf.c ****       putchar_via_gadget(output, ' ');
 1560              		.loc 1 436 24 view .LVU353
 1561 0018 9246     		mov	r10, r2
 1562 001a 04E0     		b	.L88
 1563              	.LVL156:
 1564              	.L104:
 1565              	.LBB76:
 1566              	.LBB77:
 331:flight/libraries/printf/printf.c ****   }
 1567              		.loc 1 331 5 is_stmt 1 view .LVU354
 1568 001c 6168     		ldr	r1, [r4, #4]
 1569 001e 2020     		movs	r0, #32
 1570 0020 9047     		blx	r2
 1571              	.LVL157:
 1572              	.L90:
 331:flight/libraries/printf/printf.c ****   }
 1573              		.loc 1 331 5 is_stmt 0 view .LVU355
 1574              	.LBE77:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 48


 1575              	.LBE76:
 436:flight/libraries/printf/printf.c ****       putchar_via_gadget(output, ' ');
 1576              		.loc 1 436 44 is_stmt 1 view .LVU356
 436:flight/libraries/printf/printf.c ****       putchar_via_gadget(output, ' ');
 1577              		.loc 1 436 45 is_stmt 0 view .LVU357
 1578 0022 0AF1010A 		add	r10, r10, #1
 1579              	.LVL158:
 1580              	.L88:
 436:flight/libraries/printf/printf.c ****       putchar_via_gadget(output, ' ');
 1581              		.loc 1 436 33 is_stmt 1 discriminator 1 view .LVU358
 436:flight/libraries/printf/printf.c ****       putchar_via_gadget(output, ' ');
 1582              		.loc 1 436 5 is_stmt 0 discriminator 1 view .LVU359
 1583 0026 B245     		cmp	r10, r6
 1584 0028 0ED2     		bcs	.L89
 437:flight/libraries/printf/printf.c ****     }
 1585              		.loc 1 437 7 is_stmt 1 view .LVU360
 1586              	.LVL159:
 1587              	.LBB79:
 1588              	.LBI76:
 321:flight/libraries/printf/printf.c **** {
 1589              		.loc 1 321 20 view .LVU361
 1590              	.LBB78:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 1591              		.loc 1 323 3 view .LVU362
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 1592              		.loc 1 323 35 is_stmt 0 view .LVU363
 1593 002a E368     		ldr	r3, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 1594              		.loc 1 323 40 view .LVU364
 1595 002c 5A1C     		adds	r2, r3, #1
 1596 002e E260     		str	r2, [r4, #12]
 1597              	.LVL160:
 326:flight/libraries/printf/printf.c ****     return;
 1598              		.loc 1 326 3 is_stmt 1 view .LVU365
 326:flight/libraries/printf/printf.c ****     return;
 1599              		.loc 1 326 26 is_stmt 0 view .LVU366
 1600 0030 2269     		ldr	r2, [r4, #16]
 326:flight/libraries/printf/printf.c ****     return;
 1601              		.loc 1 326 6 view .LVU367
 1602 0032 9342     		cmp	r3, r2
 1603 0034 F5D2     		bcs	.L90
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 1604              		.loc 1 329 3 is_stmt 1 view .LVU368
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 1605              		.loc 1 329 13 is_stmt 0 view .LVU369
 1606 0036 2268     		ldr	r2, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 1607              		.loc 1 329 6 view .LVU370
 1608 0038 002A     		cmp	r2, #0
 1609 003a EFD1     		bne	.L104
 336:flight/libraries/printf/printf.c ****   }
 1610              		.loc 1 336 5 is_stmt 1 view .LVU371
 336:flight/libraries/printf/printf.c ****   }
 1611              		.loc 1 336 11 is_stmt 0 view .LVU372
 1612 003c A268     		ldr	r2, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 1613              		.loc 1 336 31 view .LVU373
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 49


 1614 003e 2021     		movs	r1, #32
 1615 0040 D154     		strb	r1, [r2, r3]
 1616 0042 EEE7     		b	.L90
 1617              	.LVL161:
 1618              	.L95:
 336:flight/libraries/printf/printf.c ****   }
 1619              		.loc 1 336 31 view .LVU374
 1620              	.LBE78:
 1621              	.LBE79:
 1622              	.LBE75:
 1623              	.LBB80:
 1624              	.LBB81:
 336:flight/libraries/printf/printf.c ****   }
 1625              		.loc 1 336 5 is_stmt 1 view .LVU375
 336:flight/libraries/printf/printf.c ****   }
 1626              		.loc 1 336 11 is_stmt 0 view .LVU376
 1627 0044 A368     		ldr	r3, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 1628              		.loc 1 336 31 view .LVU377
 1629 0046 9854     		strb	r0, [r3, r2]
 1630              	.LVL162:
 1631              	.L89:
 336:flight/libraries/printf/printf.c ****   }
 1632              		.loc 1 336 31 view .LVU378
 1633              	.LBE81:
 1634              	.LBE80:
 442:flight/libraries/printf/printf.c ****     putchar_via_gadget(output, buf[--len]);
 1635              		.loc 1 442 9 is_stmt 1 view .LVU379
 1636 0048 75B1     		cbz	r5, .L105
 443:flight/libraries/printf/printf.c ****   }
 1637              		.loc 1 443 5 view .LVU380
 1638 004a 013D     		subs	r5, r5, #1
 1639              	.LVL163:
 443:flight/libraries/printf/printf.c ****   }
 1640              		.loc 1 443 5 is_stmt 0 view .LVU381
 1641 004c 18F80500 		ldrb	r0, [r8, r5]	@ zero_extendqisi2
 1642              	.LVL164:
 1643              	.LBB83:
 1644              	.LBI80:
 321:flight/libraries/printf/printf.c **** {
 1645              		.loc 1 321 20 is_stmt 1 view .LVU382
 1646              	.LBB82:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 1647              		.loc 1 323 3 view .LVU383
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 1648              		.loc 1 323 35 is_stmt 0 view .LVU384
 1649 0050 E268     		ldr	r2, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 1650              		.loc 1 323 40 view .LVU385
 1651 0052 531C     		adds	r3, r2, #1
 1652 0054 E360     		str	r3, [r4, #12]
 1653              	.LVL165:
 326:flight/libraries/printf/printf.c ****     return;
 1654              		.loc 1 326 3 is_stmt 1 view .LVU386
 326:flight/libraries/printf/printf.c ****     return;
 1655              		.loc 1 326 6 is_stmt 0 view .LVU387
 1656 0056 2369     		ldr	r3, [r4, #16]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 50


 1657 0058 9A42     		cmp	r2, r3
 1658 005a F5D2     		bcs	.L89
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 1659              		.loc 1 329 3 is_stmt 1 view .LVU388
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 1660              		.loc 1 329 13 is_stmt 0 view .LVU389
 1661 005c 2368     		ldr	r3, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 1662              		.loc 1 329 6 view .LVU390
 1663 005e 002B     		cmp	r3, #0
 1664 0060 F0D0     		beq	.L95
 331:flight/libraries/printf/printf.c ****   }
 1665              		.loc 1 331 5 is_stmt 1 view .LVU391
 1666 0062 6168     		ldr	r1, [r4, #4]
 1667 0064 9847     		blx	r3
 1668              	.LVL166:
 331:flight/libraries/printf/printf.c ****   }
 1669              		.loc 1 331 5 is_stmt 0 view .LVU392
 1670 0066 EFE7     		b	.L89
 1671              	.LVL167:
 1672              	.L105:
 331:flight/libraries/printf/printf.c ****   }
 1673              		.loc 1 331 5 view .LVU393
 1674              	.LBE82:
 1675              	.LBE83:
 447:flight/libraries/printf/printf.c ****     while (output->pos - start_pos < width) {
 1676              		.loc 1 447 3 is_stmt 1 view .LVU394
 447:flight/libraries/printf/printf.c ****     while (output->pos - start_pos < width) {
 1677              		.loc 1 447 6 is_stmt 0 view .LVU395
 1678 0068 19F0020F 		tst	r9, #2
 1679 006c 04D1     		bne	.L97
 1680              	.L87:
 452:flight/libraries/printf/printf.c **** 
 1681              		.loc 1 452 1 view .LVU396
 1682 006e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1683              	.LVL168:
 1684              	.L106:
 1685              	.LBB84:
 1686              	.LBB85:
 331:flight/libraries/printf/printf.c ****   }
 1687              		.loc 1 331 5 is_stmt 1 view .LVU397
 1688 0072 6168     		ldr	r1, [r4, #4]
 1689 0074 2020     		movs	r0, #32
 1690 0076 9047     		blx	r2
 1691              	.LVL169:
 1692              	.L97:
 331:flight/libraries/printf/printf.c ****   }
 1693              		.loc 1 331 5 is_stmt 0 view .LVU398
 1694              	.LBE85:
 1695              	.LBE84:
 448:flight/libraries/printf/printf.c ****       putchar_via_gadget(output, ' ');
 1696              		.loc 1 448 11 is_stmt 1 view .LVU399
 448:flight/libraries/printf/printf.c ****       putchar_via_gadget(output, ' ');
 1697              		.loc 1 448 18 is_stmt 0 view .LVU400
 1698 0078 E268     		ldr	r2, [r4, #12]
 448:flight/libraries/printf/printf.c ****       putchar_via_gadget(output, ' ');
 1699              		.loc 1 448 24 view .LVU401
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 51


 1700 007a D21B     		subs	r2, r2, r7
 448:flight/libraries/printf/printf.c ****       putchar_via_gadget(output, ' ');
 1701              		.loc 1 448 11 view .LVU402
 1702 007c B242     		cmp	r2, r6
 1703 007e F6D2     		bcs	.L87
 449:flight/libraries/printf/printf.c ****     }
 1704              		.loc 1 449 7 is_stmt 1 view .LVU403
 1705              	.LVL170:
 1706              	.LBB87:
 1707              	.LBI84:
 321:flight/libraries/printf/printf.c **** {
 1708              		.loc 1 321 20 view .LVU404
 1709              	.LBB86:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 1710              		.loc 1 323 3 view .LVU405
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 1711              		.loc 1 323 35 is_stmt 0 view .LVU406
 1712 0080 E368     		ldr	r3, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 1713              		.loc 1 323 40 view .LVU407
 1714 0082 5A1C     		adds	r2, r3, #1
 1715 0084 E260     		str	r2, [r4, #12]
 1716              	.LVL171:
 326:flight/libraries/printf/printf.c ****     return;
 1717              		.loc 1 326 3 is_stmt 1 view .LVU408
 326:flight/libraries/printf/printf.c ****     return;
 1718              		.loc 1 326 26 is_stmt 0 view .LVU409
 1719 0086 2269     		ldr	r2, [r4, #16]
 326:flight/libraries/printf/printf.c ****     return;
 1720              		.loc 1 326 6 view .LVU410
 1721 0088 9342     		cmp	r3, r2
 1722 008a F5D2     		bcs	.L97
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 1723              		.loc 1 329 3 is_stmt 1 view .LVU411
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 1724              		.loc 1 329 13 is_stmt 0 view .LVU412
 1725 008c 2268     		ldr	r2, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 1726              		.loc 1 329 6 view .LVU413
 1727 008e 002A     		cmp	r2, #0
 1728 0090 EFD1     		bne	.L106
 336:flight/libraries/printf/printf.c ****   }
 1729              		.loc 1 336 5 is_stmt 1 view .LVU414
 336:flight/libraries/printf/printf.c ****   }
 1730              		.loc 1 336 11 is_stmt 0 view .LVU415
 1731 0092 A268     		ldr	r2, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 1732              		.loc 1 336 31 view .LVU416
 1733 0094 2021     		movs	r1, #32
 1734 0096 D154     		strb	r1, [r2, r3]
 1735 0098 EEE7     		b	.L97
 1736              	.LBE86:
 1737              	.LBE87:
 1738              		.cfi_endproc
 1739              	.LFE13:
 1741              		.section	.text.print_integer_finalization,"ax",%progbits
 1742              		.align	1
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 52


 1743              		.syntax unified
 1744              		.thumb
 1745              		.thumb_func
 1747              	print_integer_finalization:
 1748              	.LVL172:
 1749              	.LFB14:
 458:flight/libraries/printf/printf.c ****   printf_size_t unpadded_len = len;
 1750              		.loc 1 458 1 is_stmt 1 view -0
 1751              		.cfi_startproc
 1752              		@ args = 16, pretend = 0, frame = 0
 1753              		@ frame_needed = 0, uses_anonymous_args = 0
 458:flight/libraries/printf/printf.c ****   printf_size_t unpadded_len = len;
 1754              		.loc 1 458 1 is_stmt 0 view .LVU418
 1755 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1756              	.LCFI31:
 1757              		.cfi_def_cfa_offset 20
 1758              		.cfi_offset 4, -20
 1759              		.cfi_offset 5, -16
 1760              		.cfi_offset 6, -12
 1761              		.cfi_offset 7, -8
 1762              		.cfi_offset 14, -4
 1763 0002 83B0     		sub	sp, sp, #12
 1764              	.LCFI32:
 1765              		.cfi_def_cfa_offset 32
 1766 0004 9646     		mov	lr, r2
 1767 0006 1F46     		mov	r7, r3
 1768 0008 9DF82060 		ldrb	r6, [sp, #32]	@ zero_extendqisi2
 1769 000c 099D     		ldr	r5, [sp, #36]
 1770 000e 0A9B     		ldr	r3, [sp, #40]
 1771              	.LVL173:
 458:flight/libraries/printf/printf.c ****   printf_size_t unpadded_len = len;
 1772              		.loc 1 458 1 view .LVU419
 1773 0010 0B9C     		ldr	r4, [sp, #44]
 459:flight/libraries/printf/printf.c **** 
 1774              		.loc 1 459 3 is_stmt 1 view .LVU420
 1775              	.LVL174:
 463:flight/libraries/printf/printf.c ****       if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 1776              		.loc 1 463 5 view .LVU421
 463:flight/libraries/printf/printf.c ****       if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 1777              		.loc 1 463 8 is_stmt 0 view .LVU422
 1778 0012 14F0020F 		tst	r4, #2
 1779 0016 1CD1     		bne	.L113
 464:flight/libraries/printf/printf.c ****         width--;
 1780              		.loc 1 464 7 is_stmt 1 view .LVU423
 464:flight/libraries/printf/printf.c ****         width--;
 1781              		.loc 1 464 10 is_stmt 0 view .LVU424
 1782 0018 3BB1     		cbz	r3, .L109
 464:flight/libraries/printf/printf.c ****         width--;
 1783              		.loc 1 464 17 discriminator 1 view .LVU425
 1784 001a 14F0010F 		tst	r4, #1
 1785 001e 04D0     		beq	.L109
 464:flight/libraries/printf/printf.c ****         width--;
 1786              		.loc 1 464 44 discriminator 2 view .LVU426
 1787 0020 17B9     		cbnz	r7, .L110
 464:flight/libraries/printf/printf.c ****         width--;
 1788              		.loc 1 464 57 discriminator 3 view .LVU427
 1789 0022 14F00C0F 		tst	r4, #12
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 53


 1790 0026 00D0     		beq	.L109
 1791              	.L110:
 465:flight/libraries/printf/printf.c ****       }
 1792              		.loc 1 465 9 is_stmt 1 view .LVU428
 465:flight/libraries/printf/printf.c ****       }
 1793              		.loc 1 465 14 is_stmt 0 view .LVU429
 1794 0028 013B     		subs	r3, r3, #1
 1795              	.LVL175:
 1796              	.L109:
 458:flight/libraries/printf/printf.c ****   printf_size_t unpadded_len = len;
 1797              		.loc 1 458 1 view .LVU430
 1798 002a 7246     		mov	r2, lr
 1799              	.LVL176:
 458:flight/libraries/printf/printf.c ****   printf_size_t unpadded_len = len;
 1800              		.loc 1 458 1 view .LVU431
 1801 002c 04E0     		b	.L111
 1802              	.LVL177:
 1803              	.L112:
 468:flight/libraries/printf/printf.c ****       }
 1804              		.loc 1 468 9 is_stmt 1 view .LVU432
 468:flight/libraries/printf/printf.c ****       }
 1805              		.loc 1 468 20 is_stmt 0 view .LVU433
 1806 002e 4FF0300C 		mov	ip, #48
 1807 0032 01F802C0 		strb	ip, [r1, r2]
 468:flight/libraries/printf/printf.c ****       }
 1808              		.loc 1 468 16 view .LVU434
 1809 0036 0132     		adds	r2, r2, #1
 1810              	.LVL178:
 1811              	.L111:
 467:flight/libraries/printf/printf.c ****         buf[len++] = '0';
 1812              		.loc 1 467 13 is_stmt 1 view .LVU435
 1813 0038 14F0010F 		tst	r4, #1
 1814 003c 09D0     		beq	.L113
 467:flight/libraries/printf/printf.c ****         buf[len++] = '0';
 1815              		.loc 1 467 38 is_stmt 0 discriminator 1 view .LVU436
 1816 003e 9A42     		cmp	r2, r3
 1817 0040 07D2     		bcs	.L113
 467:flight/libraries/printf/printf.c ****         buf[len++] = '0';
 1818              		.loc 1 467 55 discriminator 2 view .LVU437
 1819 0042 1F2A     		cmp	r2, #31
 1820 0044 F3D9     		bls	.L112
 1821 0046 04E0     		b	.L113
 1822              	.L115:
 473:flight/libraries/printf/printf.c ****     }
 1823              		.loc 1 473 7 is_stmt 1 view .LVU438
 1824              	.LVL179:
 473:flight/libraries/printf/printf.c ****     }
 1825              		.loc 1 473 18 is_stmt 0 view .LVU439
 1826 0048 4FF0300C 		mov	ip, #48
 1827 004c 01F802C0 		strb	ip, [r1, r2]
 473:flight/libraries/printf/printf.c ****     }
 1828              		.loc 1 473 14 view .LVU440
 1829 0050 0132     		adds	r2, r2, #1
 1830              	.LVL180:
 1831              	.L113:
 472:flight/libraries/printf/printf.c ****       buf[len++] = '0';
 1832              		.loc 1 472 11 is_stmt 1 view .LVU441
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 54


 1833 0052 AA42     		cmp	r2, r5
 1834 0054 01D2     		bcs	.L114
 472:flight/libraries/printf/printf.c ****       buf[len++] = '0';
 1835              		.loc 1 472 30 is_stmt 0 discriminator 1 view .LVU442
 1836 0056 1F2A     		cmp	r2, #31
 1837 0058 F6D9     		bls	.L115
 1838              	.L114:
 476:flight/libraries/printf/printf.c ****       // Since we've written some zeros, we've satisfied the alternative format leading space requi
 1839              		.loc 1 476 5 is_stmt 1 view .LVU443
 476:flight/libraries/printf/printf.c ****       // Since we've written some zeros, we've satisfied the alternative format leading space requi
 1840              		.loc 1 476 8 is_stmt 0 view .LVU444
 1841 005a 082E     		cmp	r6, #8
 1842 005c 22D0     		beq	.L130
 1843              	.LVL181:
 1844              	.L116:
 483:flight/libraries/printf/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == precision) || (len == width))) {
 1845              		.loc 1 483 3 is_stmt 1 view .LVU445
 483:flight/libraries/printf/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == precision) || (len == width))) {
 1846              		.loc 1 483 6 is_stmt 0 view .LVU446
 1847 005e 42F2100C 		movw	ip, #8208
 1848 0062 14EA0C0F 		tst	r4, ip
 1849 0066 12D0     		beq	.L117
 484:flight/libraries/printf/printf.c ****       // Let's take back some padding digits to fit in what will eventually
 1850              		.loc 1 484 5 is_stmt 1 view .LVU447
 484:flight/libraries/printf/printf.c ****       // Let's take back some padding digits to fit in what will eventually
 1851              		.loc 1 484 8 is_stmt 0 view .LVU448
 1852 0068 14F4006F 		tst	r4, #2048
 1853 006c 04D1     		bne	.L118
 484:flight/libraries/printf/printf.c ****       // Let's take back some padding digits to fit in what will eventually
 1854              		.loc 1 484 36 discriminator 1 view .LVU449
 1855 006e 1AB1     		cbz	r2, .L118
 484:flight/libraries/printf/printf.c ****       // Let's take back some padding digits to fit in what will eventually
 1856              		.loc 1 484 43 discriminator 2 view .LVU450
 1857 0070 AA42     		cmp	r2, r5
 1858 0072 1CD0     		beq	.L119
 484:flight/libraries/printf/printf.c ****       // Let's take back some padding digits to fit in what will eventually
 1859              		.loc 1 484 66 discriminator 3 view .LVU451
 1860 0074 9A42     		cmp	r2, r3
 1861 0076 1AD0     		beq	.L119
 1862              	.L118:
 494:flight/libraries/printf/printf.c ****       buf[len++] = 'x';
 1863              		.loc 1 494 5 is_stmt 1 view .LVU452
 494:flight/libraries/printf/printf.c ****       buf[len++] = 'x';
 1864              		.loc 1 494 8 is_stmt 0 view .LVU453
 1865 0078 102E     		cmp	r6, #16
 1866 007a 25D0     		beq	.L131
 1867              	.L122:
 497:flight/libraries/printf/printf.c ****       buf[len++] = 'X';
 1868              		.loc 1 497 10 is_stmt 1 view .LVU454
 497:flight/libraries/printf/printf.c ****       buf[len++] = 'X';
 1869              		.loc 1 497 13 is_stmt 0 view .LVU455
 1870 007c 102E     		cmp	r6, #16
 1871 007e 2CD0     		beq	.L132
 1872              	.L124:
 500:flight/libraries/printf/printf.c ****       buf[len++] = 'b';
 1873              		.loc 1 500 10 is_stmt 1 view .LVU456
 500:flight/libraries/printf/printf.c ****       buf[len++] = 'b';
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 55


 1874              		.loc 1 500 13 is_stmt 0 view .LVU457
 1875 0080 022E     		cmp	r6, #2
 1876 0082 33D0     		beq	.L133
 1877              	.L123:
 503:flight/libraries/printf/printf.c ****       buf[len++] = '0';
 1878              		.loc 1 503 5 is_stmt 1 view .LVU458
 503:flight/libraries/printf/printf.c ****       buf[len++] = '0';
 1879              		.loc 1 503 8 is_stmt 0 view .LVU459
 1880 0084 1F2A     		cmp	r2, #31
 1881 0086 02D8     		bhi	.L117
 504:flight/libraries/printf/printf.c ****     }
 1882              		.loc 1 504 7 is_stmt 1 view .LVU460
 1883              	.LVL182:
 504:flight/libraries/printf/printf.c ****     }
 1884              		.loc 1 504 18 is_stmt 0 view .LVU461
 1885 0088 3025     		movs	r5, #48
 1886 008a 8D54     		strb	r5, [r1, r2]
 504:flight/libraries/printf/printf.c ****     }
 1887              		.loc 1 504 14 view .LVU462
 1888 008c 0132     		adds	r2, r2, #1
 1889              	.LVL183:
 1890              	.L117:
 508:flight/libraries/printf/printf.c ****     if (negative) {
 1891              		.loc 1 508 3 is_stmt 1 view .LVU463
 508:flight/libraries/printf/printf.c ****     if (negative) {
 1892              		.loc 1 508 6 is_stmt 0 view .LVU464
 1893 008e 1F2A     		cmp	r2, #31
 1894 0090 03D8     		bhi	.L125
 509:flight/libraries/printf/printf.c ****       buf[len++] = '-';
 1895              		.loc 1 509 5 is_stmt 1 view .LVU465
 509:flight/libraries/printf/printf.c ****       buf[len++] = '-';
 1896              		.loc 1 509 8 is_stmt 0 view .LVU466
 1897 0092 8FB3     		cbz	r7, .L126
 510:flight/libraries/printf/printf.c ****     }
 1898              		.loc 1 510 7 is_stmt 1 view .LVU467
 1899              	.LVL184:
 510:flight/libraries/printf/printf.c ****     }
 1900              		.loc 1 510 18 is_stmt 0 view .LVU468
 1901 0094 2D25     		movs	r5, #45
 1902 0096 8D54     		strb	r5, [r1, r2]
 510:flight/libraries/printf/printf.c ****     }
 1903              		.loc 1 510 14 view .LVU469
 1904 0098 0132     		adds	r2, r2, #1
 1905              	.LVL185:
 1906              	.L125:
 520:flight/libraries/printf/printf.c **** }
 1907              		.loc 1 520 3 is_stmt 1 view .LVU470
 1908 009a 0094     		str	r4, [sp]
 1909 009c FFF7FEFF 		bl	out_rev_
 1910              	.LVL186:
 521:flight/libraries/printf/printf.c **** 
 1911              		.loc 1 521 1 is_stmt 0 view .LVU471
 1912 00a0 03B0     		add	sp, sp, #12
 1913              	.LCFI33:
 1914              		.cfi_remember_state
 1915              		.cfi_def_cfa_offset 20
 1916              		@ sp needed
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 56


 1917 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1918              	.LVL187:
 1919              	.L130:
 1920              	.LCFI34:
 1921              		.cfi_restore_state
 476:flight/libraries/printf/printf.c ****       // Since we've written some zeros, we've satisfied the alternative format leading space requi
 1922              		.loc 1 476 28 discriminator 1 view .LVU472
 1923 00a4 7245     		cmp	r2, lr
 1924 00a6 DAD9     		bls	.L116
 478:flight/libraries/printf/printf.c ****     }
 1925              		.loc 1 478 7 is_stmt 1 view .LVU473
 478:flight/libraries/printf/printf.c ****     }
 1926              		.loc 1 478 13 is_stmt 0 view .LVU474
 1927 00a8 24F01004 		bic	r4, r4, #16
 1928              	.LVL188:
 478:flight/libraries/printf/printf.c ****     }
 1929              		.loc 1 478 13 view .LVU475
 1930 00ac D7E7     		b	.L116
 1931              	.L119:
 487:flight/libraries/printf/printf.c ****         len--; // This should suffice for BASE_OCTAL
 1932              		.loc 1 487 7 is_stmt 1 view .LVU476
 487:flight/libraries/printf/printf.c ****         len--; // This should suffice for BASE_OCTAL
 1933              		.loc 1 487 10 is_stmt 0 view .LVU477
 1934 00ae 7245     		cmp	r2, lr
 1935 00b0 00D9     		bls	.L120
 488:flight/libraries/printf/printf.c ****       }
 1936              		.loc 1 488 9 is_stmt 1 view .LVU478
 488:flight/libraries/printf/printf.c ****       }
 1937              		.loc 1 488 12 is_stmt 0 view .LVU479
 1938 00b2 013A     		subs	r2, r2, #1
 1939              	.LVL189:
 1940              	.L120:
 490:flight/libraries/printf/printf.c ****         len--; // ... and an extra one for 0x or 0b
 1941              		.loc 1 490 7 is_stmt 1 view .LVU480
 490:flight/libraries/printf/printf.c ****         len--; // ... and an extra one for 0x or 0b
 1942              		.loc 1 490 10 is_stmt 0 view .LVU481
 1943 00b4 002A     		cmp	r2, #0
 1944 00b6 DFD0     		beq	.L118
 490:flight/libraries/printf/printf.c ****         len--; // ... and an extra one for 0x or 0b
 1945              		.loc 1 490 15 discriminator 1 view .LVU482
 1946 00b8 102E     		cmp	r6, #16
 1947 00ba 01D0     		beq	.L121
 490:flight/libraries/printf/printf.c ****         len--; // ... and an extra one for 0x or 0b
 1948              		.loc 1 490 36 discriminator 3 view .LVU483
 1949 00bc 022E     		cmp	r6, #2
 1950 00be DBD1     		bne	.L118
 1951              	.L121:
 490:flight/libraries/printf/printf.c ****         len--; // ... and an extra one for 0x or 0b
 1952              		.loc 1 490 60 discriminator 4 view .LVU484
 1953 00c0 7245     		cmp	r2, lr
 1954 00c2 D9D9     		bls	.L118
 491:flight/libraries/printf/printf.c ****       }
 1955              		.loc 1 491 9 is_stmt 1 view .LVU485
 491:flight/libraries/printf/printf.c ****       }
 1956              		.loc 1 491 12 is_stmt 0 view .LVU486
 1957 00c4 013A     		subs	r2, r2, #1
 1958              	.LVL190:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 57


 491:flight/libraries/printf/printf.c ****       }
 1959              		.loc 1 491 12 view .LVU487
 1960 00c6 D7E7     		b	.L118
 1961              	.L131:
 494:flight/libraries/printf/printf.c ****       buf[len++] = 'x';
 1962              		.loc 1 494 28 discriminator 1 view .LVU488
 1963 00c8 14F0200F 		tst	r4, #32
 1964 00cc D6D1     		bne	.L122
 494:flight/libraries/printf/printf.c ****       buf[len++] = 'x';
 1965              		.loc 1 494 58 discriminator 2 view .LVU489
 1966 00ce 1F2A     		cmp	r2, #31
 1967 00d0 D4D8     		bhi	.L122
 495:flight/libraries/printf/printf.c ****     }
 1968              		.loc 1 495 7 is_stmt 1 view .LVU490
 1969              	.LVL191:
 495:flight/libraries/printf/printf.c ****     }
 1970              		.loc 1 495 18 is_stmt 0 view .LVU491
 1971 00d2 7825     		movs	r5, #120
 1972 00d4 8D54     		strb	r5, [r1, r2]
 495:flight/libraries/printf/printf.c ****     }
 1973              		.loc 1 495 14 view .LVU492
 1974 00d6 0132     		adds	r2, r2, #1
 1975              	.LVL192:
 495:flight/libraries/printf/printf.c ****     }
 1976              		.loc 1 495 18 view .LVU493
 1977 00d8 D4E7     		b	.L123
 1978              	.L132:
 497:flight/libraries/printf/printf.c ****       buf[len++] = 'X';
 1979              		.loc 1 497 33 discriminator 1 view .LVU494
 1980 00da 14F0200F 		tst	r4, #32
 1981 00de CFD0     		beq	.L124
 497:flight/libraries/printf/printf.c ****       buf[len++] = 'X';
 1982              		.loc 1 497 62 discriminator 2 view .LVU495
 1983 00e0 1F2A     		cmp	r2, #31
 1984 00e2 CDD8     		bhi	.L124
 498:flight/libraries/printf/printf.c ****     }
 1985              		.loc 1 498 7 is_stmt 1 view .LVU496
 1986              	.LVL193:
 498:flight/libraries/printf/printf.c ****     }
 1987              		.loc 1 498 18 is_stmt 0 view .LVU497
 1988 00e4 5825     		movs	r5, #88
 1989 00e6 8D54     		strb	r5, [r1, r2]
 498:flight/libraries/printf/printf.c ****     }
 1990              		.loc 1 498 14 view .LVU498
 1991 00e8 0132     		adds	r2, r2, #1
 1992              	.LVL194:
 498:flight/libraries/printf/printf.c ****     }
 1993              		.loc 1 498 18 view .LVU499
 1994 00ea CBE7     		b	.L123
 1995              	.L133:
 500:flight/libraries/printf/printf.c ****       buf[len++] = 'b';
 1996              		.loc 1 500 36 discriminator 1 view .LVU500
 1997 00ec 1F2A     		cmp	r2, #31
 1998 00ee C9D8     		bhi	.L123
 501:flight/libraries/printf/printf.c ****     }
 1999              		.loc 1 501 7 is_stmt 1 view .LVU501
 2000              	.LVL195:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 58


 501:flight/libraries/printf/printf.c ****     }
 2001              		.loc 1 501 18 is_stmt 0 view .LVU502
 2002 00f0 6225     		movs	r5, #98
 2003 00f2 8D54     		strb	r5, [r1, r2]
 501:flight/libraries/printf/printf.c ****     }
 2004              		.loc 1 501 14 view .LVU503
 2005 00f4 0132     		adds	r2, r2, #1
 2006              	.LVL196:
 501:flight/libraries/printf/printf.c ****     }
 2007              		.loc 1 501 14 view .LVU504
 2008 00f6 C5E7     		b	.L123
 2009              	.L126:
 512:flight/libraries/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2010              		.loc 1 512 10 is_stmt 1 view .LVU505
 512:flight/libraries/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2011              		.loc 1 512 13 is_stmt 0 view .LVU506
 2012 00f8 14F0040F 		tst	r4, #4
 2013 00fc 03D0     		beq	.L127
 513:flight/libraries/printf/printf.c ****     }
 2014              		.loc 1 513 7 is_stmt 1 view .LVU507
 2015              	.LVL197:
 513:flight/libraries/printf/printf.c ****     }
 2016              		.loc 1 513 18 is_stmt 0 view .LVU508
 2017 00fe 2B25     		movs	r5, #43
 2018 0100 8D54     		strb	r5, [r1, r2]
 513:flight/libraries/printf/printf.c ****     }
 2019              		.loc 1 513 14 view .LVU509
 2020 0102 0132     		adds	r2, r2, #1
 2021              	.LVL198:
 513:flight/libraries/printf/printf.c ****     }
 2022              		.loc 1 513 14 view .LVU510
 2023 0104 C9E7     		b	.L125
 2024              	.L127:
 515:flight/libraries/printf/printf.c ****       buf[len++] = ' ';
 2025              		.loc 1 515 10 is_stmt 1 view .LVU511
 515:flight/libraries/printf/printf.c ****       buf[len++] = ' ';
 2026              		.loc 1 515 13 is_stmt 0 view .LVU512
 2027 0106 14F0080F 		tst	r4, #8
 2028 010a C6D0     		beq	.L125
 516:flight/libraries/printf/printf.c ****     }
 2029              		.loc 1 516 7 is_stmt 1 view .LVU513
 2030              	.LVL199:
 516:flight/libraries/printf/printf.c ****     }
 2031              		.loc 1 516 18 is_stmt 0 view .LVU514
 2032 010c 2025     		movs	r5, #32
 2033 010e 8D54     		strb	r5, [r1, r2]
 516:flight/libraries/printf/printf.c ****     }
 2034              		.loc 1 516 14 view .LVU515
 2035 0110 0132     		adds	r2, r2, #1
 2036              	.LVL200:
 516:flight/libraries/printf/printf.c ****     }
 2037              		.loc 1 516 14 view .LVU516
 2038 0112 C2E7     		b	.L125
 2039              		.cfi_endproc
 2040              	.LFE14:
 2042              		.global	__aeabi_uldivmod
 2043              		.section	.text.print_integer,"ax",%progbits
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 59


 2044              		.align	1
 2045              		.syntax unified
 2046              		.thumb
 2047              		.thumb_func
 2049              	print_integer:
 2050              	.LVL201:
 2051              	.LFB15:
 525:flight/libraries/printf/printf.c ****   char buf[PRINTF_INTEGER_BUFFER_SIZE];
 2052              		.loc 1 525 1 is_stmt 1 view -0
 2053              		.cfi_startproc
 2054              		@ args = 20, pretend = 0, frame = 32
 2055              		@ frame_needed = 0, uses_anonymous_args = 0
 525:flight/libraries/printf/printf.c ****   char buf[PRINTF_INTEGER_BUFFER_SIZE];
 2056              		.loc 1 525 1 is_stmt 0 view .LVU518
 2057 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2058              	.LCFI35:
 2059              		.cfi_def_cfa_offset 36
 2060              		.cfi_offset 4, -36
 2061              		.cfi_offset 5, -32
 2062              		.cfi_offset 6, -28
 2063              		.cfi_offset 7, -24
 2064              		.cfi_offset 8, -20
 2065              		.cfi_offset 9, -16
 2066              		.cfi_offset 10, -12
 2067              		.cfi_offset 11, -8
 2068              		.cfi_offset 14, -4
 2069 0004 8DB0     		sub	sp, sp, #52
 2070              	.LCFI36:
 2071              		.cfi_def_cfa_offset 88
 2072 0006 8346     		mov	fp, r0
 2073 0008 1E46     		mov	r6, r3
 2074 000a 9DF85C70 		ldrb	r7, [sp, #92]	@ zero_extendqisi2
 2075 000e DDF868A0 		ldr	r10, [sp, #104]
 526:flight/libraries/printf/printf.c ****   printf_size_t len = 0U;
 2076              		.loc 1 526 3 is_stmt 1 view .LVU519
 527:flight/libraries/printf/printf.c **** 
 2077              		.loc 1 527 3 view .LVU520
 2078              	.LVL202:
 529:flight/libraries/printf/printf.c ****     if ( !(flags & FLAGS_PRECISION) ) {
 2079              		.loc 1 529 3 view .LVU521
 529:flight/libraries/printf/printf.c ****     if ( !(flags & FLAGS_PRECISION) ) {
 2080              		.loc 1 529 6 is_stmt 0 view .LVU522
 2081 0012 52EA0603 		orrs	r3, r2, r6
 2082 0016 24D1     		bne	.L141
 530:flight/libraries/printf/printf.c ****       buf[len++] = '0';
 2083              		.loc 1 530 5 is_stmt 1 view .LVU523
 530:flight/libraries/printf/printf.c ****       buf[len++] = '0';
 2084              		.loc 1 530 8 is_stmt 0 view .LVU524
 2085 0018 1AF4006F 		tst	r10, #2048
 2086 001c 17D1     		bne	.L136
 531:flight/libraries/printf/printf.c ****       flags &= ~FLAGS_HASH;
 2087              		.loc 1 531 7 is_stmt 1 view .LVU525
 2088              	.LVL203:
 531:flight/libraries/printf/printf.c ****       flags &= ~FLAGS_HASH;
 2089              		.loc 1 531 18 is_stmt 0 view .LVU526
 2090 001e 3023     		movs	r3, #48
 2091 0020 8DF81030 		strb	r3, [sp, #16]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 60


 532:flight/libraries/printf/printf.c ****       // We drop this flag this since either the alternative and regular modes of the specifier
 2092              		.loc 1 532 7 is_stmt 1 view .LVU527
 532:flight/libraries/printf/printf.c ****       // We drop this flag this since either the alternative and regular modes of the specifier
 2093              		.loc 1 532 13 is_stmt 0 view .LVU528
 2094 0024 2AF0100A 		bic	r10, r10, #16
 2095              	.LVL204:
 531:flight/libraries/printf/printf.c ****       flags &= ~FLAGS_HASH;
 2096              		.loc 1 531 14 view .LVU529
 2097 0028 4FF00108 		mov	r8, #1
 2098              	.LVL205:
 2099              	.L137:
 551:flight/libraries/printf/printf.c **** }
 2100              		.loc 1 551 3 is_stmt 1 view .LVU530
 2101 002c CDF80CA0 		str	r10, [sp, #12]
 2102 0030 199B     		ldr	r3, [sp, #100]
 2103 0032 0293     		str	r3, [sp, #8]
 2104 0034 189B     		ldr	r3, [sp, #96]
 2105 0036 0193     		str	r3, [sp, #4]
 2106 0038 0097     		str	r7, [sp]
 2107 003a 9DF85830 		ldrb	r3, [sp, #88]	@ zero_extendqisi2
 2108 003e 4246     		mov	r2, r8
 2109 0040 04A9     		add	r1, sp, #16
 2110 0042 5846     		mov	r0, fp
 2111 0044 FFF7FEFF 		bl	print_integer_finalization
 2112              	.LVL206:
 552:flight/libraries/printf/printf.c **** 
 2113              		.loc 1 552 1 is_stmt 0 view .LVU531
 2114 0048 0DB0     		add	sp, sp, #52
 2115              	.LCFI37:
 2116              		.cfi_remember_state
 2117              		.cfi_def_cfa_offset 36
 2118              		@ sp needed
 2119 004a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2120              	.LVL207:
 2121              	.L136:
 2122              	.LCFI38:
 2123              		.cfi_restore_state
 537:flight/libraries/printf/printf.c ****       flags &= ~FLAGS_HASH;
 2124              		.loc 1 537 10 is_stmt 1 view .LVU532
 537:flight/libraries/printf/printf.c ****       flags &= ~FLAGS_HASH;
 2125              		.loc 1 537 13 is_stmt 0 view .LVU533
 2126 004e 102F     		cmp	r7, #16
 2127 0050 02D0     		beq	.L146
 527:flight/libraries/printf/printf.c **** 
 2128              		.loc 1 527 17 view .LVU534
 2129 0052 4FF00008 		mov	r8, #0
 2130 0056 E9E7     		b	.L137
 2131              	.L146:
 538:flight/libraries/printf/printf.c ****       // We drop this flag this since either the alternative and regular modes of the specifier
 2132              		.loc 1 538 7 is_stmt 1 view .LVU535
 538:flight/libraries/printf/printf.c ****       // We drop this flag this since either the alternative and regular modes of the specifier
 2133              		.loc 1 538 13 is_stmt 0 view .LVU536
 2134 0058 2AF0100A 		bic	r10, r10, #16
 2135              	.LVL208:
 527:flight/libraries/printf/printf.c **** 
 2136              		.loc 1 527 17 view .LVU537
 2137 005c 4FF00008 		mov	r8, #0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 61


 2138 0060 E4E7     		b	.L137
 2139              	.LVL209:
 2140              	.L141:
 527:flight/libraries/printf/printf.c **** 
 2141              		.loc 1 527 17 view .LVU538
 2142 0062 1546     		mov	r5, r2
 2143 0064 0024     		movs	r4, #0
 2144 0066 1AE0     		b	.L135
 2145              	.LVL210:
 2146              	.L147:
 2147              	.LBB88:
 546:flight/libraries/printf/printf.c ****       value /= base;
 2148              		.loc 1 546 20 discriminator 1 view .LVU539
 2149 0068 03F13002 		add	r2, r3, #48
 2150 006c D2B2     		uxtb	r2, r2
 2151              	.L139:
 546:flight/libraries/printf/printf.c ****       value /= base;
 2152              		.loc 1 546 14 discriminator 8 view .LVU540
 2153 006e 04F10108 		add	r8, r4, #1
 2154              	.LVL211:
 546:flight/libraries/printf/printf.c ****       value /= base;
 2155              		.loc 1 546 18 discriminator 8 view .LVU541
 2156 0072 04F13003 		add	r3, r4, #48
 2157              	.LVL212:
 546:flight/libraries/printf/printf.c ****       value /= base;
 2158              		.loc 1 546 18 discriminator 8 view .LVU542
 2159 0076 0DEB0304 		add	r4, sp, r3
 2160 007a 04F8202C 		strb	r2, [r4, #-32]
 547:flight/libraries/printf/printf.c ****     } while (value && (len < PRINTF_INTEGER_BUFFER_SIZE));
 2161              		.loc 1 547 7 is_stmt 1 discriminator 8 view .LVU543
 547:flight/libraries/printf/printf.c ****     } while (value && (len < PRINTF_INTEGER_BUFFER_SIZE));
 2162              		.loc 1 547 13 is_stmt 0 discriminator 8 view .LVU544
 2163 007e 3A46     		mov	r2, r7
 2164 0080 4B46     		mov	r3, r9
 2165 0082 2846     		mov	r0, r5
 2166 0084 3146     		mov	r1, r6
 2167 0086 FFF7FEFF 		bl	__aeabi_uldivmod
 2168              	.LVL213:
 547:flight/libraries/printf/printf.c ****     } while (value && (len < PRINTF_INTEGER_BUFFER_SIZE));
 2169              		.loc 1 547 13 discriminator 8 view .LVU545
 2170              	.LBE88:
 548:flight/libraries/printf/printf.c ****   }
 2171              		.loc 1 548 13 is_stmt 1 discriminator 8 view .LVU546
 548:flight/libraries/printf/printf.c ****   }
 2172              		.loc 1 548 5 is_stmt 0 discriminator 8 view .LVU547
 2173 008a BD42     		cmp	r5, r7
 2174 008c 76F10003 		sbcs	r3, r6, #0
 2175 0090 CCD3     		bcc	.L137
 548:flight/libraries/printf/printf.c ****   }
 2176              		.loc 1 548 20 discriminator 1 view .LVU548
 2177 0092 B8F11F0F 		cmp	r8, #31
 2178 0096 C9D8     		bhi	.L137
 2179              	.LBB89:
 546:flight/libraries/printf/printf.c ****       value /= base;
 2180              		.loc 1 546 14 view .LVU549
 2181 0098 4446     		mov	r4, r8
 547:flight/libraries/printf/printf.c ****     } while (value && (len < PRINTF_INTEGER_BUFFER_SIZE));
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 62


 2182              		.loc 1 547 13 view .LVU550
 2183 009a 0546     		mov	r5, r0
 2184 009c 0E46     		mov	r6, r1
 2185              	.LVL214:
 2186              	.L135:
 547:flight/libraries/printf/printf.c ****     } while (value && (len < PRINTF_INTEGER_BUFFER_SIZE));
 2187              		.loc 1 547 13 view .LVU551
 2188              	.LBE89:
 544:flight/libraries/printf/printf.c ****       const char digit = (char)(value % base);
 2189              		.loc 1 544 5 is_stmt 1 view .LVU552
 2190              	.LBB90:
 545:flight/libraries/printf/printf.c ****       buf[len++] = (char)(digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit 
 2191              		.loc 1 545 7 view .LVU553
 545:flight/libraries/printf/printf.c ****       buf[len++] = (char)(digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit 
 2192              		.loc 1 545 39 is_stmt 0 view .LVU554
 2193 009e 4FF00009 		mov	r9, #0
 2194 00a2 3A46     		mov	r2, r7
 2195 00a4 4B46     		mov	r3, r9
 2196 00a6 2846     		mov	r0, r5
 2197 00a8 3146     		mov	r1, r6
 2198 00aa FFF7FEFF 		bl	__aeabi_uldivmod
 2199              	.LVL215:
 545:flight/libraries/printf/printf.c ****       buf[len++] = (char)(digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit 
 2200              		.loc 1 545 18 view .LVU555
 2201 00ae D3B2     		uxtb	r3, r2
 2202              	.LVL216:
 546:flight/libraries/printf/printf.c ****       value /= base;
 2203              		.loc 1 546 7 is_stmt 1 view .LVU556
 546:flight/libraries/printf/printf.c ****       value /= base;
 2204              		.loc 1 546 20 is_stmt 0 view .LVU557
 2205 00b0 092B     		cmp	r3, #9
 2206 00b2 D9D9     		bls	.L147
 546:flight/libraries/printf/printf.c ****       value /= base;
 2207              		.loc 1 546 92 discriminator 2 view .LVU558
 2208 00b4 1AF0200F 		tst	r10, #32
 2209 00b8 05D0     		beq	.L143
 546:flight/libraries/printf/printf.c ****       value /= base;
 2210              		.loc 1 546 92 view .LVU559
 2211 00ba 4122     		movs	r2, #65
 2212              	.L140:
 546:flight/libraries/printf/printf.c ****       value /= base;
 2213              		.loc 1 546 92 discriminator 7 view .LVU560
 2214 00bc 1A44     		add	r2, r2, r3
 2215 00be D2B2     		uxtb	r2, r2
 546:flight/libraries/printf/printf.c ****       value /= base;
 2216              		.loc 1 546 20 discriminator 7 view .LVU561
 2217 00c0 0A3A     		subs	r2, r2, #10
 2218 00c2 D2B2     		uxtb	r2, r2
 2219 00c4 D3E7     		b	.L139
 2220              	.L143:
 546:flight/libraries/printf/printf.c ****       value /= base;
 2221              		.loc 1 546 92 view .LVU562
 2222 00c6 6122     		movs	r2, #97
 2223 00c8 F8E7     		b	.L140
 2224              	.LBE90:
 2225              		.cfi_endproc
 2226              	.LFE15:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 63


 2228              		.global	__aeabi_ldivmod
 2229              		.section	.text.print_broken_up_decimal,"ax",%progbits
 2230              		.align	1
 2231              		.syntax unified
 2232              		.thumb
 2233              		.thumb_func
 2235              	print_broken_up_decimal:
 2236              	.LVL217:
 2237              	.LFB21:
 698:flight/libraries/printf/printf.c ****   if (precision != 0U) {
 2238              		.loc 1 698 1 is_stmt 1 view -0
 2239              		.cfi_startproc
 2240              		@ args = 48, pretend = 16, frame = 0
 2241              		@ frame_needed = 0, uses_anonymous_args = 0
 698:flight/libraries/printf/printf.c ****   if (precision != 0U) {
 2242              		.loc 1 698 1 is_stmt 0 view .LVU564
 2243 0000 84B0     		sub	sp, sp, #16
 2244              	.LCFI39:
 2245              		.cfi_def_cfa_offset 16
 2246 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2247              	.LCFI40:
 2248              		.cfi_def_cfa_offset 52
 2249              		.cfi_offset 4, -52
 2250              		.cfi_offset 5, -48
 2251              		.cfi_offset 6, -44
 2252              		.cfi_offset 7, -40
 2253              		.cfi_offset 8, -36
 2254              		.cfi_offset 9, -32
 2255              		.cfi_offset 10, -28
 2256              		.cfi_offset 11, -24
 2257              		.cfi_offset 14, -20
 2258 0006 83B0     		sub	sp, sp, #12
 2259              	.LCFI41:
 2260              		.cfi_def_cfa_offset 64
 2261 0008 0CAC     		add	r4, sp, #48
 2262 000a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 2263 000e 139E     		ldr	r6, [sp, #76]
 2264 0010 149F     		ldr	r7, [sp, #80]
 2265 0012 169D     		ldr	r5, [sp, #88]
 2266 0014 179C     		ldr	r4, [sp, #92]
 699:flight/libraries/printf/printf.c ****     // do fractional part, as an unsigned number
 2267              		.loc 1 699 3 is_stmt 1 view .LVU565
 699:flight/libraries/printf/printf.c ****     // do fractional part, as an unsigned number
 2268              		.loc 1 699 6 is_stmt 0 view .LVU566
 2269 0016 002E     		cmp	r6, #0
 2270 0018 6FD0     		beq	.L149
 2271              	.LBB91:
 702:flight/libraries/printf/printf.c **** 
 2272              		.loc 1 702 5 is_stmt 1 view .LVU567
 2273              	.LVL218:
 705:flight/libraries/printf/printf.c ****       while(true) {
 2274              		.loc 1 705 5 view .LVU568
 705:flight/libraries/printf/printf.c ****       while(true) {
 2275              		.loc 1 705 35 is_stmt 0 view .LVU569
 2276 001a 159B     		ldr	r3, [sp, #84]
 2277 001c 41F21009 		movw	r9, #4112
 2278 0020 03EA0909 		and	r9, r3, r9
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 64


 705:flight/libraries/printf/printf.c ****       while(true) {
 2279              		.loc 1 705 8 view .LVU570
 2280 0024 B9F5805F 		cmp	r9, #4096
 2281 0028 21D0     		beq	.L174
 2282              	.L150:
 719:flight/libraries/printf/printf.c ****       while (len < PRINTF_DECIMAL_BUFFER_SIZE) {
 2283              		.loc 1 719 5 is_stmt 1 view .LVU571
 719:flight/libraries/printf/printf.c ****       while (len < PRINTF_DECIMAL_BUFFER_SIZE) {
 2284              		.loc 1 719 8 is_stmt 0 view .LVU572
 2285 002a 0E9B     		ldr	r3, [sp, #56]
 2286 002c 012B     		cmp	r3, #1
 2287 002e 0F9B     		ldr	r3, [sp, #60]
 2288 0030 73F10003 		sbcs	r3, r3, #0
 2289 0034 34DB     		blt	.L175
 2290              	.LVL219:
 2291              	.L155:
 720:flight/libraries/printf/printf.c ****         --count;
 2292              		.loc 1 720 13 is_stmt 1 view .LVU573
 2293 0036 1F2C     		cmp	r4, #31
 2294 0038 3AD8     		bhi	.L157
 721:flight/libraries/printf/printf.c ****         buf[len++] = (char)('0' + number_.fractional % 10U);
 2295              		.loc 1 721 9 view .LVU574
 2296 003a 013E     		subs	r6, r6, #1
 2297              	.LVL220:
 722:flight/libraries/printf/printf.c ****         if (!(number_.fractional /= 10U)) {
 2298              		.loc 1 722 9 view .LVU575
 722:flight/libraries/printf/printf.c ****         if (!(number_.fractional /= 10U)) {
 2299              		.loc 1 722 42 is_stmt 0 view .LVU576
 2300 003c DDE90E89 		ldrd	r8, [sp, #56]
 722:flight/libraries/printf/printf.c ****         if (!(number_.fractional /= 10U)) {
 2301              		.loc 1 722 54 view .LVU577
 2302 0040 0A22     		movs	r2, #10
 2303 0042 0023     		movs	r3, #0
 2304 0044 4046     		mov	r0, r8
 2305 0046 4946     		mov	r1, r9
 2306 0048 FFF7FEFF 		bl	__aeabi_ldivmod
 2307              	.LVL221:
 722:flight/libraries/printf/printf.c ****         if (!(number_.fractional /= 10U)) {
 2308              		.loc 1 722 16 view .LVU578
 2309 004c 04F1010A 		add	r10, r4, #1
 2310              	.LVL222:
 722:flight/libraries/printf/printf.c ****         if (!(number_.fractional /= 10U)) {
 2311              		.loc 1 722 22 view .LVU579
 2312 0050 3032     		adds	r2, r2, #48
 722:flight/libraries/printf/printf.c ****         if (!(number_.fractional /= 10U)) {
 2313              		.loc 1 722 20 view .LVU580
 2314 0052 2A55     		strb	r2, [r5, r4]
 723:flight/libraries/printf/printf.c ****           break;
 2315              		.loc 1 723 9 is_stmt 1 view .LVU581
 723:flight/libraries/printf/printf.c ****           break;
 2316              		.loc 1 723 34 is_stmt 0 view .LVU582
 2317 0054 0A22     		movs	r2, #10
 2318 0056 0023     		movs	r3, #0
 2319 0058 4046     		mov	r0, r8
 2320 005a 4946     		mov	r1, r9
 2321 005c FFF7FEFF 		bl	__aeabi_ldivmod
 2322              	.LVL223:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 65


 2323 0060 0E90     		str	r0, [sp, #56]
 2324 0062 0F91     		str	r1, [sp, #60]
 723:flight/libraries/printf/printf.c ****           break;
 2325              		.loc 1 723 12 view .LVU583
 2326 0064 51EA0003 		orrs	r3, r1, r0
 2327 0068 45D0     		beq	.L171
 722:flight/libraries/printf/printf.c ****         if (!(number_.fractional /= 10U)) {
 2328              		.loc 1 722 16 view .LVU584
 2329 006a 5446     		mov	r4, r10
 2330 006c E3E7     		b	.L155
 2331              	.LVL224:
 2332              	.L174:
 705:flight/libraries/printf/printf.c ****       while(true) {
 2333              		.loc 1 705 60 discriminator 1 view .LVU585
 2334 006e 012A     		cmp	r2, #1
 2335 0070 0F9B     		ldr	r3, [sp, #60]
 2336 0072 73F10003 		sbcs	r3, r3, #0
 2337 0076 D8DB     		blt	.L150
 2338              	.L151:
 706:flight/libraries/printf/printf.c ****         int_fast64_t digit = number_.fractional % 10U;
 2339              		.loc 1 706 7 is_stmt 1 view .LVU586
 2340              	.LBB92:
 707:flight/libraries/printf/printf.c ****         if (digit != 0) {
 2341              		.loc 1 707 9 view .LVU587
 707:flight/libraries/printf/printf.c ****         if (digit != 0) {
 2342              		.loc 1 707 37 is_stmt 0 view .LVU588
 2343 0078 DDE90EAB 		ldrd	r10, [sp, #56]
 707:flight/libraries/printf/printf.c ****         if (digit != 0) {
 2344              		.loc 1 707 22 view .LVU589
 2345 007c 0A22     		movs	r2, #10
 2346 007e 0023     		movs	r3, #0
 2347 0080 5046     		mov	r0, r10
 2348 0082 5946     		mov	r1, fp
 2349 0084 FFF7FEFF 		bl	__aeabi_ldivmod
 2350              	.LVL225:
 708:flight/libraries/printf/printf.c ****           break;
 2351              		.loc 1 708 9 is_stmt 1 view .LVU590
 708:flight/libraries/printf/printf.c ****           break;
 2352              		.loc 1 708 12 is_stmt 0 view .LVU591
 2353 0088 1343     		orrs	r3, r3, r2
 2354              	.LVL226:
 708:flight/libraries/printf/printf.c ****           break;
 2355              		.loc 1 708 12 view .LVU592
 2356 008a CED1     		bne	.L150
 711:flight/libraries/printf/printf.c ****         number_.fractional /= 10U;
 2357              		.loc 1 711 9 is_stmt 1 view .LVU593
 2358 008c 013E     		subs	r6, r6, #1
 2359              	.LVL227:
 712:flight/libraries/printf/printf.c **** 
 2360              		.loc 1 712 9 view .LVU594
 712:flight/libraries/printf/printf.c **** 
 2361              		.loc 1 712 28 is_stmt 0 view .LVU595
 2362 008e 0A22     		movs	r2, #10
 712:flight/libraries/printf/printf.c **** 
 2363              		.loc 1 712 28 view .LVU596
 2364 0090 0023     		movs	r3, #0
 2365 0092 5046     		mov	r0, r10
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 66


 2366 0094 5946     		mov	r1, fp
 2367 0096 FFF7FEFF 		bl	__aeabi_ldivmod
 2368              	.LVL228:
 2369 009a CDE90E01 		strd	r0, [sp, #56]
 2370              	.LBE92:
 706:flight/libraries/printf/printf.c ****         int_fast64_t digit = number_.fractional % 10U;
 2371              		.loc 1 706 12 is_stmt 1 view .LVU597
 706:flight/libraries/printf/printf.c ****         int_fast64_t digit = number_.fractional % 10U;
 2372              		.loc 1 706 19 is_stmt 0 view .LVU598
 2373 009e EBE7     		b	.L151
 2374              	.L175:
 719:flight/libraries/printf/printf.c ****       while (len < PRINTF_DECIMAL_BUFFER_SIZE) {
 2375              		.loc 1 719 62 discriminator 1 view .LVU599
 2376 00a0 B9F5805F 		cmp	r9, #4096
 2377 00a4 C7D1     		bne	.L155
 2378 00a6 0CE0     		b	.L161
 2379              	.LVL229:
 2380              	.L159:
 729:flight/libraries/printf/printf.c ****         --count;
 2381              		.loc 1 729 9 is_stmt 1 view .LVU600
 729:flight/libraries/printf/printf.c ****         --count;
 2382              		.loc 1 729 20 is_stmt 0 view .LVU601
 2383 00a8 3023     		movs	r3, #48
 2384 00aa 2B55     		strb	r3, [r5, r4]
 730:flight/libraries/printf/printf.c ****       }
 2385              		.loc 1 730 9 is_stmt 1 view .LVU602
 2386 00ac 013E     		subs	r6, r6, #1
 2387              	.LVL230:
 729:flight/libraries/printf/printf.c ****         --count;
 2388              		.loc 1 729 16 is_stmt 0 view .LVU603
 2389 00ae 0134     		adds	r4, r4, #1
 2390              	.LVL231:
 2391              	.L157:
 728:flight/libraries/printf/printf.c ****         buf[len++] = '0';
 2392              		.loc 1 728 13 is_stmt 1 view .LVU604
 2393 00b0 1F2C     		cmp	r4, #31
 2394 00b2 01D8     		bhi	.L158
 728:flight/libraries/printf/printf.c ****         buf[len++] = '0';
 2395              		.loc 1 728 49 is_stmt 0 discriminator 1 view .LVU605
 2396 00b4 002E     		cmp	r6, #0
 2397 00b6 F7D1     		bne	.L159
 2398              	.L158:
 732:flight/libraries/printf/printf.c ****         buf[len++] = '.';
 2399              		.loc 1 732 7 is_stmt 1 view .LVU606
 732:flight/libraries/printf/printf.c ****         buf[len++] = '.';
 2400              		.loc 1 732 10 is_stmt 0 view .LVU607
 2401 00b8 1F2C     		cmp	r4, #31
 2402 00ba 02D8     		bhi	.L161
 733:flight/libraries/printf/printf.c ****       }
 2403              		.loc 1 733 9 is_stmt 1 view .LVU608
 2404              	.LVL232:
 733:flight/libraries/printf/printf.c ****       }
 2405              		.loc 1 733 20 is_stmt 0 view .LVU609
 2406 00bc 2E23     		movs	r3, #46
 2407 00be 2B55     		strb	r3, [r5, r4]
 733:flight/libraries/printf/printf.c ****       }
 2408              		.loc 1 733 16 view .LVU610
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 67


 2409 00c0 0134     		adds	r4, r4, #1
 2410              	.LVL233:
 2411              	.L161:
 733:flight/libraries/printf/printf.c ****       }
 2412              		.loc 1 733 16 view .LVU611
 2413              	.LBE91:
 745:flight/libraries/printf/printf.c ****     buf[len++] = (char)('0' + (number_.integral % 10));
 2414              		.loc 1 745 9 is_stmt 1 view .LVU612
 2415 00c2 1F2C     		cmp	r4, #31
 2416 00c4 24D8     		bhi	.L160
 746:flight/libraries/printf/printf.c ****     if (!(number_.integral /= 10)) {
 2417              		.loc 1 746 5 view .LVU613
 746:flight/libraries/printf/printf.c ****     if (!(number_.integral /= 10)) {
 2418              		.loc 1 746 39 is_stmt 0 view .LVU614
 2419 00c6 DDE90CAB 		ldrd	r10, [sp, #48]
 746:flight/libraries/printf/printf.c ****     if (!(number_.integral /= 10)) {
 2420              		.loc 1 746 49 view .LVU615
 2421 00ca 0A22     		movs	r2, #10
 2422 00cc 0023     		movs	r3, #0
 2423 00ce 5046     		mov	r0, r10
 2424 00d0 5946     		mov	r1, fp
 2425 00d2 FFF7FEFF 		bl	__aeabi_ldivmod
 2426              	.LVL234:
 746:flight/libraries/printf/printf.c ****     if (!(number_.integral /= 10)) {
 2427              		.loc 1 746 12 view .LVU616
 2428 00d6 661C     		adds	r6, r4, #1
 2429              	.LVL235:
 746:flight/libraries/printf/printf.c ****     if (!(number_.integral /= 10)) {
 2430              		.loc 1 746 18 view .LVU617
 2431 00d8 3032     		adds	r2, r2, #48
 746:flight/libraries/printf/printf.c ****     if (!(number_.integral /= 10)) {
 2432              		.loc 1 746 16 view .LVU618
 2433 00da 2A55     		strb	r2, [r5, r4]
 747:flight/libraries/printf/printf.c ****       break;
 2434              		.loc 1 747 5 is_stmt 1 view .LVU619
 747:flight/libraries/printf/printf.c ****       break;
 2435              		.loc 1 747 28 is_stmt 0 view .LVU620
 2436 00dc 0A22     		movs	r2, #10
 2437 00de 0023     		movs	r3, #0
 2438 00e0 5046     		mov	r0, r10
 2439 00e2 5946     		mov	r1, fp
 2440 00e4 FFF7FEFF 		bl	__aeabi_ldivmod
 2441              	.LVL236:
 2442 00e8 0C90     		str	r0, [sp, #48]
 2443 00ea 0D91     		str	r1, [sp, #52]
 747:flight/libraries/printf/printf.c ****       break;
 2444              		.loc 1 747 8 view .LVU621
 2445 00ec 51EA0003 		orrs	r3, r1, r0
 2446 00f0 0DD0     		beq	.L172
 746:flight/libraries/printf/printf.c ****     if (!(number_.integral /= 10)) {
 2447              		.loc 1 746 12 view .LVU622
 2448 00f2 3446     		mov	r4, r6
 2449 00f4 E5E7     		b	.L161
 2450              	.LVL237:
 2451              	.L171:
 2452              	.LBB93:
 722:flight/libraries/printf/printf.c ****         if (!(number_.fractional /= 10U)) {
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 68


 2453              		.loc 1 722 16 view .LVU623
 2454 00f6 5446     		mov	r4, r10
 2455 00f8 DAE7     		b	.L157
 2456              	.LVL238:
 2457              	.L149:
 722:flight/libraries/printf/printf.c ****         if (!(number_.fractional /= 10U)) {
 2458              		.loc 1 722 16 view .LVU624
 2459              	.LBE93:
 738:flight/libraries/printf/printf.c ****       buf[len++] = '.';
 2460              		.loc 1 738 5 is_stmt 1 view .LVU625
 738:flight/libraries/printf/printf.c ****       buf[len++] = '.';
 2461              		.loc 1 738 8 is_stmt 0 view .LVU626
 2462 00fa 159B     		ldr	r3, [sp, #84]
 2463 00fc 13F0100F 		tst	r3, #16
 2464 0100 DFD0     		beq	.L161
 738:flight/libraries/printf/printf.c ****       buf[len++] = '.';
 2465              		.loc 1 738 30 discriminator 1 view .LVU627
 2466 0102 1F2C     		cmp	r4, #31
 2467 0104 DDD8     		bhi	.L161
 739:flight/libraries/printf/printf.c ****     }
 2468              		.loc 1 739 7 is_stmt 1 view .LVU628
 2469              	.LVL239:
 739:flight/libraries/printf/printf.c ****     }
 2470              		.loc 1 739 18 is_stmt 0 view .LVU629
 2471 0106 2E23     		movs	r3, #46
 2472 0108 2B55     		strb	r3, [r5, r4]
 739:flight/libraries/printf/printf.c ****     }
 2473              		.loc 1 739 14 view .LVU630
 2474 010a 0134     		adds	r4, r4, #1
 2475              	.LVL240:
 739:flight/libraries/printf/printf.c ****     }
 2476              		.loc 1 739 14 view .LVU631
 2477 010c D9E7     		b	.L161
 2478              	.LVL241:
 2479              	.L172:
 746:flight/libraries/printf/printf.c ****     if (!(number_.integral /= 10)) {
 2480              		.loc 1 746 12 view .LVU632
 2481 010e 3446     		mov	r4, r6
 2482              	.LVL242:
 2483              	.L160:
 753:flight/libraries/printf/printf.c ****     if (width && (number_.is_negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2484              		.loc 1 753 3 is_stmt 1 view .LVU633
 753:flight/libraries/printf/printf.c ****     if (width && (number_.is_negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2485              		.loc 1 753 29 is_stmt 0 view .LVU634
 2486 0110 159B     		ldr	r3, [sp, #84]
 2487 0112 03F00303 		and	r3, r3, #3
 753:flight/libraries/printf/printf.c ****     if (width && (number_.is_negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2488              		.loc 1 753 6 view .LVU635
 2489 0116 012B     		cmp	r3, #1
 2490 0118 14D0     		beq	.L176
 2491              	.LVL243:
 2492              	.L163:
 762:flight/libraries/printf/printf.c ****     if (number_.is_negative) {
 2493              		.loc 1 762 3 is_stmt 1 view .LVU636
 762:flight/libraries/printf/printf.c ****     if (number_.is_negative) {
 2494              		.loc 1 762 6 is_stmt 0 view .LVU637
 2495 011a 1F2C     		cmp	r4, #31
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 69


 2496 011c 05D8     		bhi	.L168
 763:flight/libraries/printf/printf.c ****       buf[len++] = '-';
 2497              		.loc 1 763 5 is_stmt 1 view .LVU638
 763:flight/libraries/printf/printf.c ****       buf[len++] = '-';
 2498              		.loc 1 763 16 is_stmt 0 view .LVU639
 2499 011e 9DF84030 		ldrb	r3, [sp, #64]	@ zero_extendqisi2
 763:flight/libraries/printf/printf.c ****       buf[len++] = '-';
 2500              		.loc 1 763 8 view .LVU640
 2501 0122 0BB3     		cbz	r3, .L169
 764:flight/libraries/printf/printf.c ****     }
 2502              		.loc 1 764 7 is_stmt 1 view .LVU641
 2503              	.LVL244:
 764:flight/libraries/printf/printf.c ****     }
 2504              		.loc 1 764 18 is_stmt 0 view .LVU642
 2505 0124 2D23     		movs	r3, #45
 2506 0126 2B55     		strb	r3, [r5, r4]
 764:flight/libraries/printf/printf.c ****     }
 2507              		.loc 1 764 14 view .LVU643
 2508 0128 0134     		adds	r4, r4, #1
 2509              	.LVL245:
 2510              	.L168:
 774:flight/libraries/printf/printf.c **** }
 2511              		.loc 1 774 3 is_stmt 1 view .LVU644
 2512 012a 159B     		ldr	r3, [sp, #84]
 2513 012c 0093     		str	r3, [sp]
 2514 012e 3B46     		mov	r3, r7
 2515 0130 2246     		mov	r2, r4
 2516 0132 2946     		mov	r1, r5
 2517 0134 1298     		ldr	r0, [sp, #72]
 2518 0136 FFF7FEFF 		bl	out_rev_
 2519              	.LVL246:
 775:flight/libraries/printf/printf.c **** 
 2520              		.loc 1 775 1 is_stmt 0 view .LVU645
 2521 013a 03B0     		add	sp, sp, #12
 2522              	.LCFI42:
 2523              		.cfi_remember_state
 2524              		.cfi_def_cfa_offset 52
 2525              		@ sp needed
 2526 013c BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2527              	.LCFI43:
 2528              		.cfi_restore 14
 2529              		.cfi_restore 11
 2530              		.cfi_restore 10
 2531              		.cfi_restore 9
 2532              		.cfi_restore 8
 2533              		.cfi_restore 7
 2534              		.cfi_restore 6
 2535              		.cfi_restore 5
 2536              		.cfi_restore 4
 2537              		.cfi_def_cfa_offset 16
 2538              	.LVL247:
 775:flight/libraries/printf/printf.c **** 
 2539              		.loc 1 775 1 view .LVU646
 2540 0140 04B0     		add	sp, sp, #16
 2541              	.LCFI44:
 2542              		.cfi_def_cfa_offset 0
 2543 0142 7047     		bx	lr
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 70


 2544              	.LVL248:
 2545              	.L176:
 2546              	.LCFI45:
 2547              		.cfi_restore_state
 754:flight/libraries/printf/printf.c ****       width--;
 2548              		.loc 1 754 5 is_stmt 1 view .LVU647
 754:flight/libraries/printf/printf.c ****       width--;
 2549              		.loc 1 754 8 is_stmt 0 view .LVU648
 2550 0144 5FB1     		cbz	r7, .L166
 754:flight/libraries/printf/printf.c ****       width--;
 2551              		.loc 1 754 26 discriminator 1 view .LVU649
 2552 0146 9DF84030 		ldrb	r3, [sp, #64]	@ zero_extendqisi2
 754:flight/libraries/printf/printf.c ****       width--;
 2553              		.loc 1 754 15 discriminator 1 view .LVU650
 2554 014a 1BB9     		cbnz	r3, .L165
 754:flight/libraries/printf/printf.c ****       width--;
 2555              		.loc 1 754 39 discriminator 2 view .LVU651
 2556 014c 159B     		ldr	r3, [sp, #84]
 2557 014e 13F00C0F 		tst	r3, #12
 2558 0152 04D0     		beq	.L166
 2559              	.L165:
 755:flight/libraries/printf/printf.c ****     }
 2560              		.loc 1 755 7 is_stmt 1 view .LVU652
 755:flight/libraries/printf/printf.c ****     }
 2561              		.loc 1 755 12 is_stmt 0 view .LVU653
 2562 0154 013F     		subs	r7, r7, #1
 2563              	.LVL249:
 755:flight/libraries/printf/printf.c ****     }
 2564              		.loc 1 755 12 view .LVU654
 2565 0156 02E0     		b	.L166
 2566              	.L167:
 758:flight/libraries/printf/printf.c ****     }
 2567              		.loc 1 758 7 is_stmt 1 view .LVU655
 2568              	.LVL250:
 758:flight/libraries/printf/printf.c ****     }
 2569              		.loc 1 758 18 is_stmt 0 view .LVU656
 2570 0158 3023     		movs	r3, #48
 2571 015a 2B55     		strb	r3, [r5, r4]
 758:flight/libraries/printf/printf.c ****     }
 2572              		.loc 1 758 14 view .LVU657
 2573 015c 0134     		adds	r4, r4, #1
 2574              	.LVL251:
 2575              	.L166:
 757:flight/libraries/printf/printf.c ****       buf[len++] = '0';
 2576              		.loc 1 757 11 is_stmt 1 view .LVU658
 2577 015e BC42     		cmp	r4, r7
 2578 0160 DBD2     		bcs	.L163
 757:flight/libraries/printf/printf.c ****       buf[len++] = '0';
 2579              		.loc 1 757 26 is_stmt 0 discriminator 1 view .LVU659
 2580 0162 1F2C     		cmp	r4, #31
 2581 0164 F8D9     		bls	.L167
 2582 0166 D8E7     		b	.L163
 2583              	.L169:
 766:flight/libraries/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2584              		.loc 1 766 10 is_stmt 1 view .LVU660
 766:flight/libraries/printf/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2585              		.loc 1 766 13 is_stmt 0 view .LVU661
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 71


 2586 0168 159B     		ldr	r3, [sp, #84]
 2587 016a 13F0040F 		tst	r3, #4
 2588 016e 03D0     		beq	.L170
 767:flight/libraries/printf/printf.c ****     }
 2589              		.loc 1 767 7 is_stmt 1 view .LVU662
 2590              	.LVL252:
 767:flight/libraries/printf/printf.c ****     }
 2591              		.loc 1 767 18 is_stmt 0 view .LVU663
 2592 0170 2B23     		movs	r3, #43
 2593 0172 2B55     		strb	r3, [r5, r4]
 767:flight/libraries/printf/printf.c ****     }
 2594              		.loc 1 767 14 view .LVU664
 2595 0174 0134     		adds	r4, r4, #1
 2596              	.LVL253:
 767:flight/libraries/printf/printf.c ****     }
 2597              		.loc 1 767 14 view .LVU665
 2598 0176 D8E7     		b	.L168
 2599              	.L170:
 769:flight/libraries/printf/printf.c ****       buf[len++] = ' ';
 2600              		.loc 1 769 10 is_stmt 1 view .LVU666
 769:flight/libraries/printf/printf.c ****       buf[len++] = ' ';
 2601              		.loc 1 769 13 is_stmt 0 view .LVU667
 2602 0178 159B     		ldr	r3, [sp, #84]
 2603 017a 13F0080F 		tst	r3, #8
 2604 017e D4D0     		beq	.L168
 770:flight/libraries/printf/printf.c ****     }
 2605              		.loc 1 770 7 is_stmt 1 view .LVU668
 2606              	.LVL254:
 770:flight/libraries/printf/printf.c ****     }
 2607              		.loc 1 770 18 is_stmt 0 view .LVU669
 2608 0180 2023     		movs	r3, #32
 2609 0182 2B55     		strb	r3, [r5, r4]
 770:flight/libraries/printf/printf.c ****     }
 2610              		.loc 1 770 14 view .LVU670
 2611 0184 0134     		adds	r4, r4, #1
 2612              	.LVL255:
 770:flight/libraries/printf/printf.c ****     }
 2613              		.loc 1 770 14 view .LVU671
 2614 0186 D0E7     		b	.L168
 2615              		.cfi_endproc
 2616              	.LFE21:
 2618              		.section	.text.print_decimal_number,"ax",%progbits
 2619              		.align	1
 2620              		.syntax unified
 2621              		.thumb
 2622              		.thumb_func
 2624              	print_decimal_number:
 2625              	.LVL256:
 2626              	.LFB22:
 779:flight/libraries/printf/printf.c ****   struct double_components value_ = get_components(number, precision);
 2627              		.loc 1 779 1 is_stmt 1 view -0
 2628              		.cfi_startproc
 2629              		@ args = 20, pretend = 0, frame = 24
 2630              		@ frame_needed = 0, uses_anonymous_args = 0
 779:flight/libraries/printf/printf.c ****   struct double_components value_ = get_components(number, precision);
 2631              		.loc 1 779 1 is_stmt 0 view .LVU673
 2632 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 72


 2633              	.LCFI46:
 2634              		.cfi_def_cfa_offset 16
 2635              		.cfi_offset 4, -16
 2636              		.cfi_offset 5, -12
 2637              		.cfi_offset 6, -8
 2638              		.cfi_offset 14, -4
 2639 0002 8EB0     		sub	sp, sp, #56
 2640              	.LCFI47:
 2641              		.cfi_def_cfa_offset 72
 2642 0004 0546     		mov	r5, r0
 2643 0006 129E     		ldr	r6, [sp, #72]
 780:flight/libraries/printf/printf.c ****   print_broken_up_decimal(value_, output, precision, width, flags, buf, len);
 2644              		.loc 1 780 3 is_stmt 1 view .LVU674
 780:flight/libraries/printf/printf.c ****   print_broken_up_decimal(value_, output, precision, width, flags, buf, len);
 2645              		.loc 1 780 37 is_stmt 0 view .LVU675
 2646 0008 08AC     		add	r4, sp, #32
 2647 000a 0096     		str	r6, [sp]
 2648 000c 2046     		mov	r0, r4
 2649              	.LVL257:
 780:flight/libraries/printf/printf.c ****   print_broken_up_decimal(value_, output, precision, width, flags, buf, len);
 2650              		.loc 1 780 37 view .LVU676
 2651 000e FFF7FEFF 		bl	get_components
 2652              	.LVL258:
 781:flight/libraries/printf/printf.c **** }
 2653              		.loc 1 781 3 is_stmt 1 view .LVU677
 2654 0012 169B     		ldr	r3, [sp, #88]
 2655 0014 0793     		str	r3, [sp, #28]
 2656 0016 159B     		ldr	r3, [sp, #84]
 2657 0018 0693     		str	r3, [sp, #24]
 2658 001a 149B     		ldr	r3, [sp, #80]
 2659 001c 0593     		str	r3, [sp, #20]
 2660 001e 139B     		ldr	r3, [sp, #76]
 2661 0020 0493     		str	r3, [sp, #16]
 2662 0022 0396     		str	r6, [sp, #12]
 2663 0024 0295     		str	r5, [sp, #8]
 2664 0026 0EAB     		add	r3, sp, #56
 2665 0028 13E90300 		ldmdb	r3, {r0, r1}
 2666 002c 8DE80300 		stm	sp, {r0, r1}
 2667 0030 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 2668 0034 FFF7FEFF 		bl	print_broken_up_decimal
 2669              	.LVL259:
 782:flight/libraries/printf/printf.c **** 
 2670              		.loc 1 782 1 is_stmt 0 view .LVU678
 2671 0038 0EB0     		add	sp, sp, #56
 2672              	.LCFI48:
 2673              		.cfi_def_cfa_offset 16
 2674              		@ sp needed
 2675 003a 70BD     		pop	{r4, r5, r6, pc}
 782:flight/libraries/printf/printf.c **** 
 2676              		.loc 1 782 1 view .LVU679
 2677              		.cfi_endproc
 2678              	.LFE22:
 2680              		.section	.text.print_exponential_number,"ax",%progbits
 2681              		.align	1
 2682              		.syntax unified
 2683              		.thumb
 2684              		.thumb_func
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 73


 2686              	print_exponential_number:
 2687              	.LVL260:
 2688              	.LFB26:
 849:flight/libraries/printf/printf.c ****   const bool negative = get_sign_bit(number);
 2689              		.loc 1 849 1 is_stmt 1 view -0
 2690              		.cfi_startproc
 2691              		@ args = 20, pretend = 0, frame = 48
 2692              		@ frame_needed = 0, uses_anonymous_args = 0
 849:flight/libraries/printf/printf.c ****   const bool negative = get_sign_bit(number);
 2693              		.loc 1 849 1 is_stmt 0 view .LVU681
 2694 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2695              	.LCFI49:
 2696              		.cfi_def_cfa_offset 36
 2697              		.cfi_offset 4, -36
 2698              		.cfi_offset 5, -32
 2699              		.cfi_offset 6, -28
 2700              		.cfi_offset 7, -24
 2701              		.cfi_offset 8, -20
 2702              		.cfi_offset 9, -16
 2703              		.cfi_offset 10, -12
 2704              		.cfi_offset 11, -8
 2705              		.cfi_offset 14, -4
 2706 0004 2DED028B 		vpush.64	{d8}
 2707              	.LCFI50:
 2708              		.cfi_def_cfa_offset 44
 2709              		.cfi_offset 80, -44
 2710              		.cfi_offset 81, -40
 2711 0008 95B0     		sub	sp, sp, #84
 2712              	.LCFI51:
 2713              		.cfi_def_cfa_offset 128
 2714 000a 0446     		mov	r4, r0
 2715 000c 9246     		mov	r10, r2
 2716 000e 9B46     		mov	fp, r3
 2717 0010 209F     		ldr	r7, [sp, #128]
 2718 0012 229E     		ldr	r6, [sp, #136]
 2719 0014 0023     		movs	r3, #0
 2720 0016 0893     		str	r3, [sp, #32]
 850:flight/libraries/printf/printf.c ****   // This number will decrease gradually (by factors of 10) as we "extract" the exponent out of it
 2721              		.loc 1 850 3 is_stmt 1 view .LVU682
 2722              	.LVL261:
 2723              	.LBB104:
 2724              	.LBI104:
 278:flight/libraries/printf/printf.c **** {
 2725              		.loc 1 278 19 view .LVU683
 2726              	.LBB105:
 281:flight/libraries/printf/printf.c **** }
 2727              		.loc 1 281 3 view .LVU684
 2728              	.LBB106:
 2729              	.LBI106:
 271:flight/libraries/printf/printf.c **** {
 2730              		.loc 1 271 38 view .LVU685
 2731              	.LBB107:
 273:flight/libraries/printf/printf.c ****   dwba.F = x;
 2732              		.loc 1 273 3 view .LVU686
 274:flight/libraries/printf/printf.c ****   return dwba;
 2733              		.loc 1 274 3 view .LVU687
 275:flight/libraries/printf/printf.c **** }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 74


 2734              		.loc 1 275 3 view .LVU688
 275:flight/libraries/printf/printf.c **** }
 2735              		.loc 1 275 3 is_stmt 0 view .LVU689
 2736              	.LBE107:
 2737              	.LBE106:
 2738              	.LBE105:
 2739              	.LBE104:
 850:flight/libraries/printf/printf.c ****   // This number will decrease gradually (by factors of 10) as we "extract" the exponent out of it
 2740              		.loc 1 850 14 view .LVU690
 2741 0018 5FEADB79 		lsrs	r9, fp, #31
 2742 001c CDF82490 		str	r9, [sp, #36]
 2743              	.LVL262:
 852:flight/libraries/printf/printf.c **** 
 2744              		.loc 1 852 3 is_stmt 1 view .LVU691
 852:flight/libraries/printf/printf.c **** 
 2745              		.loc 1 852 43 is_stmt 0 view .LVU692
 2746 0020 02D0     		beq	.L180
 852:flight/libraries/printf/printf.c **** 
 2747              		.loc 1 852 43 discriminator 1 view .LVU693
 2748 0022 0BF10043 		add	r3, fp, #-2147483648
 2749 0026 9B46     		mov	fp, r3
 2750              	.L180:
 2751              	.LVL263:
 854:flight/libraries/printf/printf.c ****   bool abs_exp10_covered_by_powers_table;
 2752              		.loc 1 854 3 is_stmt 1 discriminator 4 view .LVU694
 855:flight/libraries/printf/printf.c ****   struct scaling_factor normalization;
 2753              		.loc 1 855 3 discriminator 4 view .LVU695
 856:flight/libraries/printf/printf.c **** 
 2754              		.loc 1 856 3 discriminator 4 view .LVU696
 860:flight/libraries/printf/printf.c ****     // TODO: This is a special-case for 0.0 (and -0.0); but proper handling is required for denorma
 2755              		.loc 1 860 3 discriminator 4 view .LVU697
 860:flight/libraries/printf/printf.c ****     // TODO: This is a special-case for 0.0 (and -0.0); but proper handling is required for denorma
 2756              		.loc 1 860 6 is_stmt 0 discriminator 4 view .LVU698
 2757 0028 0022     		movs	r2, #0
 2758              	.LVL264:
 860:flight/libraries/printf/printf.c ****     // TODO: This is a special-case for 0.0 (and -0.0); but proper handling is required for denorma
 2759              		.loc 1 860 6 discriminator 4 view .LVU699
 2760 002a 0023     		movs	r3, #0
 2761 002c 5046     		mov	r0, r10
 2762              	.LVL265:
 860:flight/libraries/printf/printf.c ****     // TODO: This is a special-case for 0.0 (and -0.0); but proper handling is required for denorma
 2763              		.loc 1 860 6 discriminator 4 view .LVU700
 2764 002e 5946     		mov	r1, fp
 2765 0030 FFF7FEFF 		bl	__aeabi_dcmpeq
 2766              	.LVL266:
 2767 0034 C8BB     		cbnz	r0, .L211
 2768              	.LBB108:
 865:flight/libraries/printf/printf.c ****     floored_exp10 = bastardized_floor(exp10);
 2769              		.loc 1 865 5 is_stmt 1 view .LVU701
 865:flight/libraries/printf/printf.c ****     floored_exp10 = bastardized_floor(exp10);
 2770              		.loc 1 865 20 is_stmt 0 view .LVU702
 2771 0036 5046     		mov	r0, r10
 2772 0038 5946     		mov	r1, fp
 2773 003a FFF7FEFF 		bl	log10_of_positive
 2774              	.LVL267:
 866:flight/libraries/printf/printf.c ****     double p10 = pow10_of_int(floored_exp10);
 2775              		.loc 1 866 5 is_stmt 1 view .LVU703
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 75


 866:flight/libraries/printf/printf.c ****     double p10 = pow10_of_int(floored_exp10);
 2776              		.loc 1 866 21 is_stmt 0 view .LVU704
 2777 003e FFF7FEFF 		bl	bastardized_floor
 2778              	.LVL268:
 866:flight/libraries/printf/printf.c ****     double p10 = pow10_of_int(floored_exp10);
 2779              		.loc 1 866 21 view .LVU705
 2780 0042 0546     		mov	r5, r0
 2781              	.LVL269:
 867:flight/libraries/printf/printf.c ****     // correct for rounding errors
 2782              		.loc 1 867 5 is_stmt 1 view .LVU706
 867:flight/libraries/printf/printf.c ****     // correct for rounding errors
 2783              		.loc 1 867 18 is_stmt 0 view .LVU707
 2784 0044 FFF7FEFF 		bl	pow10_of_int
 2785              	.LVL270:
 867:flight/libraries/printf/printf.c ****     // correct for rounding errors
 2786              		.loc 1 867 18 view .LVU708
 2787 0048 41EC180B 		vmov	d8, r0, r1
 2788              	.LVL271:
 869:flight/libraries/printf/printf.c ****       floored_exp10--;
 2789              		.loc 1 869 5 is_stmt 1 view .LVU709
 869:flight/libraries/printf/printf.c ****       floored_exp10--;
 2790              		.loc 1 869 8 is_stmt 0 view .LVU710
 2791 004c 0246     		mov	r2, r0
 2792 004e 0B46     		mov	r3, r1
 2793 0050 5046     		mov	r0, r10
 2794              	.LVL272:
 869:flight/libraries/printf/printf.c ****       floored_exp10--;
 2795              		.loc 1 869 8 view .LVU711
 2796 0052 5946     		mov	r1, fp
 2797 0054 FFF7FEFF 		bl	__aeabi_dcmplt
 2798              	.LVL273:
 869:flight/libraries/printf/printf.c ****       floored_exp10--;
 2799              		.loc 1 869 8 view .LVU712
 2800 0058 40B1     		cbz	r0, .L182
 870:flight/libraries/printf/printf.c ****       p10 /= 10;
 2801              		.loc 1 870 7 is_stmt 1 view .LVU713
 870:flight/libraries/printf/printf.c ****       p10 /= 10;
 2802              		.loc 1 870 20 is_stmt 0 view .LVU714
 2803 005a 013D     		subs	r5, r5, #1
 2804              	.LVL274:
 871:flight/libraries/printf/printf.c ****     }
 2805              		.loc 1 871 7 is_stmt 1 view .LVU715
 871:flight/libraries/printf/printf.c ****     }
 2806              		.loc 1 871 11 is_stmt 0 view .LVU716
 2807 005c 0022     		movs	r2, #0
 2808 005e 874B     		ldr	r3, .L230
 2809 0060 51EC180B 		vmov	r0, r1, d8
 2810 0064 FFF7FEFF 		bl	__aeabi_ddiv
 2811              	.LVL275:
 2812 0068 41EC180B 		vmov	d8, r0, r1
 2813              	.LVL276:
 2814              	.L182:
 873:flight/libraries/printf/printf.c ****     normalization.raw_factor = abs_exp10_covered_by_powers_table ? powers_of_10[PRINTF_ABS(floored_
 2815              		.loc 1 873 5 is_stmt 1 view .LVU717
 873:flight/libraries/printf/printf.c ****     normalization.raw_factor = abs_exp10_covered_by_powers_table ? powers_of_10[PRINTF_ABS(floored_
 2816              		.loc 1 873 67 is_stmt 0 view .LVU718
 2817 006c 05F11103 		add	r3, r5, #17
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 76


 873:flight/libraries/printf/printf.c ****     normalization.raw_factor = abs_exp10_covered_by_powers_table ? powers_of_10[PRINTF_ABS(floored_
 2818              		.loc 1 873 39 view .LVU719
 2819 0070 222B     		cmp	r3, #34
 2820 0072 94BF     		ite	ls
 2821 0074 0123     		movls	r3, #1
 2822 0076 0023     		movhi	r3, #0
 2823 0078 0893     		str	r3, [sp, #32]
 2824              	.LVL277:
 874:flight/libraries/printf/printf.c ****   }
 2825              		.loc 1 874 5 is_stmt 1 view .LVU720
 874:flight/libraries/printf/printf.c ****   }
 2826              		.loc 1 874 108 is_stmt 0 view .LVU721
 2827 007a 08D8     		bhi	.L184
 874:flight/libraries/printf/printf.c ****   }
 2828              		.loc 1 874 81 discriminator 1 view .LVU722
 2829 007c 85EAE572 		eor	r2, r5, r5, asr #31
 2830 0080 A2EBE572 		sub	r2, r2, r5, asr #31
 874:flight/libraries/printf/printf.c ****   }
 2831              		.loc 1 874 108 discriminator 1 view .LVU723
 2832 0084 7E4B     		ldr	r3, .L230+4
 2833 0086 03EBC203 		add	r3, r3, r2, lsl #3
 2834 008a 93ED008B 		vldr.64	d8, [r3]
 2835              	.LVL278:
 2836              	.L184:
 874:flight/libraries/printf/printf.c ****   }
 2837              		.loc 1 874 30 discriminator 4 view .LVU724
 2838 008e 8DED108B 		vstr.64	d8, [sp, #64]
 2839              	.LVL279:
 2840              	.L181:
 874:flight/libraries/printf/printf.c ****   }
 2841              		.loc 1 874 30 discriminator 4 view .LVU725
 2842              	.LBE108:
 883:flight/libraries/printf/printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
 2843              		.loc 1 883 3 is_stmt 1 view .LVU726
 884:flight/libraries/printf/printf.c ****     int required_significant_digits = (precision == 0) ? 1 : (int) precision;
 2844              		.loc 1 884 3 view .LVU727
 884:flight/libraries/printf/printf.c ****     int required_significant_digits = (precision == 0) ? 1 : (int) precision;
 2845              		.loc 1 884 6 is_stmt 0 view .LVU728
 2846 0092 16F4805F 		tst	r6, #4096
 2847 0096 24D0     		beq	.L212
 2848              	.LBB109:
 885:flight/libraries/printf/printf.c ****     // Should we want to fall-back to "%f" mode, and only print the decimal part?
 2849              		.loc 1 885 5 is_stmt 1 view .LVU729
 885:flight/libraries/printf/printf.c ****     // Should we want to fall-back to "%f" mode, and only print the decimal part?
 2850              		.loc 1 885 60 is_stmt 0 view .LVU730
 2851 0098 4FB1     		cbz	r7, .L213
 885:flight/libraries/printf/printf.c ****     // Should we want to fall-back to "%f" mode, and only print the decimal part?
 2852              		.loc 1 885 60 discriminator 1 view .LVU731
 2853 009a 3B46     		mov	r3, r7
 2854              	.L186:
 2855              	.LVL280:
 887:flight/libraries/printf/printf.c ****     // Now, let's adjust the precision
 2856              		.loc 1 887 5 is_stmt 1 discriminator 4 view .LVU732
 887:flight/libraries/printf/printf.c ****     // Now, let's adjust the precision
 2857              		.loc 1 887 59 is_stmt 0 discriminator 4 view .LVU733
 2858 009c 15F1040F 		cmn	r5, #4
 2859 00a0 07DB     		blt	.L214
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 77


 887:flight/libraries/printf/printf.c ****     // Now, let's adjust the precision
 2860              		.loc 1 887 59 discriminator 1 view .LVU734
 2861 00a2 9D42     		cmp	r5, r3
 2862 00a4 19DB     		blt	.L215
 887:flight/libraries/printf/printf.c ****     // Now, let's adjust the precision
 2863              		.loc 1 887 59 view .LVU735
 2864 00a6 0023     		movs	r3, #0
 2865              	.LVL281:
 887:flight/libraries/printf/printf.c ****     // Now, let's adjust the precision
 2866              		.loc 1 887 59 view .LVU736
 2867 00a8 04E0     		b	.L187
 2868              	.LVL282:
 2869              	.L211:
 887:flight/libraries/printf/printf.c ****     // Now, let's adjust the precision
 2870              		.loc 1 887 59 view .LVU737
 2871              	.LBE109:
 862:flight/libraries/printf/printf.c ****   }
 2872              		.loc 1 862 19 view .LVU738
 2873 00aa 0025     		movs	r5, #0
 2874 00ac F1E7     		b	.L181
 2875              	.LVL283:
 2876              	.L213:
 2877              	.LBB110:
 885:flight/libraries/printf/printf.c ****     // Should we want to fall-back to "%f" mode, and only print the decimal part?
 2878              		.loc 1 885 60 view .LVU739
 2879 00ae 0123     		movs	r3, #1
 2880 00b0 F4E7     		b	.L186
 2881              	.LVL284:
 2882              	.L214:
 887:flight/libraries/printf/printf.c ****     // Now, let's adjust the precision
 2883              		.loc 1 887 59 view .LVU740
 2884 00b2 0023     		movs	r3, #0
 2885              	.LVL285:
 2886              	.L187:
 892:flight/libraries/printf/printf.c ****                      (int) precision - 1 - floored_exp10 :
 2887              		.loc 1 892 5 is_stmt 1 discriminator 6 view .LVU741
 893:flight/libraries/printf/printf.c ****         (int) precision - 1; // the presence of the exponent ensures only one significant digit com
 2888              		.loc 1 893 58 is_stmt 0 discriminator 6 view .LVU742
 2889 00b4 9846     		mov	r8, r3
 2890 00b6 93B1     		cbz	r3, .L188
 893:flight/libraries/printf/printf.c ****         (int) precision - 1; // the presence of the exponent ensures only one significant digit com
 2891              		.loc 1 893 38 discriminator 1 view .LVU743
 2892 00b8 013F     		subs	r7, r7, #1
 893:flight/libraries/printf/printf.c ****         (int) precision - 1; // the presence of the exponent ensures only one significant digit com
 2893              		.loc 1 893 58 discriminator 1 view .LVU744
 2894 00ba 7F1B     		subs	r7, r7, r5
 2895              	.L189:
 2896              	.LVL286:
 895:flight/libraries/printf/printf.c ****     flags |= FLAGS_PRECISION;   // make sure print_broken_up_decimal respects our choice above
 2897              		.loc 1 895 5 is_stmt 1 view .LVU745
 895:flight/libraries/printf/printf.c ****     flags |= FLAGS_PRECISION;   // make sure print_broken_up_decimal respects our choice above
 2898              		.loc 1 895 57 is_stmt 0 view .LVU746
 2899 00bc 27EAE777 		bic	r7, r7, r7, asr #31
 2900              	.LVL287:
 896:flight/libraries/printf/printf.c ****   }
 2901              		.loc 1 896 5 is_stmt 1 view .LVU747
 896:flight/libraries/printf/printf.c ****   }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 78


 2902              		.loc 1 896 11 is_stmt 0 view .LVU748
 2903 00c0 46F40066 		orr	r6, r6, #2048
 2904              	.LVL288:
 2905              	.L185:
 896:flight/libraries/printf/printf.c ****   }
 2906              		.loc 1 896 11 view .LVU749
 2907              	.LBE110:
 899:flight/libraries/printf/printf.c ****   bool should_skip_normalization = (fall_back_to_decimal_only_mode || floored_exp10 == 0);
 2908              		.loc 1 899 3 is_stmt 1 view .LVU750
 899:flight/libraries/printf/printf.c ****   bool should_skip_normalization = (fall_back_to_decimal_only_mode || floored_exp10 == 0);
 2909              		.loc 1 899 47 is_stmt 0 view .LVU751
 2910 00c4 002D     		cmp	r5, #0
 2911 00c6 0FDB     		blt	.L229
 2912 00c8 0023     		movs	r3, #0
 2913              	.L190:
 899:flight/libraries/printf/printf.c ****   bool should_skip_normalization = (fall_back_to_decimal_only_mode || floored_exp10 == 0);
 2914              		.loc 1 899 26 discriminator 6 view .LVU752
 2915 00ca 8DF84830 		strb	r3, [sp, #72]
 900:flight/libraries/printf/printf.c ****   struct double_components decimal_part_components =
 2916              		.loc 1 900 3 is_stmt 1 discriminator 6 view .LVU753
 900:flight/libraries/printf/printf.c ****   struct double_components decimal_part_components =
 2917              		.loc 1 900 68 is_stmt 0 discriminator 6 view .LVU754
 2918 00ce B8F1000F 		cmp	r8, #0
 2919 00d2 0ED1     		bne	.L218
 900:flight/libraries/printf/printf.c ****   struct double_components decimal_part_components =
 2920              		.loc 1 900 68 discriminator 2 view .LVU755
 2921 00d4 ADBB     		cbnz	r5, .L219
 900:flight/libraries/printf/printf.c ****   struct double_components decimal_part_components =
 2922              		.loc 1 900 68 view .LVU756
 2923 00d6 0123     		movs	r3, #1
 2924 00d8 0CE0     		b	.L191
 2925              	.LVL289:
 2926              	.L215:
 2927              	.LBB111:
 887:flight/libraries/printf/printf.c ****     // Now, let's adjust the precision
 2928              		.loc 1 887 59 view .LVU757
 2929 00da 0123     		movs	r3, #1
 2930              	.LVL290:
 887:flight/libraries/printf/printf.c ****     // Now, let's adjust the precision
 2931              		.loc 1 887 59 view .LVU758
 2932 00dc EAE7     		b	.L187
 2933              	.LVL291:
 2934              	.L188:
 893:flight/libraries/printf/printf.c ****         (int) precision - 1; // the presence of the exponent ensures only one significant digit com
 2935              		.loc 1 893 58 discriminator 2 view .LVU759
 2936 00de 013F     		subs	r7, r7, #1
 2937 00e0 ECE7     		b	.L189
 2938              	.LVL292:
 2939              	.L212:
 893:flight/libraries/printf/printf.c ****         (int) precision - 1; // the presence of the exponent ensures only one significant digit com
 2940              		.loc 1 893 58 discriminator 2 view .LVU760
 2941              	.LBE111:
 883:flight/libraries/printf/printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
 2942              		.loc 1 883 8 view .LVU761
 2943 00e2 4FF00008 		mov	r8, #0
 2944 00e6 EDE7     		b	.L185
 2945              	.LVL293:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 79


 2946              	.L229:
 899:flight/libraries/printf/printf.c ****   bool should_skip_normalization = (fall_back_to_decimal_only_mode || floored_exp10 == 0);
 2947              		.loc 1 899 47 discriminator 1 view .LVU762
 2948 00e8 089B     		ldr	r3, [sp, #32]
 2949 00ea 002B     		cmp	r3, #0
 2950 00ec EDD0     		beq	.L190
 899:flight/libraries/printf/printf.c ****   bool should_skip_normalization = (fall_back_to_decimal_only_mode || floored_exp10 == 0);
 2951              		.loc 1 899 47 view .LVU763
 2952 00ee 0123     		movs	r3, #1
 2953 00f0 EBE7     		b	.L190
 2954              	.L218:
 900:flight/libraries/printf/printf.c ****   struct double_components decimal_part_components =
 2955              		.loc 1 900 68 view .LVU764
 2956 00f2 0123     		movs	r3, #1
 2957              	.L191:
 2958              	.LVL294:
 901:flight/libraries/printf/printf.c ****     should_skip_normalization ?
 2959              		.loc 1 901 3 is_stmt 1 discriminator 6 view .LVU765
 901:flight/libraries/printf/printf.c ****     should_skip_normalization ?
 2960              		.loc 1 901 28 is_stmt 0 discriminator 6 view .LVU766
 2961 00f4 3BB3     		cbz	r3, .L192
 903:flight/libraries/printf/printf.c ****     get_normalized_components(negative, precision, abs_number, normalization, floored_exp10);
 2962              		.loc 1 903 5 view .LVU767
 2963 00f6 B9F1000F 		cmp	r9, #0
 2964 00fa 02D0     		beq	.L193
 903:flight/libraries/printf/printf.c ****     get_normalized_components(negative, precision, abs_number, normalization, floored_exp10);
 2965              		.loc 1 903 5 discriminator 1 view .LVU768
 2966 00fc 0BF10043 		add	r3, fp, #-2147483648
 2967              	.LVL295:
 903:flight/libraries/printf/printf.c ****     get_normalized_components(negative, precision, abs_number, normalization, floored_exp10);
 2968              		.loc 1 903 5 discriminator 1 view .LVU769
 2969 0100 9B46     		mov	fp, r3
 2970              	.L193:
 903:flight/libraries/printf/printf.c ****     get_normalized_components(negative, precision, abs_number, normalization, floored_exp10);
 2971              		.loc 1 903 5 discriminator 4 view .LVU770
 2972 0102 0097     		str	r7, [sp]
 2973 0104 5246     		mov	r2, r10
 2974 0106 5B46     		mov	r3, fp
 2975 0108 0AA8     		add	r0, sp, #40
 2976 010a FFF7FEFF 		bl	get_components
 2977              	.LVL296:
 2978              	.L194:
 908:flight/libraries/printf/printf.c ****     if ((flags & FLAGS_ADAPT_EXP) && floored_exp10 >= -1 && decimal_part_components.integral == pow
 2979              		.loc 1 908 3 is_stmt 1 view .LVU771
 908:flight/libraries/printf/printf.c ****     if ((flags & FLAGS_ADAPT_EXP) && floored_exp10 >= -1 && decimal_part_components.integral == pow
 2980              		.loc 1 908 6 is_stmt 0 view .LVU772
 2981 010e B8F1000F 		cmp	r8, #0
 2982 0112 28D0     		beq	.L195
 909:flight/libraries/printf/printf.c ****       floored_exp10++; // Not strictly necessary, since floored_exp10 is no longer really used
 2983              		.loc 1 909 5 is_stmt 1 view .LVU773
 909:flight/libraries/printf/printf.c ****       floored_exp10++; // Not strictly necessary, since floored_exp10 is no longer really used
 2984              		.loc 1 909 8 is_stmt 0 view .LVU774
 2985 0114 16F4805F 		tst	r6, #4096
 2986 0118 34D0     		beq	.L196
 909:flight/libraries/printf/printf.c ****       floored_exp10++; // Not strictly necessary, since floored_exp10 is no longer really used
 2987              		.loc 1 909 35 discriminator 1 view .LVU775
 2988 011a B5F1FF3F 		cmp	r5, #-1
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 80


 2989 011e 31DB     		blt	.L196
 909:flight/libraries/printf/printf.c ****       floored_exp10++; // Not strictly necessary, since floored_exp10 is no longer really used
 2990              		.loc 1 909 94 discriminator 2 view .LVU776
 2991 0120 DDE90A01 		ldrd	r0, [sp, #40]
 2992 0124 FFF7FEFF 		bl	__aeabi_l2d
 2993              	.LVL297:
 909:flight/libraries/printf/printf.c ****       floored_exp10++; // Not strictly necessary, since floored_exp10 is no longer really used
 2994              		.loc 1 909 124 discriminator 2 view .LVU777
 2995 0128 05F10109 		add	r9, r5, #1
 909:flight/libraries/printf/printf.c ****       floored_exp10++; // Not strictly necessary, since floored_exp10 is no longer really used
 2996              		.loc 1 909 109 discriminator 2 view .LVU778
 2997 012c 544B     		ldr	r3, .L230+4
 2998 012e 03EBC903 		add	r3, r3, r9, lsl #3
 909:flight/libraries/printf/printf.c ****       floored_exp10++; // Not strictly necessary, since floored_exp10 is no longer really used
 2999              		.loc 1 909 58 discriminator 2 view .LVU779
 3000 0132 D3E90023 		ldrd	r2, [r3]
 3001 0136 FFF7FEFF 		bl	__aeabi_dcmpeq
 3002              	.LVL298:
 3003 013a 18B3     		cbz	r0, .L196
 910:flight/libraries/printf/printf.c ****       precision--;
 3004              		.loc 1 910 7 is_stmt 1 view .LVU780
 3005              	.LVL299:
 911:flight/libraries/printf/printf.c ****       // ... and it should already be the case that decimal_part_components.fractional == 0
 3006              		.loc 1 911 7 view .LVU781
 911:flight/libraries/printf/printf.c ****       // ... and it should already be the case that decimal_part_components.fractional == 0
 3007              		.loc 1 911 16 is_stmt 0 view .LVU782
 3008 013c 013F     		subs	r7, r7, #1
 3009              	.LVL300:
 910:flight/libraries/printf/printf.c ****       precision--;
 3010              		.loc 1 910 20 view .LVU783
 3011 013e 4D46     		mov	r5, r9
 3012 0140 20E0     		b	.L196
 3013              	.LVL301:
 3014              	.L219:
 900:flight/libraries/printf/printf.c ****   struct double_components decimal_part_components =
 3015              		.loc 1 900 68 view .LVU784
 3016 0142 0023     		movs	r3, #0
 3017 0144 D6E7     		b	.L191
 3018              	.LVL302:
 3019              	.L192:
 904:flight/libraries/printf/printf.c **** 
 3020              		.loc 1 904 5 view .LVU785
 3021 0146 0695     		str	r5, [sp, #24]
 3022 0148 0DF1080C 		add	ip, sp, #8
 3023 014c 14AB     		add	r3, sp, #80
 3024              	.LVL303:
 904:flight/libraries/printf/printf.c **** 
 3025              		.loc 1 904 5 view .LVU786
 3026 014e 13E90F00 		ldmdb	r3, {r0, r1, r2, r3}
 3027 0152 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 3028 0156 CDE900AB 		strd	r10, [sp]
 3029 015a 3A46     		mov	r2, r7
 3030 015c 0999     		ldr	r1, [sp, #36]
 3031 015e 0AA8     		add	r0, sp, #40
 3032 0160 FFF7FEFF 		bl	get_normalized_components
 3033              	.LVL304:
 3034 0164 D3E7     		b	.L194
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 81


 3035              	.L195:
 917:flight/libraries/printf/printf.c ****       floored_exp10++;
 3036              		.loc 1 917 5 is_stmt 1 view .LVU787
 917:flight/libraries/printf/printf.c ****       floored_exp10++;
 3037              		.loc 1 917 8 is_stmt 0 view .LVU788
 3038 0166 0A9B     		ldr	r3, [sp, #40]
 3039 0168 0A2B     		cmp	r3, #10
 3040 016a 0B9B     		ldr	r3, [sp, #44]
 3041 016c 73F10003 		sbcs	r3, r3, #0
 3042 0170 08DB     		blt	.L196
 918:flight/libraries/printf/printf.c ****       decimal_part_components.integral = 1;
 3043              		.loc 1 918 7 is_stmt 1 view .LVU789
 918:flight/libraries/printf/printf.c ****       decimal_part_components.integral = 1;
 3044              		.loc 1 918 20 is_stmt 0 view .LVU790
 3045 0172 0135     		adds	r5, r5, #1
 3046              	.LVL305:
 919:flight/libraries/printf/printf.c ****       decimal_part_components.fractional = 0;
 3047              		.loc 1 919 7 is_stmt 1 view .LVU791
 919:flight/libraries/printf/printf.c ****       decimal_part_components.fractional = 0;
 3048              		.loc 1 919 40 is_stmt 0 view .LVU792
 3049 0174 0122     		movs	r2, #1
 3050 0176 0023     		movs	r3, #0
 3051 0178 CDE90A23 		strd	r2, [sp, #40]
 920:flight/libraries/printf/printf.c ****     }
 3052              		.loc 1 920 7 is_stmt 1 view .LVU793
 920:flight/libraries/printf/printf.c ****     }
 3053              		.loc 1 920 42 is_stmt 0 view .LVU794
 3054 017c 0022     		movs	r2, #0
 3055 017e 0023     		movs	r3, #0
 3056 0180 CDE90C23 		strd	r2, [sp, #48]
 3057              	.L196:
 926:flight/libraries/printf/printf.c **** 
 3058              		.loc 1 926 3 is_stmt 1 view .LVU795
 926:flight/libraries/printf/printf.c **** 
 3059              		.loc 1 926 72 is_stmt 0 view .LVU796
 3060 0184 B8F1000F 		cmp	r8, #0
 3061 0188 06D1     		bne	.L220
 926:flight/libraries/printf/printf.c **** 
 3062              		.loc 1 926 101 discriminator 2 view .LVU797
 3063 018a 05F16303 		add	r3, r5, #99
 926:flight/libraries/printf/printf.c **** 
 3064              		.loc 1 926 113 discriminator 2 view .LVU798
 3065 018e C62B     		cmp	r3, #198
 3066 0190 4DD8     		bhi	.L221
 926:flight/libraries/printf/printf.c **** 
 3067              		.loc 1 926 113 view .LVU799
 3068 0192 4FF00409 		mov	r9, #4
 3069 0196 01E0     		b	.L198
 3070              	.L220:
 926:flight/libraries/printf/printf.c **** 
 3071              		.loc 1 926 72 view .LVU800
 3072 0198 4FF00009 		mov	r9, #0
 3073              	.L198:
 3074              	.LVL306:
 928:flight/libraries/printf/printf.c ****     ((flags & FLAGS_LEFT) && exp10_part_width) ?
 3075              		.loc 1 928 3 is_stmt 1 discriminator 8 view .LVU801
 932:flight/libraries/printf/printf.c ****       // We're padding on the left; so the width constraint is the decimal part's
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 82


 3076              		.loc 1 932 10 is_stmt 0 discriminator 8 view .LVU802
 3077 019c 16F0020B 		ands	fp, r6, #2
 3078 01a0 02D0     		beq	.L199
 929:flight/libraries/printf/printf.c ****       // We're padding on the right, so the width constraint is the exponent part's
 3079              		.loc 1 929 27 view .LVU803
 3080 01a2 B9F1000F 		cmp	r9, #0
 3081 01a6 45D1     		bne	.L222
 3082              	.L199:
 938:flight/libraries/printf/printf.c ****         // No; we just give up on any restriction on the decimal part and use as many
 3083              		.loc 1 938 34 view .LVU804
 3084 01a8 219B     		ldr	r3, [sp, #132]
 3085 01aa 9945     		cmp	r9, r3
 3086 01ac 44D2     		bcs	.L223
 938:flight/libraries/printf/printf.c ****         // No; we just give up on any restriction on the decimal part and use as many
 3087              		.loc 1 938 34 discriminator 1 view .LVU805
 3088 01ae A3EB0903 		sub	r3, r3, r9
 3089              	.L200:
 3090              	.LVL307:
 943:flight/libraries/printf/printf.c ****   print_broken_up_decimal(decimal_part_components, output, precision, decimal_part_width, flags, bu
 3091              		.loc 1 943 3 is_stmt 1 view .LVU806
 943:flight/libraries/printf/printf.c ****   print_broken_up_decimal(decimal_part_components, output, precision, decimal_part_width, flags, bu
 3092              		.loc 1 943 23 is_stmt 0 view .LVU807
 3093 01b2 D4F80CA0 		ldr	r10, [r4, #12]
 3094              	.LVL308:
 944:flight/libraries/printf/printf.c **** 
 3095              		.loc 1 944 3 is_stmt 1 view .LVU808
 3096 01b6 249A     		ldr	r2, [sp, #144]
 3097 01b8 0792     		str	r2, [sp, #28]
 3098 01ba 239A     		ldr	r2, [sp, #140]
 3099 01bc 0692     		str	r2, [sp, #24]
 3100 01be 0596     		str	r6, [sp, #20]
 3101 01c0 0493     		str	r3, [sp, #16]
 3102 01c2 0397     		str	r7, [sp, #12]
 3103 01c4 0294     		str	r4, [sp, #8]
 3104 01c6 0EAB     		add	r3, sp, #56
 3105              	.LVL309:
 944:flight/libraries/printf/printf.c **** 
 3106              		.loc 1 944 3 is_stmt 0 view .LVU809
 3107 01c8 93E80300 		ldm	r3, {r0, r1}
 3108 01cc 8DE80300 		stm	sp, {r0, r1}
 3109 01d0 0AAB     		add	r3, sp, #40
 3110 01d2 0FCB     		ldm	r3, {r0, r1, r2, r3}
 3111 01d4 FFF7FEFF 		bl	print_broken_up_decimal
 3112              	.LVL310:
 946:flight/libraries/printf/printf.c ****     putchar_via_gadget(output, (flags & FLAGS_UPPERCASE) ? 'E' : 'e');
 3113              		.loc 1 946 3 is_stmt 1 view .LVU810
 946:flight/libraries/printf/printf.c ****     putchar_via_gadget(output, (flags & FLAGS_UPPERCASE) ? 'E' : 'e');
 3114              		.loc 1 946 6 is_stmt 0 view .LVU811
 3115 01d8 B8F1000F 		cmp	r8, #0
 3116 01dc 22D1     		bne	.L179
 947:flight/libraries/printf/printf.c ****     print_integer(output,
 3117              		.loc 1 947 5 is_stmt 1 view .LVU812
 3118 01de 16F0200F 		tst	r6, #32
 3119 01e2 2BD0     		beq	.L224
 3120 01e4 4520     		movs	r0, #69
 3121              	.L202:
 3122              	.LVL311:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 83


 3123              	.LBB112:
 3124              	.LBI112:
 321:flight/libraries/printf/printf.c **** {
 3125              		.loc 1 321 20 discriminator 4 view .LVU813
 3126              	.LBB113:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 3127              		.loc 1 323 3 discriminator 4 view .LVU814
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 3128              		.loc 1 323 35 is_stmt 0 discriminator 4 view .LVU815
 3129 01e6 E368     		ldr	r3, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 3130              		.loc 1 323 40 discriminator 4 view .LVU816
 3131 01e8 5A1C     		adds	r2, r3, #1
 3132 01ea E260     		str	r2, [r4, #12]
 3133              	.LVL312:
 326:flight/libraries/printf/printf.c ****     return;
 3134              		.loc 1 326 3 is_stmt 1 discriminator 4 view .LVU817
 326:flight/libraries/printf/printf.c ****     return;
 3135              		.loc 1 326 26 is_stmt 0 discriminator 4 view .LVU818
 3136 01ec 2269     		ldr	r2, [r4, #16]
 326:flight/libraries/printf/printf.c ****     return;
 3137              		.loc 1 326 6 discriminator 4 view .LVU819
 3138 01ee 9342     		cmp	r3, r2
 3139 01f0 03D2     		bcs	.L203
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 3140              		.loc 1 329 3 is_stmt 1 view .LVU820
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 3141              		.loc 1 329 13 is_stmt 0 view .LVU821
 3142 01f2 2268     		ldr	r2, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 3143              		.loc 1 329 6 view .LVU822
 3144 01f4 22B3     		cbz	r2, .L204
 331:flight/libraries/printf/printf.c ****   }
 3145              		.loc 1 331 5 is_stmt 1 view .LVU823
 3146 01f6 6168     		ldr	r1, [r4, #4]
 3147 01f8 9047     		blx	r2
 3148              	.LVL313:
 3149              	.L203:
 331:flight/libraries/printf/printf.c ****   }
 3150              		.loc 1 331 5 is_stmt 0 view .LVU824
 3151              	.LBE113:
 3152              	.LBE112:
 948:flight/libraries/printf/printf.c ****                   ABS_FOR_PRINTING(floored_exp10),
 3153              		.loc 1 948 5 is_stmt 1 view .LVU825
 3154 01fa 002D     		cmp	r5, #0
 3155 01fc 23DD     		ble	.L205
 948:flight/libraries/printf/printf.c ****                   ABS_FOR_PRINTING(floored_exp10),
 3156              		.loc 1 948 5 is_stmt 0 discriminator 1 view .LVU826
 3157 01fe 2A46     		mov	r2, r5
 3158 0200 EB17     		asrs	r3, r5, #31
 3159              	.L206:
 948:flight/libraries/printf/printf.c ****                   ABS_FOR_PRINTING(floored_exp10),
 3160              		.loc 1 948 5 discriminator 4 view .LVU827
 3161 0202 0521     		movs	r1, #5
 3162 0204 0491     		str	r1, [sp, #16]
 3163 0206 09F1FF31 		add	r1, r9, #-1
 3164 020a 0391     		str	r1, [sp, #12]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 84


 3165 020c 0021     		movs	r1, #0
 3166 020e 0291     		str	r1, [sp, #8]
 3167 0210 0A21     		movs	r1, #10
 3168 0212 0191     		str	r1, [sp, #4]
 3169 0214 ED0F     		lsrs	r5, r5, #31
 3170              	.LVL314:
 948:flight/libraries/printf/printf.c ****                   ABS_FOR_PRINTING(floored_exp10),
 3171              		.loc 1 948 5 discriminator 4 view .LVU828
 3172 0216 0095     		str	r5, [sp]
 3173 0218 2046     		mov	r0, r4
 3174 021a FFF7FEFF 		bl	print_integer
 3175              	.LVL315:
 952:flight/libraries/printf/printf.c ****       // We need to right-pad with spaces to meet the width requirement
 3176              		.loc 1 952 5 is_stmt 1 discriminator 4 view .LVU829
 952:flight/libraries/printf/printf.c ****       // We need to right-pad with spaces to meet the width requirement
 3177              		.loc 1 952 8 is_stmt 0 discriminator 4 view .LVU830
 3178 021e BBF1000F 		cmp	fp, #0
 3179 0222 18D1     		bne	.L207
 3180              	.L179:
 959:flight/libraries/printf/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
 3181              		.loc 1 959 1 view .LVU831
 3182 0224 15B0     		add	sp, sp, #84
 3183              	.LCFI52:
 3184              		.cfi_remember_state
 3185              		.cfi_def_cfa_offset 44
 3186              		@ sp needed
 3187 0226 BDEC028B 		vldm	sp!, {d8}
 3188              	.LCFI53:
 3189              		.cfi_restore 80
 3190              		.cfi_restore 81
 3191              		.cfi_def_cfa_offset 36
 3192 022a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3193              	.LVL316:
 3194              	.L221:
 3195              	.LCFI54:
 3196              		.cfi_restore_state
 926:flight/libraries/printf/printf.c **** 
 3197              		.loc 1 926 113 view .LVU832
 3198 022e 4FF00509 		mov	r9, #5
 3199 0232 B3E7     		b	.L198
 3200              	.LVL317:
 3201              	.L222:
 932:flight/libraries/printf/printf.c ****       // We're padding on the left; so the width constraint is the decimal part's
 3202              		.loc 1 932 10 view .LVU833
 3203 0234 0023     		movs	r3, #0
 3204 0236 BCE7     		b	.L200
 3205              	.L223:
 938:flight/libraries/printf/printf.c ****         // No; we just give up on any restriction on the decimal part and use as many
 3206              		.loc 1 938 34 view .LVU834
 3207 0238 0023     		movs	r3, #0
 3208 023a BAE7     		b	.L200
 3209              	.LVL318:
 3210              	.L224:
 947:flight/libraries/printf/printf.c ****     print_integer(output,
 3211              		.loc 1 947 5 view .LVU835
 3212 023c 6520     		movs	r0, #101
 3213 023e D2E7     		b	.L202
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 85


 3214              	.LVL319:
 3215              	.L204:
 3216              	.LBB115:
 3217              	.LBB114:
 336:flight/libraries/printf/printf.c ****   }
 3218              		.loc 1 336 5 is_stmt 1 view .LVU836
 336:flight/libraries/printf/printf.c ****   }
 3219              		.loc 1 336 11 is_stmt 0 view .LVU837
 3220 0240 A268     		ldr	r2, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 3221              		.loc 1 336 31 view .LVU838
 3222 0242 D054     		strb	r0, [r2, r3]
 3223 0244 D9E7     		b	.L203
 3224              	.LVL320:
 3225              	.L205:
 336:flight/libraries/printf/printf.c ****   }
 3226              		.loc 1 336 31 view .LVU839
 3227              	.LBE114:
 3228              	.LBE115:
 949:flight/libraries/printf/printf.c ****                   floored_exp10 < 0, 10, 0, exp10_part_width - 1,
 3229              		.loc 1 949 19 discriminator 2 view .LVU840
 3230 0246 EB17     		asrs	r3, r5, #31
 3231 0248 6A42     		negs	r2, r5
 948:flight/libraries/printf/printf.c ****                   ABS_FOR_PRINTING(floored_exp10),
 3232              		.loc 1 948 5 discriminator 2 view .LVU841
 3233 024a 63EB4303 		sbc	r3, r3, r3, lsl #1
 3234 024e D8E7     		b	.L206
 3235              	.LVL321:
 3236              	.L209:
 3237              	.LBB116:
 3238              	.LBB117:
 336:flight/libraries/printf/printf.c ****   }
 3239              		.loc 1 336 5 is_stmt 1 view .LVU842
 336:flight/libraries/printf/printf.c ****   }
 3240              		.loc 1 336 11 is_stmt 0 view .LVU843
 3241 0250 A268     		ldr	r2, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 3242              		.loc 1 336 31 view .LVU844
 3243 0252 2021     		movs	r1, #32
 3244 0254 D154     		strb	r1, [r2, r3]
 3245              	.LVL322:
 3246              	.L207:
 336:flight/libraries/printf/printf.c ****   }
 3247              		.loc 1 336 31 view .LVU845
 3248              	.LBE117:
 3249              	.LBE116:
 954:flight/libraries/printf/printf.c ****         putchar_via_gadget(output, ' ');
 3250              		.loc 1 954 13 is_stmt 1 view .LVU846
 954:flight/libraries/printf/printf.c ****         putchar_via_gadget(output, ' ');
 3251              		.loc 1 954 20 is_stmt 0 view .LVU847
 3252 0256 E368     		ldr	r3, [r4, #12]
 954:flight/libraries/printf/printf.c ****         putchar_via_gadget(output, ' ');
 3253              		.loc 1 954 26 view .LVU848
 3254 0258 A3EB0A03 		sub	r3, r3, r10
 954:flight/libraries/printf/printf.c ****         putchar_via_gadget(output, ' ');
 3255              		.loc 1 954 13 view .LVU849
 3256 025c 219A     		ldr	r2, [sp, #132]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 86


 3257 025e 9342     		cmp	r3, r2
 3258 0260 E0D2     		bcs	.L179
 955:flight/libraries/printf/printf.c ****       }
 3259              		.loc 1 955 9 is_stmt 1 view .LVU850
 3260              	.LVL323:
 3261              	.LBB119:
 3262              	.LBI116:
 321:flight/libraries/printf/printf.c **** {
 3263              		.loc 1 321 20 view .LVU851
 3264              	.LBB118:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 3265              		.loc 1 323 3 view .LVU852
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 3266              		.loc 1 323 35 is_stmt 0 view .LVU853
 3267 0262 E368     		ldr	r3, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 3268              		.loc 1 323 40 view .LVU854
 3269 0264 5A1C     		adds	r2, r3, #1
 3270 0266 E260     		str	r2, [r4, #12]
 3271              	.LVL324:
 326:flight/libraries/printf/printf.c ****     return;
 3272              		.loc 1 326 3 is_stmt 1 view .LVU855
 326:flight/libraries/printf/printf.c ****     return;
 3273              		.loc 1 326 26 is_stmt 0 view .LVU856
 3274 0268 2269     		ldr	r2, [r4, #16]
 326:flight/libraries/printf/printf.c ****     return;
 3275              		.loc 1 326 6 view .LVU857
 3276 026a 9342     		cmp	r3, r2
 3277 026c F3D2     		bcs	.L207
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 3278              		.loc 1 329 3 is_stmt 1 view .LVU858
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 3279              		.loc 1 329 13 is_stmt 0 view .LVU859
 3280 026e 2268     		ldr	r2, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 3281              		.loc 1 329 6 view .LVU860
 3282 0270 002A     		cmp	r2, #0
 3283 0272 EDD0     		beq	.L209
 331:flight/libraries/printf/printf.c ****   }
 3284              		.loc 1 331 5 is_stmt 1 view .LVU861
 3285 0274 6168     		ldr	r1, [r4, #4]
 3286 0276 2020     		movs	r0, #32
 3287 0278 9047     		blx	r2
 3288              	.LVL325:
 331:flight/libraries/printf/printf.c ****   }
 3289              		.loc 1 331 5 is_stmt 0 view .LVU862
 3290 027a ECE7     		b	.L207
 3291              	.L231:
 3292              		.align	2
 3293              	.L230:
 3294 027c 00002440 		.word	1076101120
 3295 0280 00000000 		.word	.LANCHOR0
 3296              	.LBE118:
 3297              	.LBE119:
 3298              		.cfi_endproc
 3299              	.LFE26:
 3301              		.section	.rodata.print_floating_point.str1.4,"aMS",%progbits,1
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 87


 3302              		.align	2
 3303              	.LC0:
 3304 0000 666E6900 		.ascii	"fni\000"
 3305              		.align	2
 3306              	.LC1:
 3307 0004 666E692B 		.ascii	"fni+\000"
 3307      00
 3308 0009 000000   		.align	2
 3309              	.LC2:
 3310 000c 6E616E00 		.ascii	"nan\000"
 3311              		.align	2
 3312              	.LC3:
 3313 0010 666E692D 		.ascii	"fni-\000"
 3313      00
 3314              		.section	.text.print_floating_point,"ax",%progbits
 3315              		.align	1
 3316              		.syntax unified
 3317              		.thumb
 3318              		.thumb_func
 3320              	print_floating_point:
 3321              	.LVL326:
 3322              	.LFB27:
 963:flight/libraries/printf/printf.c ****   char buf[PRINTF_DECIMAL_BUFFER_SIZE];
 3323              		.loc 1 963 1 is_stmt 1 view -0
 3324              		.cfi_startproc
 3325              		@ args = 16, pretend = 0, frame = 32
 3326              		@ frame_needed = 0, uses_anonymous_args = 0
 963:flight/libraries/printf/printf.c ****   char buf[PRINTF_DECIMAL_BUFFER_SIZE];
 3327              		.loc 1 963 1 is_stmt 0 view .LVU864
 3328 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3329              	.LCFI55:
 3330              		.cfi_def_cfa_offset 28
 3331              		.cfi_offset 4, -28
 3332              		.cfi_offset 5, -24
 3333              		.cfi_offset 6, -20
 3334              		.cfi_offset 7, -16
 3335              		.cfi_offset 8, -12
 3336              		.cfi_offset 9, -8
 3337              		.cfi_offset 14, -4
 3338 0004 8FB0     		sub	sp, sp, #60
 3339              	.LCFI56:
 3340              		.cfi_def_cfa_offset 88
 3341 0006 0546     		mov	r5, r0
 3342 0008 1646     		mov	r6, r2
 3343 000a 1F46     		mov	r7, r3
 3344 000c 169C     		ldr	r4, [sp, #88]
 3345 000e DDF86080 		ldr	r8, [sp, #96]
 3346 0012 9DF86490 		ldrb	r9, [sp, #100]	@ zero_extendqisi2
 964:flight/libraries/printf/printf.c ****   printf_size_t len = 0U;
 3347              		.loc 1 964 3 is_stmt 1 view .LVU865
 965:flight/libraries/printf/printf.c **** 
 3348              		.loc 1 965 3 view .LVU866
 3349              	.LVL327:
 968:flight/libraries/printf/printf.c ****     out_rev_(output, "nan", 3, width, flags);
 3350              		.loc 1 968 3 view .LVU867
 968:flight/libraries/printf/printf.c ****     out_rev_(output, "nan", 3, width, flags);
 3351              		.loc 1 968 6 is_stmt 0 view .LVU868
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 88


 3352 0016 1046     		mov	r0, r2
 3353              	.LVL328:
 968:flight/libraries/printf/printf.c ****     out_rev_(output, "nan", 3, width, flags);
 3354              		.loc 1 968 6 view .LVU869
 3355 0018 1946     		mov	r1, r3
 3356 001a FFF7FEFF 		bl	__aeabi_dcmpeq
 3357              	.LVL329:
 968:flight/libraries/printf/printf.c ****     out_rev_(output, "nan", 3, width, flags);
 3358              		.loc 1 968 6 view .LVU870
 3359 001e 0028     		cmp	r0, #0
 3360 0020 38D0     		beq	.L263
 972:flight/libraries/printf/printf.c ****     out_rev_(output, "fni-", 4, width, flags);
 3361              		.loc 1 972 3 is_stmt 1 view .LVU871
 972:flight/libraries/printf/printf.c ****     out_rev_(output, "fni-", 4, width, flags);
 3362              		.loc 1 972 6 is_stmt 0 view .LVU872
 3363 0022 4FF0FF32 		mov	r2, #-1
 3364 0026 6FF48013 		mvn	r3, #1048576
 3365 002a 3046     		mov	r0, r6
 3366 002c 3946     		mov	r1, r7
 3367 002e FFF7FEFF 		bl	__aeabi_dcmplt
 3368              	.LVL330:
 3369 0032 0028     		cmp	r0, #0
 3370 0034 37D1     		bne	.L264
 976:flight/libraries/printf/printf.c ****     out_rev_(output, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, 
 3371              		.loc 1 976 3 is_stmt 1 view .LVU873
 976:flight/libraries/printf/printf.c ****     out_rev_(output, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, 
 3372              		.loc 1 976 6 is_stmt 0 view .LVU874
 3373 0036 4FF0FF32 		mov	r2, #-1
 3374 003a 454B     		ldr	r3, .L266+16
 3375 003c 3046     		mov	r0, r6
 3376 003e 3946     		mov	r1, r7
 3377 0040 FFF7FEFF 		bl	__aeabi_dcmpgt
 3378              	.LVL331:
 3379 0044 0028     		cmp	r0, #0
 3380 0046 37D1     		bne	.L265
 981:flight/libraries/printf/printf.c ****       ((value > PRINTF_FLOAT_NOTATION_THRESHOLD) || (value < -PRINTF_FLOAT_NOTATION_THRESHOLD))) {
 3381              		.loc 1 981 3 is_stmt 1 view .LVU875
 981:flight/libraries/printf/printf.c ****       ((value > PRINTF_FLOAT_NOTATION_THRESHOLD) || (value < -PRINTF_FLOAT_NOTATION_THRESHOLD))) {
 3382              		.loc 1 981 6 is_stmt 0 view .LVU876
 3383 0048 B9F1000F 		cmp	r9, #0
 3384 004c 10D1     		bne	.L242
 981:flight/libraries/printf/printf.c ****       ((value > PRINTF_FLOAT_NOTATION_THRESHOLD) || (value < -PRINTF_FLOAT_NOTATION_THRESHOLD))) {
 3385              		.loc 1 981 27 discriminator 1 view .LVU877
 3386 004e 3CA3     		adr	r3, .L266
 3387 0050 D3E90023 		ldrd	r2, [r3]
 3388 0054 3046     		mov	r0, r6
 3389 0056 3946     		mov	r1, r7
 3390 0058 FFF7FEFF 		bl	__aeabi_dcmpgt
 3391              	.LVL332:
 3392 005c 0028     		cmp	r0, #0
 3393 005e 3ED1     		bne	.L243
 982:flight/libraries/printf/printf.c ****     // The required behavior of standard printf is to print _every_ integral-part digit -- which co
 3394              		.loc 1 982 50 view .LVU878
 3395 0060 39A3     		adr	r3, .L266+8
 3396 0062 D3E90023 		ldrd	r2, [r3]
 3397 0066 3046     		mov	r0, r6
 3398 0068 3946     		mov	r1, r7
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 89


 3399 006a FFF7FEFF 		bl	__aeabi_dcmplt
 3400              	.LVL333:
 3401 006e B0BB     		cbnz	r0, .L243
 3402              	.L242:
 993:flight/libraries/printf/printf.c ****     precision = PRINTF_DEFAULT_FLOAT_PRECISION;
 3403              		.loc 1 993 3 is_stmt 1 view .LVU879
 993:flight/libraries/printf/printf.c ****     precision = PRINTF_DEFAULT_FLOAT_PRECISION;
 3404              		.loc 1 993 6 is_stmt 0 view .LVU880
 3405 0070 18F4006F 		tst	r8, #2048
 3406 0074 42D0     		beq	.L255
 3407              	.L245:
 3408              	.LVL334:
 994:flight/libraries/printf/printf.c ****   }
 3409              		.loc 1 994 15 view .LVU881
 3410 0076 0023     		movs	r3, #0
 3411              	.LVL335:
 3412              	.L247:
 998:flight/libraries/printf/printf.c ****     buf[len++] = '0'; // This respects the precision in terms of result length only
 3413              		.loc 1 998 9 is_stmt 1 view .LVU882
 3414 0078 1F2B     		cmp	r3, #31
 3415 007a 41D8     		bhi	.L248
 998:flight/libraries/printf/printf.c ****     buf[len++] = '0'; // This respects the precision in terms of result length only
 3416              		.loc 1 998 45 is_stmt 0 discriminator 1 view .LVU883
 3417 007c 112C     		cmp	r4, #17
 3418 007e 3FD9     		bls	.L248
 999:flight/libraries/printf/printf.c ****     precision--;
 3419              		.loc 1 999 5 is_stmt 1 view .LVU884
 3420              	.LVL336:
 999:flight/libraries/printf/printf.c ****     precision--;
 3421              		.loc 1 999 16 is_stmt 0 view .LVU885
 3422 0080 03F13802 		add	r2, r3, #56
 3423 0084 0DEB0201 		add	r1, sp, r2
 3424 0088 3022     		movs	r2, #48
 3425 008a 01F8202C 		strb	r2, [r1, #-32]
1000:flight/libraries/printf/printf.c ****   }
 3426              		.loc 1 1000 5 is_stmt 1 view .LVU886
1000:flight/libraries/printf/printf.c ****   }
 3427              		.loc 1 1000 14 is_stmt 0 view .LVU887
 3428 008e 013C     		subs	r4, r4, #1
 3429              	.LVL337:
 999:flight/libraries/printf/printf.c ****     precision--;
 3430              		.loc 1 999 12 view .LVU888
 3431 0090 0133     		adds	r3, r3, #1
 3432              	.LVL338:
 999:flight/libraries/printf/printf.c ****     precision--;
 3433              		.loc 1 999 12 view .LVU889
 3434 0092 F1E7     		b	.L247
 3435              	.LVL339:
 3436              	.L263:
 969:flight/libraries/printf/printf.c ****     return;
 3437              		.loc 1 969 5 is_stmt 1 view .LVU890
 3438 0094 CDF80080 		str	r8, [sp]
 3439 0098 179B     		ldr	r3, [sp, #92]
 3440 009a 0322     		movs	r2, #3
 3441 009c 2D49     		ldr	r1, .L266+20
 3442 009e 2846     		mov	r0, r5
 3443 00a0 FFF7FEFF 		bl	out_rev_
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 90


 3444              	.LVL340:
 970:flight/libraries/printf/printf.c ****   }
 3445              		.loc 1 970 5 view .LVU891
 3446 00a4 14E0     		b	.L232
 3447              	.L264:
 973:flight/libraries/printf/printf.c ****     return;
 3448              		.loc 1 973 5 view .LVU892
 3449 00a6 CDF80080 		str	r8, [sp]
 3450 00aa 179B     		ldr	r3, [sp, #92]
 3451 00ac 0422     		movs	r2, #4
 3452 00ae 2A49     		ldr	r1, .L266+24
 3453 00b0 2846     		mov	r0, r5
 3454 00b2 FFF7FEFF 		bl	out_rev_
 3455              	.LVL341:
 974:flight/libraries/printf/printf.c ****   }
 3456              		.loc 1 974 5 view .LVU893
 3457 00b6 0BE0     		b	.L232
 3458              	.L265:
 977:flight/libraries/printf/printf.c ****     return;
 3459              		.loc 1 977 5 view .LVU894
 3460 00b8 18F00403 		ands	r3, r8, #4
 3461 00bc 0BD0     		beq	.L253
 3462 00be 2749     		ldr	r1, .L266+28
 3463              	.L240:
 977:flight/libraries/printf/printf.c ****     return;
 3464              		.loc 1 977 5 is_stmt 0 discriminator 4 view .LVU895
 3465 00c0 5BB1     		cbz	r3, .L254
 977:flight/libraries/printf/printf.c ****     return;
 3466              		.loc 1 977 5 view .LVU896
 3467 00c2 0422     		movs	r2, #4
 3468              	.L241:
 977:flight/libraries/printf/printf.c ****     return;
 3469              		.loc 1 977 5 discriminator 8 view .LVU897
 3470 00c4 CDF80080 		str	r8, [sp]
 3471 00c8 179B     		ldr	r3, [sp, #92]
 3472 00ca 2846     		mov	r0, r5
 3473 00cc FFF7FEFF 		bl	out_rev_
 3474              	.LVL342:
 978:flight/libraries/printf/printf.c ****   }
 3475              		.loc 1 978 5 is_stmt 1 discriminator 8 view .LVU898
 3476              	.L232:
1009:flight/libraries/printf/printf.c **** 
 3477              		.loc 1 1009 1 is_stmt 0 view .LVU899
 3478 00d0 0FB0     		add	sp, sp, #60
 3479              	.LCFI57:
 3480              		.cfi_remember_state
 3481              		.cfi_def_cfa_offset 28
 3482              		@ sp needed
 3483 00d2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3484              	.LVL343:
 3485              	.L253:
 3486              	.LCFI58:
 3487              		.cfi_restore_state
 977:flight/libraries/printf/printf.c ****     return;
 3488              		.loc 1 977 5 view .LVU900
 3489 00d6 2249     		ldr	r1, .L266+32
 3490 00d8 F2E7     		b	.L240
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 91


 3491              	.L254:
 3492 00da 0322     		movs	r2, #3
 3493 00dc F2E7     		b	.L241
 3494              	.L243:
 987:flight/libraries/printf/printf.c **** #endif
 3495              		.loc 1 987 5 is_stmt 1 view .LVU901
 3496 00de 0023     		movs	r3, #0
 3497 00e0 0493     		str	r3, [sp, #16]
 3498 00e2 06AB     		add	r3, sp, #24
 3499 00e4 0393     		str	r3, [sp, #12]
 3500 00e6 CDF80880 		str	r8, [sp, #8]
 3501 00ea 179B     		ldr	r3, [sp, #92]
 3502 00ec 0193     		str	r3, [sp, #4]
 3503 00ee 0094     		str	r4, [sp]
 3504 00f0 3246     		mov	r2, r6
 3505 00f2 3B46     		mov	r3, r7
 3506 00f4 2846     		mov	r0, r5
 3507 00f6 FFF7FEFF 		bl	print_exponential_number
 3508              	.LVL344:
 989:flight/libraries/printf/printf.c ****   }
 3509              		.loc 1 989 5 view .LVU902
 3510 00fa E9E7     		b	.L232
 3511              	.L255:
 994:flight/libraries/printf/printf.c ****   }
 3512              		.loc 1 994 15 is_stmt 0 view .LVU903
 3513 00fc 0624     		movs	r4, #6
 3514 00fe BAE7     		b	.L245
 3515              	.LVL345:
 3516              	.L248:
1004:flight/libraries/printf/printf.c ****     print_exponential_number(output, value, precision, width, flags, buf, len);
 3517              		.loc 1 1004 3 is_stmt 1 view .LVU904
1004:flight/libraries/printf/printf.c ****     print_exponential_number(output, value, precision, width, flags, buf, len);
 3518              		.loc 1 1004 6 is_stmt 0 view .LVU905
 3519 0100 B9F1000F 		cmp	r9, #0
 3520 0104 0DD0     		beq	.L250
1005:flight/libraries/printf/printf.c ****   else
 3521              		.loc 1 1005 5 is_stmt 1 view .LVU906
 3522 0106 0493     		str	r3, [sp, #16]
 3523 0108 06AB     		add	r3, sp, #24
 3524              	.LVL346:
1005:flight/libraries/printf/printf.c ****   else
 3525              		.loc 1 1005 5 is_stmt 0 view .LVU907
 3526 010a 0393     		str	r3, [sp, #12]
 3527 010c CDF80880 		str	r8, [sp, #8]
 3528 0110 179B     		ldr	r3, [sp, #92]
 3529 0112 0193     		str	r3, [sp, #4]
 3530 0114 0094     		str	r4, [sp]
 3531 0116 3246     		mov	r2, r6
 3532 0118 3B46     		mov	r3, r7
 3533 011a 2846     		mov	r0, r5
 3534 011c FFF7FEFF 		bl	print_exponential_number
 3535              	.LVL347:
1005:flight/libraries/printf/printf.c ****   else
 3536              		.loc 1 1005 5 view .LVU908
 3537 0120 D6E7     		b	.L232
 3538              	.LVL348:
 3539              	.L250:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 92


1008:flight/libraries/printf/printf.c **** }
 3540              		.loc 1 1008 5 is_stmt 1 view .LVU909
 3541 0122 0493     		str	r3, [sp, #16]
 3542 0124 06AB     		add	r3, sp, #24
 3543              	.LVL349:
1008:flight/libraries/printf/printf.c **** }
 3544              		.loc 1 1008 5 is_stmt 0 view .LVU910
 3545 0126 0393     		str	r3, [sp, #12]
 3546 0128 CDF80880 		str	r8, [sp, #8]
 3547 012c 179B     		ldr	r3, [sp, #92]
 3548 012e 0193     		str	r3, [sp, #4]
 3549 0130 0094     		str	r4, [sp]
 3550 0132 3246     		mov	r2, r6
 3551 0134 3B46     		mov	r3, r7
 3552 0136 2846     		mov	r0, r5
 3553 0138 FFF7FEFF 		bl	print_decimal_number
 3554              	.LVL350:
1008:flight/libraries/printf/printf.c **** }
 3555              		.loc 1 1008 5 view .LVU911
 3556 013c C8E7     		b	.L232
 3557              	.L267:
 3558 013e 00BF     		.align	3
 3559              	.L266:
 3560 0140 00000000 		.word	0
 3561 0144 65CDCD41 		.word	1104006501
 3562 0148 00000000 		.word	0
 3563 014c 65CDCDC1 		.word	-1043477147
 3564 0150 FFFFEF7F 		.word	2146435071
 3565 0154 0C000000 		.word	.LC2
 3566 0158 10000000 		.word	.LC3
 3567 015c 04000000 		.word	.LC1
 3568 0160 00000000 		.word	.LC0
 3569              		.cfi_endproc
 3570              	.LFE27:
 3572              		.section	.rodata._vsnprintf.str1.4,"aMS",%progbits,1
 3573              		.align	2
 3574              	.LC4:
 3575 0000 296C6C75 		.ascii	")llun(\000"
 3575      6E2800
 3576 0007 00       		.align	2
 3577              	.LC5:
 3578 0008 296C696E 		.ascii	")lin(\000"
 3578      2800
 3579              		.section	.text._vsnprintf,"ax",%progbits
 3580              		.align	1
 3581              		.syntax unified
 3582              		.thumb
 3583              		.thumb_func
 3585              	_vsnprintf:
 3586              	.LVL351:
 3587              	.LFB29:
1029:flight/libraries/printf/printf.c **** 
1030:flight/libraries/printf/printf.c **** // internal vsnprintf - used for implementing _all library functions
1031:flight/libraries/printf/printf.c **** // Note: We don't like the C standard's parameter names, so using more informative parameter names
1032:flight/libraries/printf/printf.c **** // here instead.
1033:flight/libraries/printf/printf.c **** static int _vsnprintf(output_gadget_t* output, const char* format, va_list args)
1034:flight/libraries/printf/printf.c **** {
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 93


 3588              		.loc 1 1034 1 is_stmt 1 view -0
 3589              		.cfi_startproc
 3590              		@ args = 0, pretend = 0, frame = 8
 3591              		@ frame_needed = 0, uses_anonymous_args = 0
 3592              		.loc 1 1034 1 is_stmt 0 view .LVU913
 3593 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3594              	.LCFI59:
 3595              		.cfi_def_cfa_offset 36
 3596              		.cfi_offset 4, -36
 3597              		.cfi_offset 5, -32
 3598              		.cfi_offset 6, -28
 3599              		.cfi_offset 7, -24
 3600              		.cfi_offset 8, -20
 3601              		.cfi_offset 9, -16
 3602              		.cfi_offset 10, -12
 3603              		.cfi_offset 11, -8
 3604              		.cfi_offset 14, -4
 3605 0004 89B0     		sub	sp, sp, #36
 3606              	.LCFI60:
 3607              		.cfi_def_cfa_offset 72
 3608 0006 0446     		mov	r4, r0
 3609 0008 0791     		str	r1, [sp, #28]
 3610 000a 0692     		str	r2, [sp, #24]
1035:flight/libraries/printf/printf.c ****   // Note: The library only calls _vsnprintf() with output->pos being 0. However, it is
1036:flight/libraries/printf/printf.c ****   // possible to call this function with a non-zero pos value for some "remedial printing".
1037:flight/libraries/printf/printf.c **** 
1038:flight/libraries/printf/printf.c ****   while (*format)
 3611              		.loc 1 1038 3 is_stmt 1 view .LVU914
 3612              		.loc 1 1038 9 is_stmt 0 view .LVU915
 3613 000c 0DE0     		b	.L269
 3614              	.LVL352:
 3615              	.L383:
 3616              	.LBB158:
1039:flight/libraries/printf/printf.c ****   {
1040:flight/libraries/printf/printf.c ****     // format specifier?  %[flags][width][.precision][length]
1041:flight/libraries/printf/printf.c ****     if (*format != '%') {
1042:flight/libraries/printf/printf.c ****       // no
1043:flight/libraries/printf/printf.c ****       putchar_via_gadget(output, *format);
 3617              		.loc 1 1043 7 is_stmt 1 view .LVU916
 3618              	.LBB159:
 3619              	.LBI159:
 321:flight/libraries/printf/printf.c **** {
 3620              		.loc 1 321 20 view .LVU917
 3621              	.LBB160:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 3622              		.loc 1 323 3 view .LVU918
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 3623              		.loc 1 323 35 is_stmt 0 view .LVU919
 3624 000e E368     		ldr	r3, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 3625              		.loc 1 323 40 view .LVU920
 3626 0010 5A1C     		adds	r2, r3, #1
 3627 0012 E260     		str	r2, [r4, #12]
 3628              	.LVL353:
 326:flight/libraries/printf/printf.c ****     return;
 3629              		.loc 1 326 3 is_stmt 1 view .LVU921
 326:flight/libraries/printf/printf.c ****     return;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 94


 3630              		.loc 1 326 26 is_stmt 0 view .LVU922
 3631 0014 2269     		ldr	r2, [r4, #16]
 326:flight/libraries/printf/printf.c ****     return;
 3632              		.loc 1 326 6 view .LVU923
 3633 0016 9342     		cmp	r3, r2
 3634 0018 04D2     		bcs	.L271
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 3635              		.loc 1 329 3 is_stmt 1 view .LVU924
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 3636              		.loc 1 329 13 is_stmt 0 view .LVU925
 3637 001a 2268     		ldr	r2, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 3638              		.loc 1 329 6 view .LVU926
 3639 001c 002A     		cmp	r2, #0
 3640 001e 31D0     		beq	.L272
 331:flight/libraries/printf/printf.c ****   }
 3641              		.loc 1 331 5 is_stmt 1 view .LVU927
 3642 0020 6168     		ldr	r1, [r4, #4]
 3643 0022 9047     		blx	r2
 3644              	.LVL354:
 3645              	.L271:
 331:flight/libraries/printf/printf.c ****   }
 3646              		.loc 1 331 5 is_stmt 0 view .LVU928
 3647              	.LBE160:
 3648              	.LBE159:
1044:flight/libraries/printf/printf.c ****       format++;
 3649              		.loc 1 1044 7 is_stmt 1 view .LVU929
 3650              		.loc 1 1044 13 is_stmt 0 view .LVU930
 3651 0024 079B     		ldr	r3, [sp, #28]
 3652 0026 0133     		adds	r3, r3, #1
 3653 0028 0793     		str	r3, [sp, #28]
1045:flight/libraries/printf/printf.c ****       continue;
 3654              		.loc 1 1045 7 is_stmt 1 view .LVU931
 3655              	.L269:
 3656              		.loc 1 1045 7 is_stmt 0 view .LVU932
 3657              	.LBE158:
1038:flight/libraries/printf/printf.c ****   {
 3658              		.loc 1 1038 9 is_stmt 1 view .LVU933
1038:flight/libraries/printf/printf.c ****   {
 3659              		.loc 1 1038 10 is_stmt 0 view .LVU934
 3660 002a 079B     		ldr	r3, [sp, #28]
 3661 002c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1038:flight/libraries/printf/printf.c ****   {
 3662              		.loc 1 1038 9 view .LVU935
 3663 002e 0028     		cmp	r0, #0
 3664 0030 00F01E83 		beq	.L382
 3665              	.LBB217:
1041:flight/libraries/printf/printf.c ****       // no
 3666              		.loc 1 1041 5 is_stmt 1 view .LVU936
1041:flight/libraries/printf/printf.c ****       // no
 3667              		.loc 1 1041 8 is_stmt 0 view .LVU937
 3668 0034 2528     		cmp	r0, #37
 3669 0036 EAD1     		bne	.L383
1046:flight/libraries/printf/printf.c ****     }
1047:flight/libraries/printf/printf.c ****     else {
1048:flight/libraries/printf/printf.c ****       // yes, evaluate it
1049:flight/libraries/printf/printf.c ****       format++;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 95


 3670              		.loc 1 1049 7 is_stmt 1 view .LVU938
 3671              		.loc 1 1049 13 is_stmt 0 view .LVU939
 3672 0038 0133     		adds	r3, r3, #1
 3673 003a 0793     		str	r3, [sp, #28]
1050:flight/libraries/printf/printf.c ****     }
1051:flight/libraries/printf/printf.c **** 
1052:flight/libraries/printf/printf.c ****     printf_flags_t flags = parse_flags(&format);
 3674              		.loc 1 1052 5 is_stmt 1 view .LVU940
 3675              		.loc 1 1052 28 is_stmt 0 view .LVU941
 3676 003c 07A8     		add	r0, sp, #28
 3677 003e FFF7FEFF 		bl	parse_flags
 3678              	.LVL355:
 3679 0042 0546     		mov	r5, r0
 3680              	.LVL356:
1053:flight/libraries/printf/printf.c **** 
1054:flight/libraries/printf/printf.c ****     // evaluate width field
1055:flight/libraries/printf/printf.c ****     printf_size_t width = 0U;
 3681              		.loc 1 1055 5 is_stmt 1 view .LVU942
1056:flight/libraries/printf/printf.c ****     if (is_digit_(*format)) {
 3682              		.loc 1 1056 5 view .LVU943
 3683              		.loc 1 1056 9 is_stmt 0 view .LVU944
 3684 0044 079B     		ldr	r3, [sp, #28]
 3685 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3686              	.LVL357:
 3687              	.LBB162:
 3688              	.LBI162:
 412:flight/libraries/printf/printf.c **** {
 3689              		.loc 1 412 20 is_stmt 1 view .LVU945
 3690              	.LBB163:
 414:flight/libraries/printf/printf.c **** }
 3691              		.loc 1 414 3 view .LVU946
 414:flight/libraries/printf/printf.c **** }
 3692              		.loc 1 414 22 is_stmt 0 view .LVU947
 3693 0048 A2F13003 		sub	r3, r2, #48
 3694 004c DBB2     		uxtb	r3, r3
 3695              	.LVL358:
 414:flight/libraries/printf/printf.c **** }
 3696              		.loc 1 414 22 view .LVU948
 3697              	.LBE163:
 3698              	.LBE162:
 3699              		.loc 1 1056 8 view .LVU949
 3700 004e 092B     		cmp	r3, #9
 3701 0050 1BD9     		bls	.L384
1057:flight/libraries/printf/printf.c ****       width = (printf_size_t) atou_(&format);
1058:flight/libraries/printf/printf.c ****     }
1059:flight/libraries/printf/printf.c ****     else if (*format == '*') {
 3702              		.loc 1 1059 10 is_stmt 1 view .LVU950
 3703              		.loc 1 1059 13 is_stmt 0 view .LVU951
 3704 0052 2A2A     		cmp	r2, #42
 3705 0054 1ED0     		beq	.L385
1055:flight/libraries/printf/printf.c ****     if (is_digit_(*format)) {
 3706              		.loc 1 1055 19 view .LVU952
 3707 0056 0027     		movs	r7, #0
 3708              	.LVL359:
 3709              	.L275:
1060:flight/libraries/printf/printf.c ****       const int w = va_arg(args, int);
1061:flight/libraries/printf/printf.c ****       if (w < 0) {
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 96


1062:flight/libraries/printf/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
1063:flight/libraries/printf/printf.c ****         width = (printf_size_t)-w;
1064:flight/libraries/printf/printf.c ****       }
1065:flight/libraries/printf/printf.c ****       else {
1066:flight/libraries/printf/printf.c ****         width = (printf_size_t)w;
1067:flight/libraries/printf/printf.c ****       }
1068:flight/libraries/printf/printf.c ****       format++;
1069:flight/libraries/printf/printf.c ****     }
1070:flight/libraries/printf/printf.c **** 
1071:flight/libraries/printf/printf.c ****     // evaluate precision field
1072:flight/libraries/printf/printf.c ****     printf_size_t precision = 0U;
 3710              		.loc 1 1072 5 is_stmt 1 view .LVU953
1073:flight/libraries/printf/printf.c ****     if (*format == '.') {
 3711              		.loc 1 1073 5 view .LVU954
 3712              		.loc 1 1073 9 is_stmt 0 view .LVU955
 3713 0058 079B     		ldr	r3, [sp, #28]
 3714 005a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3715              		.loc 1 1073 8 view .LVU956
 3716 005c 2E2A     		cmp	r2, #46
 3717 005e 27D0     		beq	.L386
1072:flight/libraries/printf/printf.c ****     if (*format == '.') {
 3718              		.loc 1 1072 19 view .LVU957
 3719 0060 0026     		movs	r6, #0
 3720              	.LVL360:
 3721              	.L278:
1074:flight/libraries/printf/printf.c ****       flags |= FLAGS_PRECISION;
1075:flight/libraries/printf/printf.c ****       format++;
1076:flight/libraries/printf/printf.c ****       if (is_digit_(*format)) {
1077:flight/libraries/printf/printf.c ****         precision = (printf_size_t) atou_(&format);
1078:flight/libraries/printf/printf.c ****       }
1079:flight/libraries/printf/printf.c ****       else if (*format == '*') {
1080:flight/libraries/printf/printf.c ****         const int precision_ = va_arg(args, int);
1081:flight/libraries/printf/printf.c ****         precision = precision_ > 0 ? (printf_size_t) precision_ : 0U;
1082:flight/libraries/printf/printf.c ****         format++;
1083:flight/libraries/printf/printf.c ****       }
1084:flight/libraries/printf/printf.c ****     }
1085:flight/libraries/printf/printf.c **** 
1086:flight/libraries/printf/printf.c ****     // evaluate length field
1087:flight/libraries/printf/printf.c ****     switch (*format) {
 3722              		.loc 1 1087 5 is_stmt 1 view .LVU958
 3723              		.loc 1 1087 13 is_stmt 0 view .LVU959
 3724 0062 079A     		ldr	r2, [sp, #28]
 3725 0064 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3726              		.loc 1 1087 5 view .LVU960
 3727 0066 683B     		subs	r3, r3, #104
 3728 0068 122B     		cmp	r3, #18
 3729 006a 5ED8     		bhi	.L280
 3730 006c DFE803F0 		tbb	[pc, r3]
 3731              	.L282:
 3732 0070 4B       		.byte	(.L286-.L282)/2
 3733 0071 5D       		.byte	(.L280-.L282)/2
 3734 0072 BA       		.byte	(.L285-.L282)/2
 3735 0073 5D       		.byte	(.L280-.L282)/2
 3736 0074 3D       		.byte	(.L284-.L282)/2
 3737 0075 5D       		.byte	(.L280-.L282)/2
 3738 0076 5D       		.byte	(.L280-.L282)/2
 3739 0077 5D       		.byte	(.L280-.L282)/2
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 97


 3740 0078 5D       		.byte	(.L280-.L282)/2
 3741 0079 5D       		.byte	(.L280-.L282)/2
 3742 007a 5D       		.byte	(.L280-.L282)/2
 3743 007b 5D       		.byte	(.L280-.L282)/2
 3744 007c 59       		.byte	(.L283-.L282)/2
 3745 007d 5D       		.byte	(.L280-.L282)/2
 3746 007e 5D       		.byte	(.L280-.L282)/2
 3747 007f 5D       		.byte	(.L280-.L282)/2
 3748 0080 5D       		.byte	(.L280-.L282)/2
 3749 0081 5D       		.byte	(.L280-.L282)/2
 3750 0082 BF       		.byte	(.L281-.L282)/2
 3751              	.LVL361:
 3752 0083 00       		.p2align 1
 3753              	.L272:
 3754              	.LBB164:
 3755              	.LBB161:
 336:flight/libraries/printf/printf.c ****   }
 3756              		.loc 1 336 5 is_stmt 1 view .LVU961
 336:flight/libraries/printf/printf.c ****   }
 3757              		.loc 1 336 11 is_stmt 0 view .LVU962
 3758 0084 A268     		ldr	r2, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 3759              		.loc 1 336 31 view .LVU963
 3760 0086 D054     		strb	r0, [r2, r3]
 3761 0088 CCE7     		b	.L271
 3762              	.LVL362:
 3763              	.L384:
 336:flight/libraries/printf/printf.c ****   }
 3764              		.loc 1 336 31 view .LVU964
 3765              	.LBE161:
 3766              	.LBE164:
1057:flight/libraries/printf/printf.c ****     }
 3767              		.loc 1 1057 7 is_stmt 1 view .LVU965
1057:flight/libraries/printf/printf.c ****     }
 3768              		.loc 1 1057 31 is_stmt 0 view .LVU966
 3769 008a 07A8     		add	r0, sp, #28
 3770              	.LVL363:
1057:flight/libraries/printf/printf.c ****     }
 3771              		.loc 1 1057 31 view .LVU967
 3772 008c FFF7FEFF 		bl	atou_
 3773              	.LVL364:
 3774 0090 0746     		mov	r7, r0
 3775              	.LVL365:
1057:flight/libraries/printf/printf.c ****     }
 3776              		.loc 1 1057 31 view .LVU968
 3777 0092 E1E7     		b	.L275
 3778              	.LVL366:
 3779              	.L385:
 3780              	.LBB165:
1060:flight/libraries/printf/printf.c ****       if (w < 0) {
 3781              		.loc 1 1060 7 is_stmt 1 view .LVU969
1060:flight/libraries/printf/printf.c ****       if (w < 0) {
 3782              		.loc 1 1060 17 is_stmt 0 view .LVU970
 3783 0094 069B     		ldr	r3, [sp, #24]
 3784 0096 1A1D     		adds	r2, r3, #4
 3785 0098 0692     		str	r2, [sp, #24]
 3786 009a 1F68     		ldr	r7, [r3]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 98


1061:flight/libraries/printf/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 3787              		.loc 1 1061 7 is_stmt 1 view .LVU971
1061:flight/libraries/printf/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 3788              		.loc 1 1061 10 is_stmt 0 view .LVU972
 3789 009c 002F     		cmp	r7, #0
 3790 009e 03DB     		blt	.L387
 3791              	.LVL367:
 3792              	.L277:
1068:flight/libraries/printf/printf.c ****     }
 3793              		.loc 1 1068 7 is_stmt 1 view .LVU973
1068:flight/libraries/printf/printf.c ****     }
 3794              		.loc 1 1068 13 is_stmt 0 view .LVU974
 3795 00a0 079B     		ldr	r3, [sp, #28]
 3796 00a2 0133     		adds	r3, r3, #1
 3797 00a4 0793     		str	r3, [sp, #28]
 3798 00a6 D7E7     		b	.L275
 3799              	.LVL368:
 3800              	.L387:
1062:flight/libraries/printf/printf.c ****         width = (printf_size_t)-w;
 3801              		.loc 1 1062 9 is_stmt 1 view .LVU975
1062:flight/libraries/printf/printf.c ****         width = (printf_size_t)-w;
 3802              		.loc 1 1062 15 is_stmt 0 view .LVU976
 3803 00a8 40F00205 		orr	r5, r0, #2
 3804              	.LVL369:
1063:flight/libraries/printf/printf.c ****       }
 3805              		.loc 1 1063 9 is_stmt 1 view .LVU977
1063:flight/libraries/printf/printf.c ****       }
 3806              		.loc 1 1063 32 is_stmt 0 view .LVU978
 3807 00ac 7F42     		rsbs	r7, r7, #0
 3808              	.LVL370:
1063:flight/libraries/printf/printf.c ****       }
 3809              		.loc 1 1063 32 view .LVU979
 3810 00ae F7E7     		b	.L277
 3811              	.LVL371:
 3812              	.L386:
1063:flight/libraries/printf/printf.c ****       }
 3813              		.loc 1 1063 32 view .LVU980
 3814              	.LBE165:
1074:flight/libraries/printf/printf.c ****       format++;
 3815              		.loc 1 1074 7 is_stmt 1 view .LVU981
1074:flight/libraries/printf/printf.c ****       format++;
 3816              		.loc 1 1074 13 is_stmt 0 view .LVU982
 3817 00b0 45F40065 		orr	r5, r5, #2048
 3818              	.LVL372:
1075:flight/libraries/printf/printf.c ****       if (is_digit_(*format)) {
 3819              		.loc 1 1075 7 is_stmt 1 view .LVU983
1075:flight/libraries/printf/printf.c ****       if (is_digit_(*format)) {
 3820              		.loc 1 1075 13 is_stmt 0 view .LVU984
 3821 00b4 5A1C     		adds	r2, r3, #1
 3822 00b6 0792     		str	r2, [sp, #28]
1076:flight/libraries/printf/printf.c ****         precision = (printf_size_t) atou_(&format);
 3823              		.loc 1 1076 7 is_stmt 1 view .LVU985
1076:flight/libraries/printf/printf.c ****         precision = (printf_size_t) atou_(&format);
 3824              		.loc 1 1076 11 is_stmt 0 view .LVU986
 3825 00b8 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 3826              	.LVL373:
 3827              	.LBB166:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 99


 3828              	.LBI166:
 412:flight/libraries/printf/printf.c **** {
 3829              		.loc 1 412 20 is_stmt 1 view .LVU987
 3830              	.LBB167:
 414:flight/libraries/printf/printf.c **** }
 3831              		.loc 1 414 3 view .LVU988
 414:flight/libraries/printf/printf.c **** }
 3832              		.loc 1 414 22 is_stmt 0 view .LVU989
 3833 00ba A2F13003 		sub	r3, r2, #48
 3834 00be DBB2     		uxtb	r3, r3
 3835              	.LVL374:
 414:flight/libraries/printf/printf.c **** }
 3836              		.loc 1 414 22 view .LVU990
 3837              	.LBE167:
 3838              	.LBE166:
1076:flight/libraries/printf/printf.c ****         precision = (printf_size_t) atou_(&format);
 3839              		.loc 1 1076 10 view .LVU991
 3840 00c0 092B     		cmp	r3, #9
 3841 00c2 03D9     		bls	.L388
1079:flight/libraries/printf/printf.c ****         const int precision_ = va_arg(args, int);
 3842              		.loc 1 1079 12 is_stmt 1 view .LVU992
1079:flight/libraries/printf/printf.c ****         const int precision_ = va_arg(args, int);
 3843              		.loc 1 1079 15 is_stmt 0 view .LVU993
 3844 00c4 2A2A     		cmp	r2, #42
 3845 00c6 06D0     		beq	.L389
1072:flight/libraries/printf/printf.c ****     if (*format == '.') {
 3846              		.loc 1 1072 19 view .LVU994
 3847 00c8 0026     		movs	r6, #0
 3848 00ca CAE7     		b	.L278
 3849              	.L388:
1077:flight/libraries/printf/printf.c ****       }
 3850              		.loc 1 1077 9 is_stmt 1 view .LVU995
1077:flight/libraries/printf/printf.c ****       }
 3851              		.loc 1 1077 37 is_stmt 0 view .LVU996
 3852 00cc 07A8     		add	r0, sp, #28
 3853 00ce FFF7FEFF 		bl	atou_
 3854              	.LVL375:
 3855 00d2 0646     		mov	r6, r0
 3856              	.LVL376:
1077:flight/libraries/printf/printf.c ****       }
 3857              		.loc 1 1077 37 view .LVU997
 3858 00d4 C5E7     		b	.L278
 3859              	.LVL377:
 3860              	.L389:
 3861              	.LBB168:
1080:flight/libraries/printf/printf.c ****         precision = precision_ > 0 ? (printf_size_t) precision_ : 0U;
 3862              		.loc 1 1080 9 is_stmt 1 view .LVU998
1080:flight/libraries/printf/printf.c ****         precision = precision_ > 0 ? (printf_size_t) precision_ : 0U;
 3863              		.loc 1 1080 19 is_stmt 0 view .LVU999
 3864 00d6 069B     		ldr	r3, [sp, #24]
 3865 00d8 1A1D     		adds	r2, r3, #4
 3866 00da 0692     		str	r2, [sp, #24]
 3867 00dc 1E68     		ldr	r6, [r3]
1081:flight/libraries/printf/printf.c ****         format++;
 3868              		.loc 1 1081 9 is_stmt 1 view .LVU1000
1081:flight/libraries/printf/printf.c ****         format++;
 3869              		.loc 1 1081 65 is_stmt 0 view .LVU1001
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 100


 3870 00de 26EAE676 		bic	r6, r6, r6, asr #31
 3871              	.LVL378:
1082:flight/libraries/printf/printf.c ****       }
 3872              		.loc 1 1082 9 is_stmt 1 view .LVU1002
1082:flight/libraries/printf/printf.c ****       }
 3873              		.loc 1 1082 15 is_stmt 0 view .LVU1003
 3874 00e2 079B     		ldr	r3, [sp, #28]
 3875 00e4 0133     		adds	r3, r3, #1
 3876 00e6 0793     		str	r3, [sp, #28]
 3877 00e8 BBE7     		b	.L278
 3878              	.L284:
1082:flight/libraries/printf/printf.c ****       }
 3879              		.loc 1 1082 15 view .LVU1004
 3880              	.LBE168:
1088:flight/libraries/printf/printf.c **** #ifdef PRINTF_SUPPORT_MSVC_STYLE_INTEGER_SPECIFIERS
1089:flight/libraries/printf/printf.c ****       case 'I' : {
1090:flight/libraries/printf/printf.c ****         format++;
1091:flight/libraries/printf/printf.c ****         // Greedily parse for size in bits: 8, 16, 32 or 64
1092:flight/libraries/printf/printf.c ****         switch(*format) {
1093:flight/libraries/printf/printf.c ****           case '8':               flags |= FLAGS_INT8;
1094:flight/libraries/printf/printf.c ****             format++;
1095:flight/libraries/printf/printf.c ****             break;
1096:flight/libraries/printf/printf.c ****           case '1':
1097:flight/libraries/printf/printf.c ****             format++;
1098:flight/libraries/printf/printf.c ****             if (*format == '6') { format++; flags |= FLAGS_INT16; }
1099:flight/libraries/printf/printf.c ****             break;
1100:flight/libraries/printf/printf.c ****           case '3':
1101:flight/libraries/printf/printf.c ****             format++;
1102:flight/libraries/printf/printf.c ****             if (*format == '2') { format++; flags |= FLAGS_INT32; }
1103:flight/libraries/printf/printf.c ****             break;
1104:flight/libraries/printf/printf.c ****           case '6':
1105:flight/libraries/printf/printf.c ****             format++;
1106:flight/libraries/printf/printf.c ****             if (*format == '4') { format++; flags |= FLAGS_INT64; }
1107:flight/libraries/printf/printf.c ****             break;
1108:flight/libraries/printf/printf.c ****           default: break;
1109:flight/libraries/printf/printf.c ****         }
1110:flight/libraries/printf/printf.c ****         break;
1111:flight/libraries/printf/printf.c ****       }
1112:flight/libraries/printf/printf.c **** #endif
1113:flight/libraries/printf/printf.c ****       case 'l' :
1114:flight/libraries/printf/printf.c ****         flags |= FLAGS_LONG;
 3881              		.loc 1 1114 9 is_stmt 1 view .LVU1005
 3882              		.loc 1 1114 15 is_stmt 0 view .LVU1006
 3883 00ea 45F40071 		orr	r1, r5, #512
 3884              	.LVL379:
1115:flight/libraries/printf/printf.c ****         format++;
 3885              		.loc 1 1115 9 is_stmt 1 view .LVU1007
 3886              		.loc 1 1115 15 is_stmt 0 view .LVU1008
 3887 00ee 531C     		adds	r3, r2, #1
 3888 00f0 0793     		str	r3, [sp, #28]
1116:flight/libraries/printf/printf.c ****         if (*format == 'l') {
 3889              		.loc 1 1116 9 is_stmt 1 view .LVU1009
 3890              		.loc 1 1116 13 is_stmt 0 view .LVU1010
 3891 00f2 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 3892              		.loc 1 1116 12 view .LVU1011
 3893 00f4 6C2A     		cmp	r2, #108
 3894 00f6 01D0     		beq	.L390
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 101


1114:flight/libraries/printf/printf.c ****         format++;
 3895              		.loc 1 1114 15 view .LVU1012
 3896 00f8 0D46     		mov	r5, r1
 3897 00fa 16E0     		b	.L280
 3898              	.L390:
1117:flight/libraries/printf/printf.c ****           flags |= FLAGS_LONG_LONG;
 3899              		.loc 1 1117 11 is_stmt 1 view .LVU1013
 3900              		.loc 1 1117 17 is_stmt 0 view .LVU1014
 3901 00fc 45F4C065 		orr	r5, r5, #1536
 3902              	.LVL380:
1118:flight/libraries/printf/printf.c ****           format++;
 3903              		.loc 1 1118 11 is_stmt 1 view .LVU1015
 3904              		.loc 1 1118 17 is_stmt 0 view .LVU1016
 3905 0100 0133     		adds	r3, r3, #1
 3906 0102 0793     		str	r3, [sp, #28]
 3907 0104 11E0     		b	.L280
 3908              	.L286:
1119:flight/libraries/printf/printf.c ****         }
1120:flight/libraries/printf/printf.c ****         break;
1121:flight/libraries/printf/printf.c ****       case 'h' :
1122:flight/libraries/printf/printf.c ****         flags |= FLAGS_SHORT;
 3909              		.loc 1 1122 9 is_stmt 1 view .LVU1017
 3910              		.loc 1 1122 15 is_stmt 0 view .LVU1018
 3911 0106 45F08001 		orr	r1, r5, #128
 3912              	.LVL381:
1123:flight/libraries/printf/printf.c ****         format++;
 3913              		.loc 1 1123 9 is_stmt 1 view .LVU1019
 3914              		.loc 1 1123 15 is_stmt 0 view .LVU1020
 3915 010a 531C     		adds	r3, r2, #1
 3916 010c 0793     		str	r3, [sp, #28]
1124:flight/libraries/printf/printf.c ****         if (*format == 'h') {
 3917              		.loc 1 1124 9 is_stmt 1 view .LVU1021
 3918              		.loc 1 1124 13 is_stmt 0 view .LVU1022
 3919 010e 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 3920              		.loc 1 1124 12 view .LVU1023
 3921 0110 682A     		cmp	r2, #104
 3922 0112 01D0     		beq	.L391
1122:flight/libraries/printf/printf.c ****         format++;
 3923              		.loc 1 1122 15 view .LVU1024
 3924 0114 0D46     		mov	r5, r1
 3925 0116 08E0     		b	.L280
 3926              	.L391:
1125:flight/libraries/printf/printf.c ****           flags |= FLAGS_CHAR;
 3927              		.loc 1 1125 11 is_stmt 1 view .LVU1025
 3928              		.loc 1 1125 17 is_stmt 0 view .LVU1026
 3929 0118 45F0C005 		orr	r5, r5, #192
 3930              	.LVL382:
1126:flight/libraries/printf/printf.c ****           format++;
 3931              		.loc 1 1126 11 is_stmt 1 view .LVU1027
 3932              		.loc 1 1126 17 is_stmt 0 view .LVU1028
 3933 011c 0133     		adds	r3, r3, #1
 3934 011e 0793     		str	r3, [sp, #28]
 3935 0120 03E0     		b	.L280
 3936              	.L283:
1127:flight/libraries/printf/printf.c ****         }
1128:flight/libraries/printf/printf.c ****         break;
1129:flight/libraries/printf/printf.c ****       case 't' :
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 102


1130:flight/libraries/printf/printf.c ****         flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 3937              		.loc 1 1130 9 is_stmt 1 view .LVU1029
 3938              		.loc 1 1130 15 is_stmt 0 view .LVU1030
 3939 0122 45F40075 		orr	r5, r5, #512
 3940              	.LVL383:
1131:flight/libraries/printf/printf.c ****         format++;
 3941              		.loc 1 1131 9 is_stmt 1 view .LVU1031
 3942              		.loc 1 1131 15 is_stmt 0 view .LVU1032
 3943 0126 0132     		adds	r2, r2, #1
 3944 0128 0792     		str	r2, [sp, #28]
1132:flight/libraries/printf/printf.c ****         break;
 3945              		.loc 1 1132 9 is_stmt 1 view .LVU1033
 3946              	.L280:
1133:flight/libraries/printf/printf.c ****       case 'j' :
1134:flight/libraries/printf/printf.c ****         flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
1135:flight/libraries/printf/printf.c ****         format++;
1136:flight/libraries/printf/printf.c ****         break;
1137:flight/libraries/printf/printf.c ****       case 'z' :
1138:flight/libraries/printf/printf.c ****         flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
1139:flight/libraries/printf/printf.c ****         format++;
1140:flight/libraries/printf/printf.c ****         break;
1141:flight/libraries/printf/printf.c ****       default:
1142:flight/libraries/printf/printf.c ****         break;
1143:flight/libraries/printf/printf.c ****     }
1144:flight/libraries/printf/printf.c **** 
1145:flight/libraries/printf/printf.c ****     // evaluate specifier
1146:flight/libraries/printf/printf.c ****     switch (*format) {
 3947              		.loc 1 1146 5 view .LVU1034
 3948              		.loc 1 1146 13 is_stmt 0 view .LVU1035
 3949 012a 079A     		ldr	r2, [sp, #28]
 3950 012c 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 3951              		.loc 1 1146 5 view .LVU1036
 3952 012e A0F12503 		sub	r3, r0, #37
 3953 0132 532B     		cmp	r3, #83
 3954 0134 00F28B82 		bhi	.L287
 3955 0138 DFE813F0 		tbh	[pc, r3, lsl #1]
 3956              	.L289:
 3957 013c 4102     		.2byte	(.L296-.L289)/2
 3958 013e 8902     		.2byte	(.L287-.L289)/2
 3959 0140 8902     		.2byte	(.L287-.L289)/2
 3960 0142 8902     		.2byte	(.L287-.L289)/2
 3961 0144 8902     		.2byte	(.L287-.L289)/2
 3962 0146 8902     		.2byte	(.L287-.L289)/2
 3963 0148 8902     		.2byte	(.L287-.L289)/2
 3964 014a 8902     		.2byte	(.L287-.L289)/2
 3965 014c 8902     		.2byte	(.L287-.L289)/2
 3966 014e 8902     		.2byte	(.L287-.L289)/2
 3967 0150 8902     		.2byte	(.L287-.L289)/2
 3968 0152 8902     		.2byte	(.L287-.L289)/2
 3969 0154 8902     		.2byte	(.L287-.L289)/2
 3970 0156 8902     		.2byte	(.L287-.L289)/2
 3971 0158 8902     		.2byte	(.L287-.L289)/2
 3972 015a 8902     		.2byte	(.L287-.L289)/2
 3973 015c 8902     		.2byte	(.L287-.L289)/2
 3974 015e 8902     		.2byte	(.L287-.L289)/2
 3975 0160 8902     		.2byte	(.L287-.L289)/2
 3976 0162 8902     		.2byte	(.L287-.L289)/2
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 103


 3977 0164 8902     		.2byte	(.L287-.L289)/2
 3978 0166 8902     		.2byte	(.L287-.L289)/2
 3979 0168 8902     		.2byte	(.L287-.L289)/2
 3980 016a 8902     		.2byte	(.L287-.L289)/2
 3981 016c 8902     		.2byte	(.L287-.L289)/2
 3982 016e 8902     		.2byte	(.L287-.L289)/2
 3983 0170 8902     		.2byte	(.L287-.L289)/2
 3984 0172 8902     		.2byte	(.L287-.L289)/2
 3985 0174 8902     		.2byte	(.L287-.L289)/2
 3986 0176 8902     		.2byte	(.L287-.L289)/2
 3987 0178 8902     		.2byte	(.L287-.L289)/2
 3988 017a 8902     		.2byte	(.L287-.L289)/2
 3989 017c 4701     		.2byte	(.L293-.L289)/2
 3990 017e 2D01     		.2byte	(.L294-.L289)/2
 3991 0180 4701     		.2byte	(.L293-.L289)/2
 3992 0182 8902     		.2byte	(.L287-.L289)/2
 3993 0184 8902     		.2byte	(.L287-.L289)/2
 3994 0186 8902     		.2byte	(.L287-.L289)/2
 3995 0188 8902     		.2byte	(.L287-.L289)/2
 3996 018a 8902     		.2byte	(.L287-.L289)/2
 3997 018c 8902     		.2byte	(.L287-.L289)/2
 3998 018e 8902     		.2byte	(.L287-.L289)/2
 3999 0190 8902     		.2byte	(.L287-.L289)/2
 4000 0192 8902     		.2byte	(.L287-.L289)/2
 4001 0194 8902     		.2byte	(.L287-.L289)/2
 4002 0196 8902     		.2byte	(.L287-.L289)/2
 4003 0198 8902     		.2byte	(.L287-.L289)/2
 4004 019a 8902     		.2byte	(.L287-.L289)/2
 4005 019c 8902     		.2byte	(.L287-.L289)/2
 4006 019e 8902     		.2byte	(.L287-.L289)/2
 4007 01a0 8902     		.2byte	(.L287-.L289)/2
 4008 01a2 5E00     		.2byte	(.L288-.L289)/2
 4009 01a4 8902     		.2byte	(.L287-.L289)/2
 4010 01a6 8902     		.2byte	(.L287-.L289)/2
 4011 01a8 8902     		.2byte	(.L287-.L289)/2
 4012 01aa 8902     		.2byte	(.L287-.L289)/2
 4013 01ac 8902     		.2byte	(.L287-.L289)/2
 4014 01ae 8902     		.2byte	(.L287-.L289)/2
 4015 01b0 8902     		.2byte	(.L287-.L289)/2
 4016 01b2 8902     		.2byte	(.L287-.L289)/2
 4017 01b4 8902     		.2byte	(.L287-.L289)/2
 4018 01b6 5E00     		.2byte	(.L288-.L289)/2
 4019 01b8 6801     		.2byte	(.L295-.L289)/2
 4020 01ba 5E00     		.2byte	(.L288-.L289)/2
 4021 01bc 4701     		.2byte	(.L293-.L289)/2
 4022 01be 2D01     		.2byte	(.L294-.L289)/2
 4023 01c0 4701     		.2byte	(.L293-.L289)/2
 4024 01c2 8902     		.2byte	(.L287-.L289)/2
 4025 01c4 5E00     		.2byte	(.L288-.L289)/2
 4026 01c6 8902     		.2byte	(.L287-.L289)/2
 4027 01c8 8902     		.2byte	(.L287-.L289)/2
 4028 01ca 8902     		.2byte	(.L287-.L289)/2
 4029 01cc 8902     		.2byte	(.L287-.L289)/2
 4030 01ce 5402     		.2byte	(.L292-.L289)/2
 4031 01d0 5E00     		.2byte	(.L288-.L289)/2
 4032 01d2 2102     		.2byte	(.L291-.L289)/2
 4033 01d4 8902     		.2byte	(.L287-.L289)/2
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 104


 4034 01d6 8902     		.2byte	(.L287-.L289)/2
 4035 01d8 AC01     		.2byte	(.L290-.L289)/2
 4036 01da 8902     		.2byte	(.L287-.L289)/2
 4037 01dc 5E00     		.2byte	(.L288-.L289)/2
 4038 01de 8902     		.2byte	(.L287-.L289)/2
 4039 01e0 8902     		.2byte	(.L287-.L289)/2
 4040 01e2 5E00     		.2byte	(.L288-.L289)/2
 4041              		.p2align 1
 4042              	.L285:
1134:flight/libraries/printf/printf.c ****         format++;
 4043              		.loc 1 1134 9 is_stmt 1 view .LVU1037
1134:flight/libraries/printf/printf.c ****         format++;
 4044              		.loc 1 1134 15 is_stmt 0 view .LVU1038
 4045 01e4 45F48065 		orr	r5, r5, #1024
 4046              	.LVL384:
1135:flight/libraries/printf/printf.c ****         break;
 4047              		.loc 1 1135 9 is_stmt 1 view .LVU1039
1135:flight/libraries/printf/printf.c ****         break;
 4048              		.loc 1 1135 15 is_stmt 0 view .LVU1040
 4049 01e8 0132     		adds	r2, r2, #1
 4050 01ea 0792     		str	r2, [sp, #28]
1136:flight/libraries/printf/printf.c ****       case 'z' :
 4051              		.loc 1 1136 9 is_stmt 1 view .LVU1041
 4052 01ec 9DE7     		b	.L280
 4053              	.L281:
1138:flight/libraries/printf/printf.c ****         format++;
 4054              		.loc 1 1138 9 view .LVU1042
1138:flight/libraries/printf/printf.c ****         format++;
 4055              		.loc 1 1138 15 is_stmt 0 view .LVU1043
 4056 01ee 45F40075 		orr	r5, r5, #512
 4057              	.LVL385:
1139:flight/libraries/printf/printf.c ****         break;
 4058              		.loc 1 1139 9 is_stmt 1 view .LVU1044
1139:flight/libraries/printf/printf.c ****         break;
 4059              		.loc 1 1139 15 is_stmt 0 view .LVU1045
 4060 01f2 0132     		adds	r2, r2, #1
 4061 01f4 0792     		str	r2, [sp, #28]
1140:flight/libraries/printf/printf.c ****       default:
 4062              		.loc 1 1140 9 is_stmt 1 view .LVU1046
 4063 01f6 98E7     		b	.L280
 4064              	.L288:
 4065              	.LBB169:
1147:flight/libraries/printf/printf.c ****       case 'd' :
1148:flight/libraries/printf/printf.c ****       case 'i' :
1149:flight/libraries/printf/printf.c ****       case 'u' :
1150:flight/libraries/printf/printf.c ****       case 'x' :
1151:flight/libraries/printf/printf.c ****       case 'X' :
1152:flight/libraries/printf/printf.c ****       case 'o' :
1153:flight/libraries/printf/printf.c ****       case 'b' : {
1154:flight/libraries/printf/printf.c **** 
1155:flight/libraries/printf/printf.c ****         if (*format == 'd' || *format == 'i') {
 4066              		.loc 1 1155 9 view .LVU1047
 4067              		.loc 1 1155 12 is_stmt 0 view .LVU1048
 4068 01f8 6428     		cmp	r0, #100
 4069 01fa 01D0     		beq	.L297
 4070              		.loc 1 1155 28 discriminator 1 view .LVU1049
 4071 01fc 6928     		cmp	r0, #105
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 105


 4072 01fe 01D1     		bne	.L298
 4073              	.L297:
1156:flight/libraries/printf/printf.c ****           flags |= FLAGS_SIGNED;
 4074              		.loc 1 1156 11 is_stmt 1 view .LVU1050
 4075              		.loc 1 1156 17 is_stmt 0 view .LVU1051
 4076 0200 45F48045 		orr	r5, r5, #16384
 4077              	.LVL386:
 4078              	.L298:
1157:flight/libraries/printf/printf.c ****         }
1158:flight/libraries/printf/printf.c **** 
1159:flight/libraries/printf/printf.c ****         numeric_base_t base;
 4079              		.loc 1 1159 9 is_stmt 1 view .LVU1052
1160:flight/libraries/printf/printf.c ****         if (*format == 'x' || *format == 'X') {
 4080              		.loc 1 1160 9 view .LVU1053
 4081              		.loc 1 1160 12 is_stmt 0 view .LVU1054
 4082 0204 7828     		cmp	r0, #120
 4083 0206 09D0     		beq	.L376
 4084              		.loc 1 1160 28 discriminator 1 view .LVU1055
 4085 0208 5828     		cmp	r0, #88
 4086 020a 2CD0     		beq	.L377
1161:flight/libraries/printf/printf.c ****           base = BASE_HEX;
1162:flight/libraries/printf/printf.c ****         }
1163:flight/libraries/printf/printf.c ****         else if (*format == 'o') {
 4087              		.loc 1 1163 14 is_stmt 1 view .LVU1056
 4088              		.loc 1 1163 17 is_stmt 0 view .LVU1057
 4089 020c 6F28     		cmp	r0, #111
 4090 020e 2CD0     		beq	.L378
1164:flight/libraries/printf/printf.c ****           base =  BASE_OCTAL;
1165:flight/libraries/printf/printf.c ****         }
1166:flight/libraries/printf/printf.c ****         else if (*format == 'b') {
 4091              		.loc 1 1166 14 is_stmt 1 view .LVU1058
 4092              		.loc 1 1166 17 is_stmt 0 view .LVU1059
 4093 0210 6228     		cmp	r0, #98
 4094 0212 2CD0     		beq	.L379
1167:flight/libraries/printf/printf.c ****           base =  BASE_BINARY;
1168:flight/libraries/printf/printf.c ****         }
1169:flight/libraries/printf/printf.c ****         else {
1170:flight/libraries/printf/printf.c ****           base = BASE_DECIMAL;
 4095              		.loc 1 1170 11 is_stmt 1 view .LVU1060
 4096              	.LVL387:
1171:flight/libraries/printf/printf.c ****           flags &= ~FLAGS_HASH; // decimal integers have no alternative presentation
 4097              		.loc 1 1171 11 view .LVU1061
 4098              		.loc 1 1171 17 is_stmt 0 view .LVU1062
 4099 0214 25F01005 		bic	r5, r5, #16
 4100              	.LVL388:
1170:flight/libraries/printf/printf.c ****           flags &= ~FLAGS_HASH; // decimal integers have no alternative presentation
 4101              		.loc 1 1170 16 view .LVU1063
 4102 0218 0A21     		movs	r1, #10
 4103 021a 00E0     		b	.L299
 4104              	.LVL389:
 4105              	.L376:
1161:flight/libraries/printf/printf.c ****         }
 4106              		.loc 1 1161 16 view .LVU1064
 4107 021c 1021     		movs	r1, #16
 4108              	.L299:
 4109              	.LVL390:
1172:flight/libraries/printf/printf.c ****         }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 106


1173:flight/libraries/printf/printf.c **** 
1174:flight/libraries/printf/printf.c ****         if (*format == 'X') {
 4110              		.loc 1 1174 9 is_stmt 1 view .LVU1065
 4111              		.loc 1 1174 12 is_stmt 0 view .LVU1066
 4112 021e 5828     		cmp	r0, #88
 4113 0220 27D0     		beq	.L392
 4114              	.L300:
1175:flight/libraries/printf/printf.c ****           flags |= FLAGS_UPPERCASE;
1176:flight/libraries/printf/printf.c ****         }
1177:flight/libraries/printf/printf.c **** 
1178:flight/libraries/printf/printf.c ****         format++;
 4115              		.loc 1 1178 9 is_stmt 1 view .LVU1067
 4116              		.loc 1 1178 15 is_stmt 0 view .LVU1068
 4117 0222 0132     		adds	r2, r2, #1
 4118 0224 0792     		str	r2, [sp, #28]
1179:flight/libraries/printf/printf.c ****         // ignore '0' flag when precision is given
1180:flight/libraries/printf/printf.c ****         if (flags & FLAGS_PRECISION) {
 4119              		.loc 1 1180 9 is_stmt 1 view .LVU1069
 4120              		.loc 1 1180 12 is_stmt 0 view .LVU1070
 4121 0226 15F4006F 		tst	r5, #2048
 4122 022a 01D0     		beq	.L301
1181:flight/libraries/printf/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 4123              		.loc 1 1181 11 is_stmt 1 view .LVU1071
 4124              		.loc 1 1181 17 is_stmt 0 view .LVU1072
 4125 022c 25F00105 		bic	r5, r5, #1
 4126              	.LVL391:
 4127              	.L301:
1182:flight/libraries/printf/printf.c ****         }
1183:flight/libraries/printf/printf.c **** 
1184:flight/libraries/printf/printf.c ****         if (flags & FLAGS_SIGNED) {
 4128              		.loc 1 1184 9 is_stmt 1 view .LVU1073
 4129              		.loc 1 1184 12 is_stmt 0 view .LVU1074
 4130 0230 15F4804F 		tst	r5, #16384
 4131 0234 68D0     		beq	.L302
1185:flight/libraries/printf/printf.c ****           // A signed specifier: d, i or possibly I + bit size if enabled
1186:flight/libraries/printf/printf.c **** 
1187:flight/libraries/printf/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 4132              		.loc 1 1187 11 is_stmt 1 view .LVU1075
 4133              		.loc 1 1187 14 is_stmt 0 view .LVU1076
 4134 0236 15F4806F 		tst	r5, #1024
 4135 023a 1DD1     		bne	.L393
1188:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_LONG_LONG
1189:flight/libraries/printf/printf.c ****             const long long value = va_arg(args, long long);
1190:flight/libraries/printf/printf.c ****             print_integer(output, ABS_FOR_PRINTING(value), value < 0, base, precision, width, flags
1191:flight/libraries/printf/printf.c **** #endif
1192:flight/libraries/printf/printf.c ****           }
1193:flight/libraries/printf/printf.c ****           else if (flags & FLAGS_LONG) {
 4136              		.loc 1 1193 16 is_stmt 1 view .LVU1077
 4137              		.loc 1 1193 19 is_stmt 0 view .LVU1078
 4138 023c 15F4007F 		tst	r5, #512
 4139 0240 39D0     		beq	.L305
 4140              	.LBB170:
1194:flight/libraries/printf/printf.c ****             const long value = va_arg(args, long);
 4141              		.loc 1 1194 13 is_stmt 1 view .LVU1079
 4142              		.loc 1 1194 24 is_stmt 0 view .LVU1080
 4143 0242 069B     		ldr	r3, [sp, #24]
 4144 0244 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 107


 4145 0246 0692     		str	r2, [sp, #24]
 4146 0248 1868     		ldr	r0, [r3]
1195:flight/libraries/printf/printf.c ****             print_integer(output, ABS_FOR_PRINTING(value), value < 0, base, precision, width, flags
 4147              		.loc 1 1195 13 is_stmt 1 view .LVU1081
 4148 024a 0028     		cmp	r0, #0
 4149 024c 2EDD     		ble	.L306
 4150              		.loc 1 1195 13 is_stmt 0 discriminator 1 view .LVU1082
 4151 024e 0246     		mov	r2, r0
 4152 0250 C317     		asrs	r3, r0, #31
 4153              	.L307:
 4154              		.loc 1 1195 13 discriminator 4 view .LVU1083
 4155 0252 0495     		str	r5, [sp, #16]
 4156 0254 0397     		str	r7, [sp, #12]
 4157 0256 0296     		str	r6, [sp, #8]
 4158 0258 0191     		str	r1, [sp, #4]
 4159 025a C00F     		lsrs	r0, r0, #31
 4160 025c 0090     		str	r0, [sp]
 4161 025e 2046     		mov	r0, r4
 4162 0260 FFF7FEFF 		bl	print_integer
 4163              	.LVL392:
 4164              		.loc 1 1195 13 discriminator 4 view .LVU1084
 4165              	.LBE170:
 4166 0264 E1E6     		b	.L269
 4167              	.L377:
1161:flight/libraries/printf/printf.c ****         }
 4168              		.loc 1 1161 16 view .LVU1085
 4169 0266 1021     		movs	r1, #16
 4170 0268 D9E7     		b	.L299
 4171              	.L378:
1164:flight/libraries/printf/printf.c ****         }
 4172              		.loc 1 1164 16 view .LVU1086
 4173 026a 0821     		movs	r1, #8
 4174 026c D7E7     		b	.L299
 4175              	.L379:
1167:flight/libraries/printf/printf.c ****         }
 4176              		.loc 1 1167 16 view .LVU1087
 4177 026e 0221     		movs	r1, #2
 4178 0270 D5E7     		b	.L299
 4179              	.LVL393:
 4180              	.L392:
1175:flight/libraries/printf/printf.c ****         }
 4181              		.loc 1 1175 11 is_stmt 1 view .LVU1088
1175:flight/libraries/printf/printf.c ****         }
 4182              		.loc 1 1175 17 is_stmt 0 view .LVU1089
 4183 0272 45F02005 		orr	r5, r5, #32
 4184              	.LVL394:
1175:flight/libraries/printf/printf.c ****         }
 4185              		.loc 1 1175 17 view .LVU1090
 4186 0276 D4E7     		b	.L300
 4187              	.L393:
 4188              	.LBB171:
1189:flight/libraries/printf/printf.c ****             print_integer(output, ABS_FOR_PRINTING(value), value < 0, base, precision, width, flags
 4189              		.loc 1 1189 13 is_stmt 1 view .LVU1091
1189:flight/libraries/printf/printf.c ****             print_integer(output, ABS_FOR_PRINTING(value), value < 0, base, precision, width, flags
 4190              		.loc 1 1189 29 is_stmt 0 view .LVU1092
 4191 0278 069B     		ldr	r3, [sp, #24]
 4192 027a 0733     		adds	r3, r3, #7
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 108


 4193 027c 23F00703 		bic	r3, r3, #7
 4194 0280 03F10802 		add	r2, r3, #8
 4195 0284 0692     		str	r2, [sp, #24]
 4196 0286 5868     		ldr	r0, [r3, #4]
1190:flight/libraries/printf/printf.c **** #endif
 4197              		.loc 1 1190 13 is_stmt 1 view .LVU1093
1190:flight/libraries/printf/printf.c **** #endif
 4198              		.loc 1 1190 35 is_stmt 0 view .LVU1094
 4199 0288 1A68     		ldr	r2, [r3]
 4200 028a 0346     		mov	r3, r0
 4201 028c 0028     		cmp	r0, #0
 4202 028e 09DB     		blt	.L394
 4203              	.L304:
1190:flight/libraries/printf/printf.c **** #endif
 4204              		.loc 1 1190 13 view .LVU1095
 4205 0290 0495     		str	r5, [sp, #16]
 4206 0292 0397     		str	r7, [sp, #12]
 4207 0294 0296     		str	r6, [sp, #8]
 4208 0296 0191     		str	r1, [sp, #4]
 4209 0298 C00F     		lsrs	r0, r0, #31
 4210 029a 0090     		str	r0, [sp]
 4211 029c 2046     		mov	r0, r4
 4212 029e FFF7FEFF 		bl	print_integer
 4213              	.LVL395:
1190:flight/libraries/printf/printf.c **** #endif
 4214              		.loc 1 1190 13 view .LVU1096
 4215              	.LBE171:
 4216 02a2 C2E6     		b	.L269
 4217              	.LVL396:
 4218              	.L394:
 4219              	.LBB172:
1190:flight/libraries/printf/printf.c **** #endif
 4220              		.loc 1 1190 35 view .LVU1097
 4221 02a4 5242     		negs	r2, r2
 4222 02a6 60EB4003 		sbc	r3, r0, r0, lsl #1
 4223 02aa F1E7     		b	.L304
 4224              	.L306:
 4225              	.LBE172:
 4226              	.LBB173:
 4227              		.loc 1 1195 35 discriminator 2 view .LVU1098
 4228 02ac C317     		asrs	r3, r0, #31
 4229 02ae 4242     		negs	r2, r0
 4230              		.loc 1 1195 13 discriminator 2 view .LVU1099
 4231 02b0 63EB4303 		sbc	r3, r3, r3, lsl #1
 4232 02b4 CDE7     		b	.L307
 4233              	.L305:
 4234              	.LBE173:
 4235              	.LBB174:
1196:flight/libraries/printf/printf.c ****           }
1197:flight/libraries/printf/printf.c ****           else {
1198:flight/libraries/printf/printf.c ****             // We never try to interpret the argument as something potentially-smaller than int,
1199:flight/libraries/printf/printf.c ****             // due to integer promotion rules: Even if the user passed a short int, short unsigned
1200:flight/libraries/printf/printf.c ****             // etc. - these will come in after promotion, as int's (or unsigned for the case of
1201:flight/libraries/printf/printf.c ****             // short unsigned when it has the same size as int)
1202:flight/libraries/printf/printf.c ****             const int value =
 4236              		.loc 1 1202 13 is_stmt 1 view .LVU1100
1203:flight/libraries/printf/printf.c ****               (flags & FLAGS_CHAR) ? (signed char) va_arg(args, int) :
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 109


 4237              		.loc 1 1203 70 is_stmt 0 view .LVU1101
 4238 02b6 15F0400F 		tst	r5, #64
 4239 02ba 12D0     		beq	.L308
 4240              		.loc 1 1203 52 view .LVU1102
 4241 02bc 069B     		ldr	r3, [sp, #24]
 4242 02be 1A1D     		adds	r2, r3, #4
 4243 02c0 0692     		str	r2, [sp, #24]
 4244              		.loc 1 1203 38 view .LVU1103
 4245 02c2 93F90000 		ldrsb	r0, [r3]
 4246              	.L309:
 4247              	.LVL397:
1204:flight/libraries/printf/printf.c ****               (flags & FLAGS_SHORT) ? (short int) va_arg(args, int) :
1205:flight/libraries/printf/printf.c ****               va_arg(args, int);
1206:flight/libraries/printf/printf.c ****             print_integer(output, ABS_FOR_PRINTING(value), value < 0, base, precision, width, flags
 4248              		.loc 1 1206 13 is_stmt 1 view .LVU1104
 4249 02c6 0028     		cmp	r0, #0
 4250 02c8 19DD     		ble	.L311
 4251              		.loc 1 1206 13 is_stmt 0 discriminator 1 view .LVU1105
 4252 02ca 0246     		mov	r2, r0
 4253 02cc C317     		asrs	r3, r0, #31
 4254              	.L312:
 4255              		.loc 1 1206 13 discriminator 4 view .LVU1106
 4256 02ce 0495     		str	r5, [sp, #16]
 4257 02d0 0397     		str	r7, [sp, #12]
 4258 02d2 0296     		str	r6, [sp, #8]
 4259 02d4 0191     		str	r1, [sp, #4]
 4260 02d6 C00F     		lsrs	r0, r0, #31
 4261              	.LVL398:
 4262              		.loc 1 1206 13 discriminator 4 view .LVU1107
 4263 02d8 0090     		str	r0, [sp]
 4264 02da 2046     		mov	r0, r4
 4265 02dc FFF7FEFF 		bl	print_integer
 4266              	.LVL399:
 4267              		.loc 1 1206 13 discriminator 4 view .LVU1108
 4268 02e0 A3E6     		b	.L269
 4269              	.LVL400:
 4270              	.L308:
1204:flight/libraries/printf/printf.c ****               (flags & FLAGS_SHORT) ? (short int) va_arg(args, int) :
 4271              		.loc 1 1204 69 view .LVU1109
 4272 02e2 15F0800F 		tst	r5, #128
 4273 02e6 05D0     		beq	.L310
1204:flight/libraries/printf/printf.c ****               (flags & FLAGS_SHORT) ? (short int) va_arg(args, int) :
 4274              		.loc 1 1204 51 view .LVU1110
 4275 02e8 069B     		ldr	r3, [sp, #24]
 4276 02ea 1A1D     		adds	r2, r3, #4
 4277 02ec 0692     		str	r2, [sp, #24]
1204:flight/libraries/printf/printf.c ****               (flags & FLAGS_SHORT) ? (short int) va_arg(args, int) :
 4278              		.loc 1 1204 39 view .LVU1111
 4279 02ee B3F90000 		ldrsh	r0, [r3]
 4280 02f2 E8E7     		b	.L309
 4281              	.L310:
1204:flight/libraries/printf/printf.c ****               (flags & FLAGS_SHORT) ? (short int) va_arg(args, int) :
 4282              		.loc 1 1204 69 view .LVU1112
 4283 02f4 069B     		ldr	r3, [sp, #24]
 4284 02f6 1A1D     		adds	r2, r3, #4
 4285 02f8 0692     		str	r2, [sp, #24]
 4286 02fa 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 110


 4287 02fc E3E7     		b	.L309
 4288              	.LVL401:
 4289              	.L311:
 4290              		.loc 1 1206 35 discriminator 2 view .LVU1113
 4291 02fe C317     		asrs	r3, r0, #31
 4292 0300 4242     		negs	r2, r0
 4293              		.loc 1 1206 13 discriminator 2 view .LVU1114
 4294 0302 63EB4303 		sbc	r3, r3, r3, lsl #1
 4295 0306 E2E7     		b	.L312
 4296              	.LVL402:
 4297              	.L302:
 4298              		.loc 1 1206 13 discriminator 2 view .LVU1115
 4299              	.LBE174:
1207:flight/libraries/printf/printf.c ****           }
1208:flight/libraries/printf/printf.c ****         }
1209:flight/libraries/printf/printf.c ****         else {
1210:flight/libraries/printf/printf.c ****           // An unsigned specifier: u, x, X, o, b
1211:flight/libraries/printf/printf.c ****   
1212:flight/libraries/printf/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 4300              		.loc 1 1212 11 is_stmt 1 view .LVU1116
 4301              		.loc 1 1212 17 is_stmt 0 view .LVU1117
 4302 0308 25F00C00 		bic	r0, r5, #12
 4303              	.LVL403:
1213:flight/libraries/printf/printf.c ****   
1214:flight/libraries/printf/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 4304              		.loc 1 1214 11 is_stmt 1 view .LVU1118
 4305              		.loc 1 1214 14 is_stmt 0 view .LVU1119
 4306 030c 15F4806F 		tst	r5, #1024
 4307 0310 13D1     		bne	.L395
1215:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_LONG_LONG
1216:flight/libraries/printf/printf.c ****             print_integer(output, (printf_unsigned_value_t) va_arg(args, unsigned long long), false
1217:flight/libraries/printf/printf.c **** #endif
1218:flight/libraries/printf/printf.c ****           }
1219:flight/libraries/printf/printf.c ****           else if (flags & FLAGS_LONG) {
 4308              		.loc 1 1219 16 is_stmt 1 view .LVU1120
 4309              		.loc 1 1219 19 is_stmt 0 view .LVU1121
 4310 0312 15F4007F 		tst	r5, #512
 4311 0316 23D1     		bne	.L396
 4312              	.LBB175:
1220:flight/libraries/printf/printf.c ****             print_integer(output, (printf_unsigned_value_t) va_arg(args, unsigned long), false, bas
1221:flight/libraries/printf/printf.c ****           }
1222:flight/libraries/printf/printf.c ****           else {
1223:flight/libraries/printf/printf.c ****             const unsigned int value =
 4313              		.loc 1 1223 13 is_stmt 1 view .LVU1122
1224:flight/libraries/printf/printf.c ****               (flags & FLAGS_CHAR) ? (unsigned char)va_arg(args, unsigned int) :
 4314              		.loc 1 1224 80 is_stmt 0 view .LVU1123
 4315 0318 15F0400F 		tst	r5, #64
 4316 031c 2ED0     		beq	.L315
 4317              		.loc 1 1224 53 view .LVU1124
 4318 031e 069B     		ldr	r3, [sp, #24]
 4319 0320 1A1D     		adds	r2, r3, #4
 4320 0322 0692     		str	r2, [sp, #24]
 4321 0324 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4322              	.L316:
 4323              	.LVL404:
1225:flight/libraries/printf/printf.c ****               (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(args, unsigned int) :
1226:flight/libraries/printf/printf.c ****               va_arg(args, unsigned int);
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 111


1227:flight/libraries/printf/printf.c ****             print_integer(output, (printf_unsigned_value_t) value, false, base, precision, width, f
 4324              		.loc 1 1227 13 is_stmt 1 view .LVU1125
 4325 0326 0023     		movs	r3, #0
 4326 0328 0490     		str	r0, [sp, #16]
 4327 032a 0397     		str	r7, [sp, #12]
 4328 032c 0296     		str	r6, [sp, #8]
 4329 032e 0191     		str	r1, [sp, #4]
 4330 0330 0093     		str	r3, [sp]
 4331 0332 2046     		mov	r0, r4
 4332              	.LVL405:
 4333              		.loc 1 1227 13 is_stmt 0 view .LVU1126
 4334 0334 FFF7FEFF 		bl	print_integer
 4335              	.LVL406:
 4336              		.loc 1 1227 13 view .LVU1127
 4337 0338 77E6     		b	.L269
 4338              	.LVL407:
 4339              	.L395:
 4340              		.loc 1 1227 13 view .LVU1128
 4341              	.LBE175:
1216:flight/libraries/printf/printf.c **** #endif
 4342              		.loc 1 1216 13 is_stmt 1 view .LVU1129
 4343 033a 069B     		ldr	r3, [sp, #24]
 4344 033c 0733     		adds	r3, r3, #7
 4345 033e 23F00703 		bic	r3, r3, #7
 4346 0342 03F10802 		add	r2, r3, #8
 4347 0346 0692     		str	r2, [sp, #24]
 4348 0348 D3E90023 		ldrd	r2, [r3]
 4349 034c 0490     		str	r0, [sp, #16]
 4350 034e 0397     		str	r7, [sp, #12]
 4351 0350 0296     		str	r6, [sp, #8]
 4352 0352 0191     		str	r1, [sp, #4]
 4353 0354 0021     		movs	r1, #0
 4354              	.LVL408:
1216:flight/libraries/printf/printf.c **** #endif
 4355              		.loc 1 1216 13 is_stmt 0 view .LVU1130
 4356 0356 0091     		str	r1, [sp]
 4357 0358 2046     		mov	r0, r4
 4358              	.LVL409:
1216:flight/libraries/printf/printf.c **** #endif
 4359              		.loc 1 1216 13 view .LVU1131
 4360 035a FFF7FEFF 		bl	print_integer
 4361              	.LVL410:
1216:flight/libraries/printf/printf.c **** #endif
 4362              		.loc 1 1216 13 view .LVU1132
 4363 035e 64E6     		b	.L269
 4364              	.LVL411:
 4365              	.L396:
1220:flight/libraries/printf/printf.c ****           }
 4366              		.loc 1 1220 13 is_stmt 1 view .LVU1133
1220:flight/libraries/printf/printf.c ****           }
 4367              		.loc 1 1220 61 is_stmt 0 view .LVU1134
 4368 0360 069B     		ldr	r3, [sp, #24]
 4369 0362 1A1D     		adds	r2, r3, #4
 4370 0364 0692     		str	r2, [sp, #24]
 4371 0366 1A68     		ldr	r2, [r3]
1220:flight/libraries/printf/printf.c ****           }
 4372              		.loc 1 1220 13 view .LVU1135
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 112


 4373 0368 0023     		movs	r3, #0
 4374 036a 0490     		str	r0, [sp, #16]
 4375 036c 0397     		str	r7, [sp, #12]
 4376 036e 0296     		str	r6, [sp, #8]
 4377 0370 0191     		str	r1, [sp, #4]
 4378 0372 0093     		str	r3, [sp]
 4379 0374 2046     		mov	r0, r4
 4380              	.LVL412:
1220:flight/libraries/printf/printf.c ****           }
 4381              		.loc 1 1220 13 view .LVU1136
 4382 0376 FFF7FEFF 		bl	print_integer
 4383              	.LVL413:
1220:flight/libraries/printf/printf.c ****           }
 4384              		.loc 1 1220 13 view .LVU1137
 4385 037a 56E6     		b	.L269
 4386              	.LVL414:
 4387              	.L315:
 4388              	.LBB176:
1225:flight/libraries/printf/printf.c ****               (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(args, unsigned int) :
 4389              		.loc 1 1225 86 view .LVU1138
 4390 037c 15F0800F 		tst	r5, #128
 4391 0380 04D0     		beq	.L317
1225:flight/libraries/printf/printf.c ****               (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(args, unsigned int) :
 4392              		.loc 1 1225 59 view .LVU1139
 4393 0382 069B     		ldr	r3, [sp, #24]
 4394 0384 1A1D     		adds	r2, r3, #4
 4395 0386 0692     		str	r2, [sp, #24]
 4396 0388 1A88     		ldrh	r2, [r3]
 4397 038a CCE7     		b	.L316
 4398              	.L317:
1225:flight/libraries/printf/printf.c ****               (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(args, unsigned int) :
 4399              		.loc 1 1225 86 view .LVU1140
 4400 038c 069B     		ldr	r3, [sp, #24]
 4401 038e 1A1D     		adds	r2, r3, #4
 4402 0390 0692     		str	r2, [sp, #24]
 4403 0392 1A68     		ldr	r2, [r3]
 4404 0394 C7E7     		b	.L316
 4405              	.LVL415:
 4406              	.L294:
1225:flight/libraries/printf/printf.c ****               (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(args, unsigned int) :
 4407              		.loc 1 1225 86 view .LVU1141
 4408              	.LBE176:
 4409              	.LBE169:
1228:flight/libraries/printf/printf.c ****           }
1229:flight/libraries/printf/printf.c ****         }
1230:flight/libraries/printf/printf.c ****         break;
1231:flight/libraries/printf/printf.c ****       }
1232:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_DECIMAL_SPECIFIERS
1233:flight/libraries/printf/printf.c ****       case 'f' :
1234:flight/libraries/printf/printf.c ****       case 'F' :
1235:flight/libraries/printf/printf.c ****         if (*format == 'F') flags |= FLAGS_UPPERCASE;
 4410              		.loc 1 1235 9 is_stmt 1 view .LVU1142
 4411              		.loc 1 1235 12 is_stmt 0 view .LVU1143
 4412 0396 4628     		cmp	r0, #70
 4413 0398 14D0     		beq	.L397
 4414              	.L318:
1236:flight/libraries/printf/printf.c ****         print_floating_point(output, va_arg(args, double), precision, width, flags, PRINTF_PREFER_D
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 113


 4415              		.loc 1 1236 9 is_stmt 1 view .LVU1144
 4416 039a 069B     		ldr	r3, [sp, #24]
 4417 039c 0733     		adds	r3, r3, #7
 4418 039e 23F00703 		bic	r3, r3, #7
 4419 03a2 03F10802 		add	r2, r3, #8
 4420 03a6 0692     		str	r2, [sp, #24]
 4421 03a8 D3E90023 		ldrd	r2, [r3]
 4422 03ac 0021     		movs	r1, #0
 4423 03ae 0391     		str	r1, [sp, #12]
 4424 03b0 0295     		str	r5, [sp, #8]
 4425 03b2 0197     		str	r7, [sp, #4]
 4426 03b4 0096     		str	r6, [sp]
 4427 03b6 2046     		mov	r0, r4
 4428 03b8 FFF7FEFF 		bl	print_floating_point
 4429              	.LVL416:
1237:flight/libraries/printf/printf.c ****         format++;
 4430              		.loc 1 1237 9 view .LVU1145
 4431              		.loc 1 1237 15 is_stmt 0 view .LVU1146
 4432 03bc 079B     		ldr	r3, [sp, #28]
 4433 03be 0133     		adds	r3, r3, #1
 4434 03c0 0793     		str	r3, [sp, #28]
1238:flight/libraries/printf/printf.c ****         break;
 4435              		.loc 1 1238 9 is_stmt 1 view .LVU1147
 4436 03c2 32E6     		b	.L269
 4437              	.L397:
1235:flight/libraries/printf/printf.c ****         print_floating_point(output, va_arg(args, double), precision, width, flags, PRINTF_PREFER_D
 4438              		.loc 1 1235 29 discriminator 1 view .LVU1148
1235:flight/libraries/printf/printf.c ****         print_floating_point(output, va_arg(args, double), precision, width, flags, PRINTF_PREFER_D
 4439              		.loc 1 1235 35 is_stmt 0 discriminator 1 view .LVU1149
 4440 03c4 45F02005 		orr	r5, r5, #32
 4441              	.LVL417:
1235:flight/libraries/printf/printf.c ****         print_floating_point(output, va_arg(args, double), precision, width, flags, PRINTF_PREFER_D
 4442              		.loc 1 1235 35 discriminator 1 view .LVU1150
 4443 03c8 E7E7     		b	.L318
 4444              	.L293:
1239:flight/libraries/printf/printf.c **** #endif
1240:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
1241:flight/libraries/printf/printf.c ****       case 'e':
1242:flight/libraries/printf/printf.c ****       case 'E':
1243:flight/libraries/printf/printf.c ****       case 'g':
1244:flight/libraries/printf/printf.c ****       case 'G':
1245:flight/libraries/printf/printf.c ****         if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 4445              		.loc 1 1245 9 is_stmt 1 view .LVU1151
 4446              		.loc 1 1245 12 is_stmt 0 view .LVU1152
 4447 03ca 6728     		cmp	r0, #103
 4448 03cc 01D0     		beq	.L319
 4449              		.loc 1 1245 29 discriminator 2 view .LVU1153
 4450 03ce 4728     		cmp	r0, #71
 4451 03d0 01D1     		bne	.L320
 4452              	.L319:
 4453              		.loc 1 1245 49 is_stmt 1 discriminator 3 view .LVU1154
 4454              		.loc 1 1245 55 is_stmt 0 discriminator 3 view .LVU1155
 4455 03d2 45F48055 		orr	r5, r5, #4096
 4456              	.LVL418:
 4457              	.L320:
1246:flight/libraries/printf/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 4458              		.loc 1 1246 9 is_stmt 1 view .LVU1156
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 114


 4459              		.loc 1 1246 12 is_stmt 0 view .LVU1157
 4460 03d6 4528     		cmp	r0, #69
 4461 03d8 01D0     		beq	.L321
 4462              		.loc 1 1246 29 discriminator 2 view .LVU1158
 4463 03da 4728     		cmp	r0, #71
 4464 03dc 01D1     		bne	.L322
 4465              	.L321:
 4466              		.loc 1 1246 49 is_stmt 1 discriminator 3 view .LVU1159
 4467              		.loc 1 1246 55 is_stmt 0 discriminator 3 view .LVU1160
 4468 03de 45F02005 		orr	r5, r5, #32
 4469              	.LVL419:
 4470              	.L322:
1247:flight/libraries/printf/printf.c ****         print_floating_point(output, va_arg(args, double), precision, width, flags, PRINTF_PREFER_E
 4471              		.loc 1 1247 9 is_stmt 1 view .LVU1161
 4472 03e2 069B     		ldr	r3, [sp, #24]
 4473 03e4 0733     		adds	r3, r3, #7
 4474 03e6 23F00703 		bic	r3, r3, #7
 4475 03ea 03F10802 		add	r2, r3, #8
 4476 03ee 0692     		str	r2, [sp, #24]
 4477 03f0 D3E90023 		ldrd	r2, [r3]
 4478 03f4 0121     		movs	r1, #1
 4479 03f6 0391     		str	r1, [sp, #12]
 4480 03f8 0295     		str	r5, [sp, #8]
 4481 03fa 0197     		str	r7, [sp, #4]
 4482 03fc 0096     		str	r6, [sp]
 4483 03fe 2046     		mov	r0, r4
 4484 0400 FFF7FEFF 		bl	print_floating_point
 4485              	.LVL420:
1248:flight/libraries/printf/printf.c ****         format++;
 4486              		.loc 1 1248 9 view .LVU1162
 4487              		.loc 1 1248 15 is_stmt 0 view .LVU1163
 4488 0404 079B     		ldr	r3, [sp, #28]
 4489 0406 0133     		adds	r3, r3, #1
 4490 0408 0793     		str	r3, [sp, #28]
1249:flight/libraries/printf/printf.c ****         break;
 4491              		.loc 1 1249 9 is_stmt 1 view .LVU1164
 4492 040a 0EE6     		b	.L269
 4493              	.L295:
 4494              	.LBB177:
1250:flight/libraries/printf/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
1251:flight/libraries/printf/printf.c ****       case 'c' : {
1252:flight/libraries/printf/printf.c ****         printf_size_t l = 1U;
 4495              		.loc 1 1252 9 view .LVU1165
 4496              	.LVL421:
1253:flight/libraries/printf/printf.c ****         // pre padding
1254:flight/libraries/printf/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 4497              		.loc 1 1254 9 view .LVU1166
 4498              		.loc 1 1254 12 is_stmt 0 view .LVU1167
 4499 040c 15F00205 		ands	r5, r5, #2
 4500              	.LVL422:
 4501              		.loc 1 1254 12 view .LVU1168
 4502 0410 27D0     		beq	.L380
1252:flight/libraries/printf/printf.c ****         // pre padding
 4503              		.loc 1 1252 23 view .LVU1169
 4504 0412 0126     		movs	r6, #1
 4505              	.LVL423:
 4506              	.L324:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 115


1255:flight/libraries/printf/printf.c ****           while (l++ < width) {
1256:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, ' ');
1257:flight/libraries/printf/printf.c ****           }
1258:flight/libraries/printf/printf.c ****         }
1259:flight/libraries/printf/printf.c ****         // char output
1260:flight/libraries/printf/printf.c ****         putchar_via_gadget(output, (char) va_arg(args, int) );
 4507              		.loc 1 1260 9 is_stmt 1 view .LVU1170
 4508              		.loc 1 1260 43 is_stmt 0 view .LVU1171
 4509 0414 069B     		ldr	r3, [sp, #24]
 4510 0416 1A1D     		adds	r2, r3, #4
 4511 0418 0692     		str	r2, [sp, #24]
 4512              		.loc 1 1260 9 view .LVU1172
 4513 041a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4514              	.LVL424:
 4515              	.LBB178:
 4516              	.LBI178:
 321:flight/libraries/printf/printf.c **** {
 4517              		.loc 1 321 20 is_stmt 1 view .LVU1173
 4518              	.LBB179:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4519              		.loc 1 323 3 view .LVU1174
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4520              		.loc 1 323 35 is_stmt 0 view .LVU1175
 4521 041c E368     		ldr	r3, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4522              		.loc 1 323 40 view .LVU1176
 4523 041e 5A1C     		adds	r2, r3, #1
 4524 0420 E260     		str	r2, [r4, #12]
 4525              	.LVL425:
 326:flight/libraries/printf/printf.c ****     return;
 4526              		.loc 1 326 3 is_stmt 1 view .LVU1177
 326:flight/libraries/printf/printf.c ****     return;
 4527              		.loc 1 326 26 is_stmt 0 view .LVU1178
 4528 0422 2269     		ldr	r2, [r4, #16]
 326:flight/libraries/printf/printf.c ****     return;
 4529              		.loc 1 326 6 view .LVU1179
 4530 0424 9342     		cmp	r3, r2
 4531 0426 03D2     		bcs	.L328
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4532              		.loc 1 329 3 is_stmt 1 view .LVU1180
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4533              		.loc 1 329 13 is_stmt 0 view .LVU1181
 4534 0428 2268     		ldr	r2, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4535              		.loc 1 329 6 view .LVU1182
 4536 042a E2B1     		cbz	r2, .L329
 331:flight/libraries/printf/printf.c ****   }
 4537              		.loc 1 331 5 is_stmt 1 view .LVU1183
 4538 042c 6168     		ldr	r1, [r4, #4]
 4539 042e 9047     		blx	r2
 4540              	.LVL426:
 4541              	.L328:
 331:flight/libraries/printf/printf.c ****   }
 4542              		.loc 1 331 5 is_stmt 0 view .LVU1184
 4543              	.LBE179:
 4544              	.LBE178:
1261:flight/libraries/printf/printf.c ****         // post padding
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 116


1262:flight/libraries/printf/printf.c ****         if (flags & FLAGS_LEFT) {
 4545              		.loc 1 1262 9 is_stmt 1 view .LVU1185
 4546              		.loc 1 1262 12 is_stmt 0 view .LVU1186
 4547 0430 05BB     		cbnz	r5, .L330
 4548              	.LVL427:
 4549              	.L331:
1263:flight/libraries/printf/printf.c ****           while (l++ < width) {
1264:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, ' ');
1265:flight/libraries/printf/printf.c ****           }
1266:flight/libraries/printf/printf.c ****         }
1267:flight/libraries/printf/printf.c ****         format++;
 4550              		.loc 1 1267 9 is_stmt 1 view .LVU1187
 4551              		.loc 1 1267 15 is_stmt 0 view .LVU1188
 4552 0432 079B     		ldr	r3, [sp, #28]
 4553 0434 0133     		adds	r3, r3, #1
 4554 0436 0793     		str	r3, [sp, #28]
1268:flight/libraries/printf/printf.c ****         break;
 4555              		.loc 1 1268 9 is_stmt 1 view .LVU1189
 4556 0438 F7E5     		b	.L269
 4557              	.LVL428:
 4558              	.L326:
 4559              	.LBB181:
 4560              	.LBB182:
 336:flight/libraries/printf/printf.c ****   }
 4561              		.loc 1 336 5 view .LVU1190
 336:flight/libraries/printf/printf.c ****   }
 4562              		.loc 1 336 11 is_stmt 0 view .LVU1191
 4563 043a A268     		ldr	r2, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 4564              		.loc 1 336 31 view .LVU1192
 4565 043c 2021     		movs	r1, #32
 4566 043e D154     		strb	r1, [r2, r3]
 4567              	.LVL429:
 4568              	.L325:
 336:flight/libraries/printf/printf.c ****   }
 4569              		.loc 1 336 31 view .LVU1193
 4570              	.LBE182:
 4571              	.LBE181:
1255:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, ' ');
 4572              		.loc 1 1255 19 view .LVU1194
 4573 0440 3346     		mov	r3, r6
 4574              	.LVL430:
 4575              	.L323:
1255:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, ' ');
 4576              		.loc 1 1255 17 is_stmt 1 view .LVU1195
1255:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, ' ');
 4577              		.loc 1 1255 19 is_stmt 0 view .LVU1196
 4578 0442 5E1C     		adds	r6, r3, #1
 4579              	.LVL431:
1255:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, ' ');
 4580              		.loc 1 1255 17 view .LVU1197
 4581 0444 9F42     		cmp	r7, r3
 4582 0446 E5D9     		bls	.L324
1256:flight/libraries/printf/printf.c ****           }
 4583              		.loc 1 1256 13 is_stmt 1 view .LVU1198
 4584              	.LVL432:
 4585              	.LBB184:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 117


 4586              	.LBI181:
 321:flight/libraries/printf/printf.c **** {
 4587              		.loc 1 321 20 view .LVU1199
 4588              	.LBB183:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4589              		.loc 1 323 3 view .LVU1200
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4590              		.loc 1 323 35 is_stmt 0 view .LVU1201
 4591 0448 E368     		ldr	r3, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4592              		.loc 1 323 40 view .LVU1202
 4593 044a 5A1C     		adds	r2, r3, #1
 4594 044c E260     		str	r2, [r4, #12]
 4595              	.LVL433:
 326:flight/libraries/printf/printf.c ****     return;
 4596              		.loc 1 326 3 is_stmt 1 view .LVU1203
 326:flight/libraries/printf/printf.c ****     return;
 4597              		.loc 1 326 26 is_stmt 0 view .LVU1204
 4598 044e 2269     		ldr	r2, [r4, #16]
 326:flight/libraries/printf/printf.c ****     return;
 4599              		.loc 1 326 6 view .LVU1205
 4600 0450 9342     		cmp	r3, r2
 4601 0452 F5D2     		bcs	.L325
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4602              		.loc 1 329 3 is_stmt 1 view .LVU1206
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4603              		.loc 1 329 13 is_stmt 0 view .LVU1207
 4604 0454 2268     		ldr	r2, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4605              		.loc 1 329 6 view .LVU1208
 4606 0456 002A     		cmp	r2, #0
 4607 0458 EFD0     		beq	.L326
 331:flight/libraries/printf/printf.c ****   }
 4608              		.loc 1 331 5 is_stmt 1 view .LVU1209
 4609 045a 6168     		ldr	r1, [r4, #4]
 4610 045c 2020     		movs	r0, #32
 4611 045e 9047     		blx	r2
 4612              	.LVL434:
 331:flight/libraries/printf/printf.c ****   }
 4613              		.loc 1 331 5 is_stmt 0 view .LVU1210
 4614 0460 EEE7     		b	.L325
 4615              	.LVL435:
 4616              	.L380:
 331:flight/libraries/printf/printf.c ****   }
 4617              		.loc 1 331 5 view .LVU1211
 4618              	.LBE183:
 4619              	.LBE184:
1252:flight/libraries/printf/printf.c ****         // pre padding
 4620              		.loc 1 1252 23 view .LVU1212
 4621 0462 0123     		movs	r3, #1
 4622 0464 EDE7     		b	.L323
 4623              	.LVL436:
 4624              	.L329:
 4625              	.LBB185:
 4626              	.LBB180:
 336:flight/libraries/printf/printf.c ****   }
 4627              		.loc 1 336 5 is_stmt 1 view .LVU1213
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 118


 336:flight/libraries/printf/printf.c ****   }
 4628              		.loc 1 336 11 is_stmt 0 view .LVU1214
 4629 0466 A268     		ldr	r2, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 4630              		.loc 1 336 31 view .LVU1215
 4631 0468 D054     		strb	r0, [r2, r3]
 4632 046a E1E7     		b	.L328
 4633              	.LVL437:
 4634              	.L333:
 336:flight/libraries/printf/printf.c ****   }
 4635              		.loc 1 336 31 view .LVU1216
 4636              	.LBE180:
 4637              	.LBE185:
 4638              	.LBB186:
 4639              	.LBB187:
 336:flight/libraries/printf/printf.c ****   }
 4640              		.loc 1 336 5 is_stmt 1 view .LVU1217
 336:flight/libraries/printf/printf.c ****   }
 4641              		.loc 1 336 11 is_stmt 0 view .LVU1218
 4642 046c A268     		ldr	r2, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 4643              		.loc 1 336 31 view .LVU1219
 4644 046e 2021     		movs	r1, #32
 4645 0470 D154     		strb	r1, [r2, r3]
 4646              	.LVL438:
 4647              	.L332:
 336:flight/libraries/printf/printf.c ****   }
 4648              		.loc 1 336 31 view .LVU1220
 4649              	.LBE187:
 4650              	.LBE186:
1263:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, ' ');
 4651              		.loc 1 1263 19 view .LVU1221
 4652 0472 2E46     		mov	r6, r5
 4653              	.LVL439:
 4654              	.L330:
1263:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, ' ');
 4655              		.loc 1 1263 17 is_stmt 1 view .LVU1222
1263:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, ' ');
 4656              		.loc 1 1263 19 is_stmt 0 view .LVU1223
 4657 0474 751C     		adds	r5, r6, #1
 4658              	.LVL440:
1263:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, ' ');
 4659              		.loc 1 1263 17 view .LVU1224
 4660 0476 B742     		cmp	r7, r6
 4661 0478 DBD9     		bls	.L331
1264:flight/libraries/printf/printf.c ****           }
 4662              		.loc 1 1264 13 is_stmt 1 view .LVU1225
 4663              	.LVL441:
 4664              	.LBB189:
 4665              	.LBI186:
 321:flight/libraries/printf/printf.c **** {
 4666              		.loc 1 321 20 view .LVU1226
 4667              	.LBB188:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4668              		.loc 1 323 3 view .LVU1227
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4669              		.loc 1 323 35 is_stmt 0 view .LVU1228
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 119


 4670 047a E368     		ldr	r3, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4671              		.loc 1 323 40 view .LVU1229
 4672 047c 5A1C     		adds	r2, r3, #1
 4673 047e E260     		str	r2, [r4, #12]
 4674              	.LVL442:
 326:flight/libraries/printf/printf.c ****     return;
 4675              		.loc 1 326 3 is_stmt 1 view .LVU1230
 326:flight/libraries/printf/printf.c ****     return;
 4676              		.loc 1 326 26 is_stmt 0 view .LVU1231
 4677 0480 2269     		ldr	r2, [r4, #16]
 326:flight/libraries/printf/printf.c ****     return;
 4678              		.loc 1 326 6 view .LVU1232
 4679 0482 9342     		cmp	r3, r2
 4680 0484 F5D2     		bcs	.L332
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4681              		.loc 1 329 3 is_stmt 1 view .LVU1233
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4682              		.loc 1 329 13 is_stmt 0 view .LVU1234
 4683 0486 2268     		ldr	r2, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4684              		.loc 1 329 6 view .LVU1235
 4685 0488 002A     		cmp	r2, #0
 4686 048a EFD0     		beq	.L333
 331:flight/libraries/printf/printf.c ****   }
 4687              		.loc 1 331 5 is_stmt 1 view .LVU1236
 4688 048c 6168     		ldr	r1, [r4, #4]
 4689 048e 2020     		movs	r0, #32
 4690 0490 9047     		blx	r2
 4691              	.LVL443:
 331:flight/libraries/printf/printf.c ****   }
 4692              		.loc 1 331 5 is_stmt 0 view .LVU1237
 4693 0492 EEE7     		b	.L332
 4694              	.LVL444:
 4695              	.L290:
 331:flight/libraries/printf/printf.c ****   }
 4696              		.loc 1 331 5 view .LVU1238
 4697              	.LBE188:
 4698              	.LBE189:
 4699              	.LBE177:
 4700              	.LBB190:
1269:flight/libraries/printf/printf.c ****       }
1270:flight/libraries/printf/printf.c **** 
1271:flight/libraries/printf/printf.c ****       case 's' : {
1272:flight/libraries/printf/printf.c ****         const char* p = va_arg(args, char*);
 4701              		.loc 1 1272 9 is_stmt 1 view .LVU1239
 4702              		.loc 1 1272 21 is_stmt 0 view .LVU1240
 4703 0494 069B     		ldr	r3, [sp, #24]
 4704 0496 1A1D     		adds	r2, r3, #4
 4705 0498 0692     		str	r2, [sp, #24]
 4706 049a D3F80090 		ldr	r9, [r3]
1273:flight/libraries/printf/printf.c ****         if (p == NULL) {
 4707              		.loc 1 1273 9 is_stmt 1 view .LVU1241
 4708              		.loc 1 1273 12 is_stmt 0 view .LVU1242
 4709 049e B9F1000F 		cmp	r9, #0
 4710 04a2 04D0     		beq	.L398
 4711              	.LBB191:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 120


1274:flight/libraries/printf/printf.c ****           out_rev_(output, ")llun(", 6, width, flags);
1275:flight/libraries/printf/printf.c ****         }
1276:flight/libraries/printf/printf.c ****         else {
1277:flight/libraries/printf/printf.c ****           printf_size_t l = strnlen_s_(p, precision ? precision : PRINTF_MAX_POSSIBLE_BUFFER_SIZE);
 4712              		.loc 1 1277 11 is_stmt 1 view .LVU1243
 4713              		.loc 1 1277 29 is_stmt 0 view .LVU1244
 4714 04a4 06BB     		cbnz	r6, .L337
 4715 04a6 6FF00043 		mvn	r3, #-2147483648
 4716              	.L338:
 4717 04aa C846     		mov	r8, r9
 4718 04ac 0AE0     		b	.L339
 4719              	.L398:
 4720              	.LBE191:
1274:flight/libraries/printf/printf.c ****           out_rev_(output, ")llun(", 6, width, flags);
 4721              		.loc 1 1274 11 is_stmt 1 view .LVU1245
 4722 04ae 0095     		str	r5, [sp]
 4723 04b0 3B46     		mov	r3, r7
 4724 04b2 0622     		movs	r2, #6
 4725 04b4 7849     		ldr	r1, .L404
 4726 04b6 2046     		mov	r0, r4
 4727 04b8 FFF7FEFF 		bl	out_rev_
 4728              	.LVL445:
 4729 04bc 46E0     		b	.L336
 4730              	.LVL446:
 4731              	.L341:
 4732              	.LBB206:
 4733              	.LBB192:
 4734              	.LBB193:
 405:flight/libraries/printf/printf.c ****   return (printf_size_t)(s - str);
 4735              		.loc 1 405 38 view .LVU1246
 405:flight/libraries/printf/printf.c ****   return (printf_size_t)(s - str);
 4736              		.loc 1 405 34 view .LVU1247
 4737 04be 08F10108 		add	r8, r8, #1
 4738              	.LVL447:
 405:flight/libraries/printf/printf.c ****   return (printf_size_t)(s - str);
 4739              		.loc 1 405 30 is_stmt 0 view .LVU1248
 4740 04c2 1346     		mov	r3, r2
 4741              	.LVL448:
 4742              	.L339:
 405:flight/libraries/printf/printf.c ****   return (printf_size_t)(s - str);
 4743              		.loc 1 405 17 is_stmt 1 view .LVU1249
 4744 04c4 98F80020 		ldrb	r2, [r8]	@ zero_extendqisi2
 405:flight/libraries/printf/printf.c ****   return (printf_size_t)(s - str);
 4745              		.loc 1 405 3 is_stmt 0 view .LVU1250
 4746 04c8 12B1     		cbz	r2, .L340
 405:flight/libraries/printf/printf.c ****   return (printf_size_t)(s - str);
 4747              		.loc 1 405 30 view .LVU1251
 4748 04ca 5A1E     		subs	r2, r3, #1
 4749              	.LVL449:
 405:flight/libraries/printf/printf.c ****   return (printf_size_t)(s - str);
 4750              		.loc 1 405 20 view .LVU1252
 4751 04cc 002B     		cmp	r3, #0
 4752 04ce F6D1     		bne	.L341
 4753              	.LVL450:
 4754              	.L340:
 406:flight/libraries/printf/printf.c **** }
 4755              		.loc 1 406 3 is_stmt 1 view .LVU1253
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 121


 406:flight/libraries/printf/printf.c **** }
 4756              		.loc 1 406 28 is_stmt 0 view .LVU1254
 4757 04d0 A8EB0908 		sub	r8, r8, r9
 4758              	.LVL451:
 406:flight/libraries/printf/printf.c **** }
 4759              		.loc 1 406 28 view .LVU1255
 4760              	.LBE193:
 4761              	.LBE192:
1278:flight/libraries/printf/printf.c ****           // pre padding
1279:flight/libraries/printf/printf.c ****           if (flags & FLAGS_PRECISION) {
 4762              		.loc 1 1279 11 is_stmt 1 view .LVU1256
 4763              		.loc 1 1279 14 is_stmt 0 view .LVU1257
 4764 04d4 15F4006A 		ands	r10, r5, #2048
 4765 04d8 02D0     		beq	.L342
1280:flight/libraries/printf/printf.c ****             l = (l < precision ? l : precision);
 4766              		.loc 1 1280 13 is_stmt 1 view .LVU1258
 4767              		.loc 1 1280 15 is_stmt 0 view .LVU1259
 4768 04da B045     		cmp	r8, r6
 4769 04dc 28BF     		it	cs
 4770 04de B046     		movcs	r8, r6
 4771              	.LVL452:
 4772              	.L342:
1281:flight/libraries/printf/printf.c ****           }
1282:flight/libraries/printf/printf.c ****           if (!(flags & FLAGS_LEFT)) {
 4773              		.loc 1 1282 11 is_stmt 1 view .LVU1260
 4774              		.loc 1 1282 14 is_stmt 0 view .LVU1261
 4775 04e0 15F00205 		ands	r5, r5, #2
 4776              	.LVL453:
 4777              		.loc 1 1282 14 view .LVU1262
 4778 04e4 1CD1     		bne	.L350
 4779              		.loc 1 1282 14 view .LVU1263
 4780 04e6 05E0     		b	.L343
 4781              	.LVL454:
 4782              	.L337:
1277:flight/libraries/printf/printf.c ****           // pre padding
 4783              		.loc 1 1277 29 view .LVU1264
 4784 04e8 3346     		mov	r3, r6
 4785 04ea DEE7     		b	.L338
 4786              	.LVL455:
 4787              	.L400:
 4788              	.LBB194:
 4789              	.LBB195:
 331:flight/libraries/printf/printf.c ****   }
 4790              		.loc 1 331 5 is_stmt 1 view .LVU1265
 4791 04ec 6168     		ldr	r1, [r4, #4]
 4792 04ee 2020     		movs	r0, #32
 4793 04f0 9047     		blx	r2
 4794              	.LVL456:
 4795              	.L345:
 331:flight/libraries/printf/printf.c ****   }
 4796              		.loc 1 331 5 is_stmt 0 view .LVU1266
 4797              	.LBE195:
 4798              	.LBE194:
1283:flight/libraries/printf/printf.c ****             while (l++ < width) {
 4799              		.loc 1 1283 21 view .LVU1267
 4800 04f2 D846     		mov	r8, fp
 4801              	.LVL457:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 122


 4802              	.L343:
 4803              		.loc 1 1283 19 is_stmt 1 view .LVU1268
 4804              		.loc 1 1283 21 is_stmt 0 view .LVU1269
 4805 04f4 08F1010B 		add	fp, r8, #1
 4806              	.LVL458:
 4807              		.loc 1 1283 19 view .LVU1270
 4808 04f8 4745     		cmp	r7, r8
 4809 04fa 0CD9     		bls	.L399
1284:flight/libraries/printf/printf.c ****               putchar_via_gadget(output, ' ');
 4810              		.loc 1 1284 15 is_stmt 1 view .LVU1271
 4811              	.LVL459:
 4812              	.LBB197:
 4813              	.LBI194:
 321:flight/libraries/printf/printf.c **** {
 4814              		.loc 1 321 20 view .LVU1272
 4815              	.LBB196:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4816              		.loc 1 323 3 view .LVU1273
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4817              		.loc 1 323 35 is_stmt 0 view .LVU1274
 4818 04fc E368     		ldr	r3, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4819              		.loc 1 323 40 view .LVU1275
 4820 04fe 5A1C     		adds	r2, r3, #1
 4821 0500 E260     		str	r2, [r4, #12]
 4822              	.LVL460:
 326:flight/libraries/printf/printf.c ****     return;
 4823              		.loc 1 326 3 is_stmt 1 view .LVU1276
 326:flight/libraries/printf/printf.c ****     return;
 4824              		.loc 1 326 26 is_stmt 0 view .LVU1277
 4825 0502 2269     		ldr	r2, [r4, #16]
 326:flight/libraries/printf/printf.c ****     return;
 4826              		.loc 1 326 6 view .LVU1278
 4827 0504 9342     		cmp	r3, r2
 4828 0506 F4D2     		bcs	.L345
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4829              		.loc 1 329 3 is_stmt 1 view .LVU1279
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4830              		.loc 1 329 13 is_stmt 0 view .LVU1280
 4831 0508 2268     		ldr	r2, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4832              		.loc 1 329 6 view .LVU1281
 4833 050a 002A     		cmp	r2, #0
 4834 050c EED1     		bne	.L400
 336:flight/libraries/printf/printf.c ****   }
 4835              		.loc 1 336 5 is_stmt 1 view .LVU1282
 336:flight/libraries/printf/printf.c ****   }
 4836              		.loc 1 336 11 is_stmt 0 view .LVU1283
 4837 050e A268     		ldr	r2, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 4838              		.loc 1 336 31 view .LVU1284
 4839 0510 2021     		movs	r1, #32
 4840 0512 D154     		strb	r1, [r2, r3]
 4841 0514 EDE7     		b	.L345
 4842              	.LVL461:
 4843              	.L399:
 336:flight/libraries/printf/printf.c ****   }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 123


 4844              		.loc 1 336 31 view .LVU1285
 4845              	.LBE196:
 4846              	.LBE197:
1283:flight/libraries/printf/printf.c ****               putchar_via_gadget(output, ' ');
 4847              		.loc 1 1283 21 view .LVU1286
 4848 0516 D846     		mov	r8, fp
 4849 0518 02E0     		b	.L350
 4850              	.LVL462:
 4851              	.L349:
 4852              	.LBB198:
 4853              	.LBB199:
 336:flight/libraries/printf/printf.c ****   }
 4854              		.loc 1 336 5 is_stmt 1 view .LVU1287
 336:flight/libraries/printf/printf.c ****   }
 4855              		.loc 1 336 11 is_stmt 0 view .LVU1288
 4856 051a A268     		ldr	r2, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 4857              		.loc 1 336 31 view .LVU1289
 4858 051c D054     		strb	r0, [r2, r3]
 4859              	.LVL463:
 4860              	.L348:
 336:flight/libraries/printf/printf.c ****   }
 4861              		.loc 1 336 31 view .LVU1290
 4862              	.LBE199:
 4863              	.LBE198:
1285:flight/libraries/printf/printf.c ****             }
1286:flight/libraries/printf/printf.c ****           }
1287:flight/libraries/printf/printf.c ****           // string output
1288:flight/libraries/printf/printf.c ****           while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision)) {
1289:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, *(p++));
1290:flight/libraries/printf/printf.c ****             --precision;
 4864              		.loc 1 1290 13 is_stmt 1 view .LVU1291
 4865 051e 013E     		subs	r6, r6, #1
 4866              	.LVL464:
 4867              	.L350:
1288:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, *(p++));
 4868              		.loc 1 1288 17 view .LVU1292
1288:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, *(p++));
 4869              		.loc 1 1288 19 is_stmt 0 view .LVU1293
 4870 0520 99F80000 		ldrb	r0, [r9]	@ zero_extendqisi2
1288:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, *(p++));
 4871              		.loc 1 1288 17 view .LVU1294
 4872 0524 88B1     		cbz	r0, .L351
1288:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, *(p++));
 4873              		.loc 1 1288 28 discriminator 1 view .LVU1295
 4874 0526 BAF1000F 		cmp	r10, #0
 4875 052a 00D0     		beq	.L352
1288:flight/libraries/printf/printf.c ****             putchar_via_gadget(output, *(p++));
 4876              		.loc 1 1288 59 discriminator 2 view .LVU1296
 4877 052c 6EB1     		cbz	r6, .L351
 4878              	.L352:
1289:flight/libraries/printf/printf.c ****             --precision;
 4879              		.loc 1 1289 13 is_stmt 1 view .LVU1297
1289:flight/libraries/printf/printf.c ****             --precision;
 4880              		.loc 1 1289 43 is_stmt 0 view .LVU1298
 4881 052e 09F10109 		add	r9, r9, #1
 4882              	.LVL465:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 124


 4883              	.LBB201:
 4884              	.LBI198:
 321:flight/libraries/printf/printf.c **** {
 4885              		.loc 1 321 20 is_stmt 1 view .LVU1299
 4886              	.LBB200:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4887              		.loc 1 323 3 view .LVU1300
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4888              		.loc 1 323 35 is_stmt 0 view .LVU1301
 4889 0532 E368     		ldr	r3, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4890              		.loc 1 323 40 view .LVU1302
 4891 0534 5A1C     		adds	r2, r3, #1
 4892 0536 E260     		str	r2, [r4, #12]
 4893              	.LVL466:
 326:flight/libraries/printf/printf.c ****     return;
 4894              		.loc 1 326 3 is_stmt 1 view .LVU1303
 326:flight/libraries/printf/printf.c ****     return;
 4895              		.loc 1 326 26 is_stmt 0 view .LVU1304
 4896 0538 2269     		ldr	r2, [r4, #16]
 326:flight/libraries/printf/printf.c ****     return;
 4897              		.loc 1 326 6 view .LVU1305
 4898 053a 9342     		cmp	r3, r2
 4899 053c EFD2     		bcs	.L348
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4900              		.loc 1 329 3 is_stmt 1 view .LVU1306
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4901              		.loc 1 329 13 is_stmt 0 view .LVU1307
 4902 053e 2268     		ldr	r2, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4903              		.loc 1 329 6 view .LVU1308
 4904 0540 002A     		cmp	r2, #0
 4905 0542 EAD0     		beq	.L349
 331:flight/libraries/printf/printf.c ****   }
 4906              		.loc 1 331 5 is_stmt 1 view .LVU1309
 4907 0544 6168     		ldr	r1, [r4, #4]
 4908 0546 9047     		blx	r2
 4909              	.LVL467:
 331:flight/libraries/printf/printf.c ****   }
 4910              		.loc 1 331 5 is_stmt 0 view .LVU1310
 4911 0548 E9E7     		b	.L348
 4912              	.LVL468:
 4913              	.L351:
 331:flight/libraries/printf/printf.c ****   }
 4914              		.loc 1 331 5 view .LVU1311
 4915              	.LBE200:
 4916              	.LBE201:
1291:flight/libraries/printf/printf.c ****           }
1292:flight/libraries/printf/printf.c ****           // post padding
1293:flight/libraries/printf/printf.c ****           if (flags & FLAGS_LEFT) {
 4917              		.loc 1 1293 11 is_stmt 1 view .LVU1312
 4918              		.loc 1 1293 14 is_stmt 0 view .LVU1313
 4919 054a 3DB9     		cbnz	r5, .L353
 4920              	.LVL469:
 4921              	.L336:
 4922              		.loc 1 1293 14 view .LVU1314
 4923              	.LBE206:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 125


1294:flight/libraries/printf/printf.c ****             while (l++ < width) {
1295:flight/libraries/printf/printf.c ****               putchar_via_gadget(output, ' ');
1296:flight/libraries/printf/printf.c ****             }
1297:flight/libraries/printf/printf.c ****           }
1298:flight/libraries/printf/printf.c ****         }
1299:flight/libraries/printf/printf.c ****         format++;
 4924              		.loc 1 1299 9 is_stmt 1 view .LVU1315
 4925              		.loc 1 1299 15 is_stmt 0 view .LVU1316
 4926 054c 079B     		ldr	r3, [sp, #28]
 4927 054e 0133     		adds	r3, r3, #1
 4928 0550 0793     		str	r3, [sp, #28]
1300:flight/libraries/printf/printf.c ****         break;
 4929              		.loc 1 1300 9 is_stmt 1 view .LVU1317
 4930 0552 6AE5     		b	.L269
 4931              	.LVL470:
 4932              	.L401:
 4933              	.LBB207:
 4934              	.LBB202:
 4935              	.LBB203:
 331:flight/libraries/printf/printf.c ****   }
 4936              		.loc 1 331 5 view .LVU1318
 4937 0554 6168     		ldr	r1, [r4, #4]
 4938 0556 2020     		movs	r0, #32
 4939 0558 9047     		blx	r2
 4940              	.LVL471:
 4941              	.L354:
 331:flight/libraries/printf/printf.c ****   }
 4942              		.loc 1 331 5 is_stmt 0 view .LVU1319
 4943              	.LBE203:
 4944              	.LBE202:
1294:flight/libraries/printf/printf.c ****             while (l++ < width) {
 4945              		.loc 1 1294 21 view .LVU1320
 4946 055a A846     		mov	r8, r5
 4947              	.LVL472:
 4948              	.L353:
1294:flight/libraries/printf/printf.c ****             while (l++ < width) {
 4949              		.loc 1 1294 19 is_stmt 1 view .LVU1321
1294:flight/libraries/printf/printf.c ****             while (l++ < width) {
 4950              		.loc 1 1294 21 is_stmt 0 view .LVU1322
 4951 055c 08F10105 		add	r5, r8, #1
 4952              	.LVL473:
1294:flight/libraries/printf/printf.c ****             while (l++ < width) {
 4953              		.loc 1 1294 19 view .LVU1323
 4954 0560 4745     		cmp	r7, r8
 4955 0562 F3D9     		bls	.L336
1295:flight/libraries/printf/printf.c ****             }
 4956              		.loc 1 1295 15 is_stmt 1 view .LVU1324
 4957              	.LVL474:
 4958              	.LBB205:
 4959              	.LBI202:
 321:flight/libraries/printf/printf.c **** {
 4960              		.loc 1 321 20 view .LVU1325
 4961              	.LBB204:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4962              		.loc 1 323 3 view .LVU1326
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4963              		.loc 1 323 35 is_stmt 0 view .LVU1327
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 126


 4964 0564 E368     		ldr	r3, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 4965              		.loc 1 323 40 view .LVU1328
 4966 0566 5A1C     		adds	r2, r3, #1
 4967 0568 E260     		str	r2, [r4, #12]
 4968              	.LVL475:
 326:flight/libraries/printf/printf.c ****     return;
 4969              		.loc 1 326 3 is_stmt 1 view .LVU1329
 326:flight/libraries/printf/printf.c ****     return;
 4970              		.loc 1 326 26 is_stmt 0 view .LVU1330
 4971 056a 2269     		ldr	r2, [r4, #16]
 326:flight/libraries/printf/printf.c ****     return;
 4972              		.loc 1 326 6 view .LVU1331
 4973 056c 9342     		cmp	r3, r2
 4974 056e F4D2     		bcs	.L354
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4975              		.loc 1 329 3 is_stmt 1 view .LVU1332
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4976              		.loc 1 329 13 is_stmt 0 view .LVU1333
 4977 0570 2268     		ldr	r2, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 4978              		.loc 1 329 6 view .LVU1334
 4979 0572 002A     		cmp	r2, #0
 4980 0574 EED1     		bne	.L401
 336:flight/libraries/printf/printf.c ****   }
 4981              		.loc 1 336 5 is_stmt 1 view .LVU1335
 336:flight/libraries/printf/printf.c ****   }
 4982              		.loc 1 336 11 is_stmt 0 view .LVU1336
 4983 0576 A268     		ldr	r2, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 4984              		.loc 1 336 31 view .LVU1337
 4985 0578 2021     		movs	r1, #32
 4986 057a D154     		strb	r1, [r2, r3]
 4987 057c EDE7     		b	.L354
 4988              	.LVL476:
 4989              	.L291:
 336:flight/libraries/printf/printf.c ****   }
 4990              		.loc 1 336 31 view .LVU1338
 4991              	.LBE204:
 4992              	.LBE205:
 4993              	.LBE207:
 4994              	.LBE190:
 4995              	.LBB208:
1301:flight/libraries/printf/printf.c ****       }
1302:flight/libraries/printf/printf.c **** 
1303:flight/libraries/printf/printf.c ****       case 'p' : {
1304:flight/libraries/printf/printf.c ****         width = sizeof(void*) * 2U + 2; // 2 hex chars per byte + the "0x" prefix
 4996              		.loc 1 1304 9 is_stmt 1 view .LVU1339
1305:flight/libraries/printf/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_POINTER;
 4997              		.loc 1 1305 9 view .LVU1340
 4998              		.loc 1 1305 15 is_stmt 0 view .LVU1341
 4999 057e 45F40055 		orr	r5, r5, #8192
 5000              	.LVL477:
 5001              		.loc 1 1305 15 view .LVU1342
 5002 0582 45F00105 		orr	r5, r5, #1
 5003              	.LVL478:
1306:flight/libraries/printf/printf.c ****         uintptr_t value = (uintptr_t)va_arg(args, void*);
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 127


 5004              		.loc 1 1306 9 is_stmt 1 view .LVU1343
 5005              		.loc 1 1306 38 is_stmt 0 view .LVU1344
 5006 0586 069B     		ldr	r3, [sp, #24]
 5007 0588 1A1D     		adds	r2, r3, #4
 5008 058a 0692     		str	r2, [sp, #24]
 5009 058c 1A68     		ldr	r2, [r3]
 5010              	.LVL479:
1307:flight/libraries/printf/printf.c ****         (value == (uintptr_t) NULL) ?
 5011              		.loc 1 1307 9 is_stmt 1 view .LVU1345
1308:flight/libraries/printf/printf.c ****           out_rev_(output, ")lin(", 5, width, flags) :
 5012              		.loc 1 1308 54 is_stmt 0 view .LVU1346
 5013 058e 72B1     		cbz	r2, .L402
1309:flight/libraries/printf/printf.c ****           print_integer(output, (printf_unsigned_value_t) value, false, BASE_HEX, precision, width,
 5014              		.loc 1 1309 11 view .LVU1347
 5015 0590 0023     		movs	r3, #0
 5016 0592 0495     		str	r5, [sp, #16]
 5017 0594 0A21     		movs	r1, #10
 5018 0596 0391     		str	r1, [sp, #12]
 5019 0598 0296     		str	r6, [sp, #8]
 5020 059a 1021     		movs	r1, #16
 5021 059c 0191     		str	r1, [sp, #4]
 5022 059e 0093     		str	r3, [sp]
 5023 05a0 2046     		mov	r0, r4
 5024 05a2 FFF7FEFF 		bl	print_integer
 5025              	.LVL480:
 5026              	.L358:
1310:flight/libraries/printf/printf.c ****         format++;
 5027              		.loc 1 1310 9 is_stmt 1 view .LVU1348
 5028              		.loc 1 1310 15 is_stmt 0 view .LVU1349
 5029 05a6 079B     		ldr	r3, [sp, #28]
 5030 05a8 0133     		adds	r3, r3, #1
 5031 05aa 0793     		str	r3, [sp, #28]
1311:flight/libraries/printf/printf.c ****         break;
 5032              		.loc 1 1311 9 is_stmt 1 view .LVU1350
 5033 05ac 3DE5     		b	.L269
 5034              	.LVL481:
 5035              	.L402:
1308:flight/libraries/printf/printf.c ****           print_integer(output, (printf_unsigned_value_t) value, false, BASE_HEX, precision, width,
 5036              		.loc 1 1308 11 is_stmt 0 discriminator 1 view .LVU1351
 5037 05ae 0095     		str	r5, [sp]
 5038 05b0 0A23     		movs	r3, #10
 5039 05b2 0522     		movs	r2, #5
 5040              	.LVL482:
1308:flight/libraries/printf/printf.c ****           print_integer(output, (printf_unsigned_value_t) value, false, BASE_HEX, precision, width,
 5041              		.loc 1 1308 11 discriminator 1 view .LVU1352
 5042 05b4 3949     		ldr	r1, .L404+4
 5043 05b6 2046     		mov	r0, r4
 5044 05b8 FFF7FEFF 		bl	out_rev_
 5045              	.LVL483:
 5046 05bc F3E7     		b	.L358
 5047              	.LVL484:
 5048              	.L296:
1308:flight/libraries/printf/printf.c ****           print_integer(output, (printf_unsigned_value_t) value, false, BASE_HEX, precision, width,
 5049              		.loc 1 1308 11 discriminator 1 view .LVU1353
 5050              	.LBE208:
1312:flight/libraries/printf/printf.c ****       }
1313:flight/libraries/printf/printf.c **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 128


1314:flight/libraries/printf/printf.c ****       case '%' :
1315:flight/libraries/printf/printf.c ****         putchar_via_gadget(output, '%');
 5051              		.loc 1 1315 9 is_stmt 1 view .LVU1354
 5052              	.LBB209:
 5053              	.LBI209:
 321:flight/libraries/printf/printf.c **** {
 5054              		.loc 1 321 20 view .LVU1355
 5055              	.LBB210:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 5056              		.loc 1 323 3 view .LVU1356
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 5057              		.loc 1 323 35 is_stmt 0 view .LVU1357
 5058 05be E368     		ldr	r3, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 5059              		.loc 1 323 40 view .LVU1358
 5060 05c0 5A1C     		adds	r2, r3, #1
 5061 05c2 E260     		str	r2, [r4, #12]
 5062              	.LVL485:
 326:flight/libraries/printf/printf.c ****     return;
 5063              		.loc 1 326 3 is_stmt 1 view .LVU1359
 326:flight/libraries/printf/printf.c ****     return;
 5064              		.loc 1 326 26 is_stmt 0 view .LVU1360
 5065 05c4 2269     		ldr	r2, [r4, #16]
 326:flight/libraries/printf/printf.c ****     return;
 5066              		.loc 1 326 6 view .LVU1361
 5067 05c6 9342     		cmp	r3, r2
 5068 05c8 04D2     		bcs	.L359
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 5069              		.loc 1 329 3 is_stmt 1 view .LVU1362
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 5070              		.loc 1 329 13 is_stmt 0 view .LVU1363
 5071 05ca 2268     		ldr	r2, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 5072              		.loc 1 329 6 view .LVU1364
 5073 05cc 32B1     		cbz	r2, .L360
 331:flight/libraries/printf/printf.c ****   }
 5074              		.loc 1 331 5 is_stmt 1 view .LVU1365
 5075 05ce 6168     		ldr	r1, [r4, #4]
 5076 05d0 2520     		movs	r0, #37
 5077 05d2 9047     		blx	r2
 5078              	.LVL486:
 5079              	.L359:
 331:flight/libraries/printf/printf.c ****   }
 5080              		.loc 1 331 5 is_stmt 0 view .LVU1366
 5081              	.LBE210:
 5082              	.LBE209:
1316:flight/libraries/printf/printf.c ****         format++;
 5083              		.loc 1 1316 9 is_stmt 1 view .LVU1367
 5084              		.loc 1 1316 15 is_stmt 0 view .LVU1368
 5085 05d4 079B     		ldr	r3, [sp, #28]
 5086 05d6 0133     		adds	r3, r3, #1
 5087 05d8 0793     		str	r3, [sp, #28]
1317:flight/libraries/printf/printf.c ****         break;
 5088              		.loc 1 1317 9 is_stmt 1 view .LVU1369
 5089 05da 26E5     		b	.L269
 5090              	.LVL487:
 5091              	.L360:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 129


 5092              	.LBB212:
 5093              	.LBB211:
 336:flight/libraries/printf/printf.c ****   }
 5094              		.loc 1 336 5 view .LVU1370
 336:flight/libraries/printf/printf.c ****   }
 5095              		.loc 1 336 11 is_stmt 0 view .LVU1371
 5096 05dc A268     		ldr	r2, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 5097              		.loc 1 336 31 view .LVU1372
 5098 05de 2521     		movs	r1, #37
 5099 05e0 D154     		strb	r1, [r2, r3]
 5100 05e2 F7E7     		b	.L359
 5101              	.LVL488:
 5102              	.L292:
 336:flight/libraries/printf/printf.c ****   }
 5103              		.loc 1 336 31 view .LVU1373
 5104              	.LBE211:
 5105              	.LBE212:
1318:flight/libraries/printf/printf.c **** 
1319:flight/libraries/printf/printf.c ****       // Many people prefer to disable support for %n, as it lets the caller
1320:flight/libraries/printf/printf.c ****       // engineer a write to an arbitrary location, of a value the caller
1321:flight/libraries/printf/printf.c ****       // effectively controls - which could be a security concern in some cases.
1322:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_WRITEBACK_SPECIFIER
1323:flight/libraries/printf/printf.c ****       case 'n' : {
1324:flight/libraries/printf/printf.c ****         if       (flags & FLAGS_CHAR)      *(va_arg(args, char*))      = (char) output->pos;
 5106              		.loc 1 1324 9 is_stmt 1 view .LVU1374
 5107              		.loc 1 1324 18 is_stmt 0 view .LVU1375
 5108 05e4 15F0400F 		tst	r5, #64
 5109 05e8 09D0     		beq	.L361
 5110              		.loc 1 1324 44 is_stmt 1 discriminator 1 view .LVU1376
 5111              		.loc 1 1324 46 is_stmt 0 discriminator 1 view .LVU1377
 5112 05ea 069B     		ldr	r3, [sp, #24]
 5113 05ec 1A1D     		adds	r2, r3, #4
 5114 05ee 0692     		str	r2, [sp, #24]
 5115 05f0 1B68     		ldr	r3, [r3]
 5116              		.loc 1 1324 74 discriminator 1 view .LVU1378
 5117 05f2 227B     		ldrb	r2, [r4, #12]	@ zero_extendqisi2
 5118              		.loc 1 1324 72 discriminator 1 view .LVU1379
 5119 05f4 1A70     		strb	r2, [r3]
 5120              	.L362:
1325:flight/libraries/printf/printf.c ****         else if  (flags & FLAGS_SHORT)     *(va_arg(args, short*))     = (short) output->pos;
1326:flight/libraries/printf/printf.c ****         else if  (flags & FLAGS_LONG)      *(va_arg(args, long*))      = (long) output->pos;
1327:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_LONG_LONG
1328:flight/libraries/printf/printf.c ****         else if  (flags & FLAGS_LONG_LONG) *(va_arg(args, long long*)) = (long long int) output->po
1329:flight/libraries/printf/printf.c **** #endif // PRINTF_SUPPORT_LONG_LONG
1330:flight/libraries/printf/printf.c ****         else                               *(va_arg(args, int*))       = (int) output->pos;
1331:flight/libraries/printf/printf.c ****         format++;
 5121              		.loc 1 1331 9 is_stmt 1 view .LVU1380
 5122              		.loc 1 1331 15 is_stmt 0 view .LVU1381
 5123 05f6 079B     		ldr	r3, [sp, #28]
 5124 05f8 0133     		adds	r3, r3, #1
 5125 05fa 0793     		str	r3, [sp, #28]
1332:flight/libraries/printf/printf.c ****         break;
 5126              		.loc 1 1332 9 is_stmt 1 view .LVU1382
 5127 05fc 15E5     		b	.L269
 5128              	.L361:
1325:flight/libraries/printf/printf.c ****         else if  (flags & FLAGS_SHORT)     *(va_arg(args, short*))     = (short) output->pos;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 130


 5129              		.loc 1 1325 14 view .LVU1383
1325:flight/libraries/printf/printf.c ****         else if  (flags & FLAGS_SHORT)     *(va_arg(args, short*))     = (short) output->pos;
 5130              		.loc 1 1325 18 is_stmt 0 view .LVU1384
 5131 05fe 15F0800F 		tst	r5, #128
 5132 0602 07D0     		beq	.L363
1325:flight/libraries/printf/printf.c ****         else if  (flags & FLAGS_SHORT)     *(va_arg(args, short*))     = (short) output->pos;
 5133              		.loc 1 1325 44 is_stmt 1 discriminator 1 view .LVU1385
1325:flight/libraries/printf/printf.c ****         else if  (flags & FLAGS_SHORT)     *(va_arg(args, short*))     = (short) output->pos;
 5134              		.loc 1 1325 46 is_stmt 0 discriminator 1 view .LVU1386
 5135 0604 069B     		ldr	r3, [sp, #24]
 5136 0606 1A1D     		adds	r2, r3, #4
 5137 0608 0692     		str	r2, [sp, #24]
 5138 060a 1B68     		ldr	r3, [r3]
1325:flight/libraries/printf/printf.c ****         else if  (flags & FLAGS_SHORT)     *(va_arg(args, short*))     = (short) output->pos;
 5139              		.loc 1 1325 74 discriminator 1 view .LVU1387
 5140 060c B4F90C20 		ldrsh	r2, [r4, #12]
1325:flight/libraries/printf/printf.c ****         else if  (flags & FLAGS_SHORT)     *(va_arg(args, short*))     = (short) output->pos;
 5141              		.loc 1 1325 72 discriminator 1 view .LVU1388
 5142 0610 1A80     		strh	r2, [r3]	@ movhi
 5143 0612 F0E7     		b	.L362
 5144              	.L363:
1326:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_LONG_LONG
 5145              		.loc 1 1326 14 is_stmt 1 view .LVU1389
1326:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_LONG_LONG
 5146              		.loc 1 1326 18 is_stmt 0 view .LVU1390
 5147 0614 15F4007F 		tst	r5, #512
 5148 0618 06D0     		beq	.L364
1326:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_LONG_LONG
 5149              		.loc 1 1326 44 is_stmt 1 discriminator 1 view .LVU1391
1326:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_LONG_LONG
 5150              		.loc 1 1326 87 is_stmt 0 discriminator 1 view .LVU1392
 5151 061a E268     		ldr	r2, [r4, #12]
1326:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_LONG_LONG
 5152              		.loc 1 1326 46 discriminator 1 view .LVU1393
 5153 061c 069B     		ldr	r3, [sp, #24]
 5154 061e 191D     		adds	r1, r3, #4
 5155 0620 0691     		str	r1, [sp, #24]
 5156 0622 1B68     		ldr	r3, [r3]
1326:flight/libraries/printf/printf.c **** #if PRINTF_SUPPORT_LONG_LONG
 5157              		.loc 1 1326 72 discriminator 1 view .LVU1394
 5158 0624 1A60     		str	r2, [r3]
 5159 0626 E6E7     		b	.L362
 5160              	.L364:
1328:flight/libraries/printf/printf.c **** #endif // PRINTF_SUPPORT_LONG_LONG
 5161              		.loc 1 1328 14 is_stmt 1 view .LVU1395
1328:flight/libraries/printf/printf.c **** #endif // PRINTF_SUPPORT_LONG_LONG
 5162              		.loc 1 1328 18 is_stmt 0 view .LVU1396
 5163 0628 15F4806F 		tst	r5, #1024
 5164 062c 08D0     		beq	.L365
1328:flight/libraries/printf/printf.c **** #endif // PRINTF_SUPPORT_LONG_LONG
 5165              		.loc 1 1328 44 is_stmt 1 discriminator 1 view .LVU1397
1328:flight/libraries/printf/printf.c **** #endif // PRINTF_SUPPORT_LONG_LONG
 5166              		.loc 1 1328 96 is_stmt 0 discriminator 1 view .LVU1398
 5167 062e E268     		ldr	r2, [r4, #12]
1328:flight/libraries/printf/printf.c **** #endif // PRINTF_SUPPORT_LONG_LONG
 5168              		.loc 1 1328 46 discriminator 1 view .LVU1399
 5169 0630 069B     		ldr	r3, [sp, #24]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 131


 5170 0632 191D     		adds	r1, r3, #4
 5171 0634 0691     		str	r1, [sp, #24]
 5172 0636 1B68     		ldr	r3, [r3]
1328:flight/libraries/printf/printf.c **** #endif // PRINTF_SUPPORT_LONG_LONG
 5173              		.loc 1 1328 72 discriminator 1 view .LVU1400
 5174 0638 1A60     		str	r2, [r3]
 5175 063a 0022     		movs	r2, #0
 5176 063c 5A60     		str	r2, [r3, #4]
 5177 063e DAE7     		b	.L362
 5178              	.L365:
1330:flight/libraries/printf/printf.c ****         format++;
 5179              		.loc 1 1330 44 is_stmt 1 view .LVU1401
1330:flight/libraries/printf/printf.c ****         format++;
 5180              		.loc 1 1330 86 is_stmt 0 view .LVU1402
 5181 0640 E268     		ldr	r2, [r4, #12]
1330:flight/libraries/printf/printf.c ****         format++;
 5182              		.loc 1 1330 46 view .LVU1403
 5183 0642 069B     		ldr	r3, [sp, #24]
 5184 0644 191D     		adds	r1, r3, #4
 5185 0646 0691     		str	r1, [sp, #24]
 5186 0648 1B68     		ldr	r3, [r3]
1330:flight/libraries/printf/printf.c ****         format++;
 5187              		.loc 1 1330 72 view .LVU1404
 5188 064a 1A60     		str	r2, [r3]
 5189 064c D3E7     		b	.L362
 5190              	.L287:
1333:flight/libraries/printf/printf.c ****       }
1334:flight/libraries/printf/printf.c **** #endif // PRINTF_SUPPORT_WRITEBACK_SPECIFIER
1335:flight/libraries/printf/printf.c **** 
1336:flight/libraries/printf/printf.c ****       default :
1337:flight/libraries/printf/printf.c ****         putchar_via_gadget(output, *format);
 5191              		.loc 1 1337 9 is_stmt 1 view .LVU1405
 5192              	.LVL489:
 5193              	.LBB213:
 5194              	.LBI213:
 321:flight/libraries/printf/printf.c **** {
 5195              		.loc 1 321 20 view .LVU1406
 5196              	.LBB214:
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 5197              		.loc 1 323 3 view .LVU1407
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 5198              		.loc 1 323 35 is_stmt 0 view .LVU1408
 5199 064e E368     		ldr	r3, [r4, #12]
 323:flight/libraries/printf/printf.c ****     // We're _always_ increasing pos, so as to count how may characters
 5200              		.loc 1 323 40 view .LVU1409
 5201 0650 5A1C     		adds	r2, r3, #1
 5202 0652 E260     		str	r2, [r4, #12]
 5203              	.LVL490:
 326:flight/libraries/printf/printf.c ****     return;
 5204              		.loc 1 326 3 is_stmt 1 view .LVU1410
 326:flight/libraries/printf/printf.c ****     return;
 5205              		.loc 1 326 26 is_stmt 0 view .LVU1411
 5206 0654 2269     		ldr	r2, [r4, #16]
 326:flight/libraries/printf/printf.c ****     return;
 5207              		.loc 1 326 6 view .LVU1412
 5208 0656 9342     		cmp	r3, r2
 5209 0658 03D2     		bcs	.L366
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 132


 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 5210              		.loc 1 329 3 is_stmt 1 view .LVU1413
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 5211              		.loc 1 329 13 is_stmt 0 view .LVU1414
 5212 065a 2268     		ldr	r2, [r4]
 329:flight/libraries/printf/printf.c ****     // No check for c == '\0' .
 5213              		.loc 1 329 6 view .LVU1415
 5214 065c 2AB1     		cbz	r2, .L367
 331:flight/libraries/printf/printf.c ****   }
 5215              		.loc 1 331 5 is_stmt 1 view .LVU1416
 5216 065e 6168     		ldr	r1, [r4, #4]
 5217 0660 9047     		blx	r2
 5218              	.LVL491:
 5219              	.L366:
 331:flight/libraries/printf/printf.c ****   }
 5220              		.loc 1 331 5 is_stmt 0 view .LVU1417
 5221              	.LBE214:
 5222              	.LBE213:
1338:flight/libraries/printf/printf.c ****         format++;
 5223              		.loc 1 1338 9 is_stmt 1 view .LVU1418
 5224              		.loc 1 1338 15 is_stmt 0 view .LVU1419
 5225 0662 079B     		ldr	r3, [sp, #28]
 5226 0664 0133     		adds	r3, r3, #1
 5227 0666 0793     		str	r3, [sp, #28]
1339:flight/libraries/printf/printf.c ****         break;
 5228              		.loc 1 1339 9 is_stmt 1 view .LVU1420
 5229 0668 DFE4     		b	.L269
 5230              	.LVL492:
 5231              	.L367:
 5232              	.LBB216:
 5233              	.LBB215:
 336:flight/libraries/printf/printf.c ****   }
 5234              		.loc 1 336 5 view .LVU1421
 336:flight/libraries/printf/printf.c ****   }
 5235              		.loc 1 336 11 is_stmt 0 view .LVU1422
 5236 066a A268     		ldr	r2, [r4, #8]
 336:flight/libraries/printf/printf.c ****   }
 5237              		.loc 1 336 31 view .LVU1423
 5238 066c D054     		strb	r0, [r2, r3]
 5239 066e F8E7     		b	.L366
 5240              	.LVL493:
 5241              	.L382:
 336:flight/libraries/printf/printf.c ****   }
 5242              		.loc 1 336 31 view .LVU1424
 5243              	.LBE215:
 5244              	.LBE216:
 5245              	.LBE217:
1340:flight/libraries/printf/printf.c ****     }
1341:flight/libraries/printf/printf.c ****   }
1342:flight/libraries/printf/printf.c **** 
1343:flight/libraries/printf/printf.c ****   // termination
1344:flight/libraries/printf/printf.c ****   append_termination_with_gadget(output);
 5246              		.loc 1 1344 3 is_stmt 1 view .LVU1425
 5247              	.LBB218:
 5248              	.LBI218:
 341:flight/libraries/printf/printf.c **** {
 5249              		.loc 1 341 20 view .LVU1426
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 133


 5250              	.LBB219:
 343:flight/libraries/printf/printf.c ****     return;
 5251              		.loc 1 343 3 view .LVU1427
 343:flight/libraries/printf/printf.c ****     return;
 5252              		.loc 1 343 13 is_stmt 0 view .LVU1428
 5253 0670 2368     		ldr	r3, [r4]
 343:flight/libraries/printf/printf.c ****     return;
 5254              		.loc 1 343 6 view .LVU1429
 5255 0672 1BB1     		cbz	r3, .L403
 5256              	.L369:
 5257              	.LVL494:
 343:flight/libraries/printf/printf.c ****     return;
 5258              		.loc 1 343 6 view .LVU1430
 5259              	.LBE219:
 5260              	.LBE218:
1345:flight/libraries/printf/printf.c **** 
1346:flight/libraries/printf/printf.c ****   // return written chars without terminating \0
1347:flight/libraries/printf/printf.c ****   return (int)output->pos;
 5261              		.loc 1 1347 3 is_stmt 1 view .LVU1431
1348:flight/libraries/printf/printf.c **** }
 5262              		.loc 1 1348 1 is_stmt 0 view .LVU1432
 5263 0674 E068     		ldr	r0, [r4, #12]
 5264 0676 09B0     		add	sp, sp, #36
 5265              	.LCFI61:
 5266              		.cfi_remember_state
 5267              		.cfi_def_cfa_offset 36
 5268              		@ sp needed
 5269 0678 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5270              	.LVL495:
 5271              	.L403:
 5272              	.LCFI62:
 5273              		.cfi_restore_state
 5274              	.LBB221:
 5275              	.LBB220:
 343:flight/libraries/printf/printf.c ****     return;
 5276              		.loc 1 343 41 view .LVU1433
 5277 067c 2369     		ldr	r3, [r4, #16]
 343:flight/libraries/printf/printf.c ****     return;
 5278              		.loc 1 343 32 view .LVU1434
 5279 067e 002B     		cmp	r3, #0
 5280 0680 F8D0     		beq	.L369
 346:flight/libraries/printf/printf.c ****     return;
 5281              		.loc 1 346 3 is_stmt 1 view .LVU1435
 346:flight/libraries/printf/printf.c ****     return;
 5282              		.loc 1 346 13 is_stmt 0 view .LVU1436
 5283 0682 A168     		ldr	r1, [r4, #8]
 346:flight/libraries/printf/printf.c ****     return;
 5284              		.loc 1 346 6 view .LVU1437
 5285 0684 0029     		cmp	r1, #0
 5286 0686 F5D0     		beq	.L369
 349:flight/libraries/printf/printf.c ****   gadget->buffer[null_char_pos] = '\0';
 5287              		.loc 1 349 3 is_stmt 1 view .LVU1438
 349:flight/libraries/printf/printf.c ****   gadget->buffer[null_char_pos] = '\0';
 5288              		.loc 1 349 39 is_stmt 0 view .LVU1439
 5289 0688 E268     		ldr	r2, [r4, #12]
 349:flight/libraries/printf/printf.c ****   gadget->buffer[null_char_pos] = '\0';
 5290              		.loc 1 349 79 view .LVU1440
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 134


 5291 068a 9342     		cmp	r3, r2
 5292 068c 00D8     		bhi	.L370
 5293 068e 5A1E     		subs	r2, r3, #1
 5294              	.L370:
 5295              	.LVL496:
 350:flight/libraries/printf/printf.c **** }
 5296              		.loc 1 350 3 is_stmt 1 view .LVU1441
 350:flight/libraries/printf/printf.c **** }
 5297              		.loc 1 350 33 is_stmt 0 view .LVU1442
 5298 0690 0023     		movs	r3, #0
 5299 0692 8B54     		strb	r3, [r1, r2]
 5300 0694 EEE7     		b	.L369
 5301              	.L405:
 5302 0696 00BF     		.align	2
 5303              	.L404:
 5304 0698 00000000 		.word	.LC4
 5305 069c 08000000 		.word	.LC5
 5306              	.LBE220:
 5307              	.LBE221:
 5308              		.cfi_endproc
 5309              	.LFE29:
 5311              		.section	.text.vprintf_,"ax",%progbits
 5312              		.align	1
 5313              		.global	vprintf_
 5314              		.syntax unified
 5315              		.thumb
 5316              		.thumb_func
 5318              	vprintf_:
 5319              	.LVL497:
 5320              	.LFB30:
1349:flight/libraries/printf/printf.c **** 
1350:flight/libraries/printf/printf.c **** 
1351:flight/libraries/printf/printf.c **** ///////////////////////////////////////////////////////////////////////////////
1352:flight/libraries/printf/printf.c **** 
1353:flight/libraries/printf/printf.c **** int vprintf_(const char* format, va_list arg)
1354:flight/libraries/printf/printf.c **** {
 5321              		.loc 1 1354 1 is_stmt 1 view -0
 5322              		.cfi_startproc
 5323              		@ args = 0, pretend = 0, frame = 64
 5324              		@ frame_needed = 0, uses_anonymous_args = 0
 5325              		.loc 1 1354 1 is_stmt 0 view .LVU1444
 5326 0000 70B5     		push	{r4, r5, r6, lr}
 5327              	.LCFI63:
 5328              		.cfi_def_cfa_offset 16
 5329              		.cfi_offset 4, -16
 5330              		.cfi_offset 5, -12
 5331              		.cfi_offset 6, -8
 5332              		.cfi_offset 14, -4
 5333 0002 90B0     		sub	sp, sp, #64
 5334              	.LCFI64:
 5335              		.cfi_def_cfa_offset 80
 5336 0004 0546     		mov	r5, r0
 5337 0006 0E46     		mov	r6, r1
1355:flight/libraries/printf/printf.c ****   output_gadget_t gadget = extern_putchar_gadget();
 5338              		.loc 1 1355 3 is_stmt 1 view .LVU1445
 5339              	.LBB228:
 5340              	.LBI228:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 135


 393:flight/libraries/printf/printf.c **** {
 5341              		.loc 1 393 31 view .LVU1446
 5342              	.LBB229:
 395:flight/libraries/printf/printf.c **** }
 5343              		.loc 1 395 3 view .LVU1447
 5344              	.LVL498:
 5345              	.LBB230:
 5346              	.LBI230:
 384:flight/libraries/printf/printf.c **** {
 5347              		.loc 1 384 31 view .LVU1448
 5348              	.LBB231:
 386:flight/libraries/printf/printf.c ****   result.function = function;
 5349              		.loc 1 386 3 view .LVU1449
 5350              	.LBB232:
 5351              	.LBI232:
 361:flight/libraries/printf/printf.c **** {
 5352              		.loc 1 361 31 view .LVU1450
 5353              	.LBB233:
 363:flight/libraries/printf/printf.c ****   gadget.function = NULL;
 5354              		.loc 1 363 3 view .LVU1451
 364:flight/libraries/printf/printf.c ****   gadget.extra_function_arg = NULL;
 5355              		.loc 1 364 3 view .LVU1452
 364:flight/libraries/printf/printf.c ****   gadget.extra_function_arg = NULL;
 5356              		.loc 1 364 19 is_stmt 0 view .LVU1453
 5357 0008 0024     		movs	r4, #0
 5358 000a 0694     		str	r4, [sp, #24]
 365:flight/libraries/printf/printf.c ****   gadget.buffer = NULL;
 5359              		.loc 1 365 3 is_stmt 1 view .LVU1454
 365:flight/libraries/printf/printf.c ****   gadget.buffer = NULL;
 5360              		.loc 1 365 29 is_stmt 0 view .LVU1455
 5361 000c 0794     		str	r4, [sp, #28]
 366:flight/libraries/printf/printf.c ****   gadget.pos = 0;
 5362              		.loc 1 366 3 is_stmt 1 view .LVU1456
 366:flight/libraries/printf/printf.c ****   gadget.pos = 0;
 5363              		.loc 1 366 17 is_stmt 0 view .LVU1457
 5364 000e 0894     		str	r4, [sp, #32]
 367:flight/libraries/printf/printf.c ****   gadget.max_chars = 0;
 5365              		.loc 1 367 3 is_stmt 1 view .LVU1458
 367:flight/libraries/printf/printf.c ****   gadget.max_chars = 0;
 5366              		.loc 1 367 14 is_stmt 0 view .LVU1459
 5367 0010 0994     		str	r4, [sp, #36]
 368:flight/libraries/printf/printf.c ****   return gadget;
 5368              		.loc 1 368 3 is_stmt 1 view .LVU1460
 368:flight/libraries/printf/printf.c ****   return gadget;
 5369              		.loc 1 368 20 is_stmt 0 view .LVU1461
 5370 0012 0A94     		str	r4, [sp, #40]
 369:flight/libraries/printf/printf.c **** }
 5371              		.loc 1 369 3 is_stmt 1 view .LVU1462
 369:flight/libraries/printf/printf.c **** }
 5372              		.loc 1 369 10 is_stmt 0 view .LVU1463
 5373 0014 0DF1040C 		add	ip, sp, #4
 5374 0018 0DF1180E 		add	lr, sp, #24
 5375 001c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 5376              	.LVL499:
 369:flight/libraries/printf/printf.c **** }
 5377              		.loc 1 369 10 view .LVU1464
 5378 0020 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 136


 5379 0024 CCF80000 		str	r0, [ip]
 5380              	.LBE233:
 5381              	.LBE232:
 387:flight/libraries/printf/printf.c ****   result.extra_function_arg = extra_arg;
 5382              		.loc 1 387 3 is_stmt 1 view .LVU1465
 387:flight/libraries/printf/printf.c ****   result.extra_function_arg = extra_arg;
 5383              		.loc 1 387 19 is_stmt 0 view .LVU1466
 5384 0028 0B4B     		ldr	r3, .L408
 5385 002a 0193     		str	r3, [sp, #4]
 388:flight/libraries/printf/printf.c ****   result.max_chars = PRINTF_MAX_POSSIBLE_BUFFER_SIZE;
 5386              		.loc 1 388 3 is_stmt 1 view .LVU1467
 389:flight/libraries/printf/printf.c ****   return result;
 5387              		.loc 1 389 3 view .LVU1468
 389:flight/libraries/printf/printf.c ****   return result;
 5388              		.loc 1 389 20 is_stmt 0 view .LVU1469
 5389 002c 6FF00043 		mvn	r3, #-2147483648
 5390 0030 0593     		str	r3, [sp, #20]
 390:flight/libraries/printf/printf.c **** }
 5391              		.loc 1 390 3 is_stmt 1 view .LVU1470
 390:flight/libraries/printf/printf.c **** }
 5392              		.loc 1 390 10 is_stmt 0 view .LVU1471
 5393 0032 0DF12C0C 		add	ip, sp, #44
 5394 0036 0DF1040E 		add	lr, sp, #4
 5395 003a BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 5396 003e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 5397 0042 6FF00043 		mvn	r3, #-2147483648
 5398 0046 CCF80030 		str	r3, [ip]
 5399              	.LVL500:
 390:flight/libraries/printf/printf.c **** }
 5400              		.loc 1 390 10 view .LVU1472
 5401              	.LBE231:
 5402              	.LBE230:
 5403              	.LBE229:
 5404              	.LBE228:
1356:flight/libraries/printf/printf.c ****   return _vsnprintf(&gadget, format, arg);
 5405              		.loc 1 1356 3 is_stmt 1 view .LVU1473
 5406              		.loc 1 1356 10 is_stmt 0 view .LVU1474
 5407 004a 3246     		mov	r2, r6
 5408 004c 2946     		mov	r1, r5
 5409 004e 0BA8     		add	r0, sp, #44
 5410 0050 FFF7FEFF 		bl	_vsnprintf
 5411              	.LVL501:
1357:flight/libraries/printf/printf.c **** }
 5412              		.loc 1 1357 1 view .LVU1475
 5413 0054 10B0     		add	sp, sp, #64
 5414              	.LCFI65:
 5415              		.cfi_def_cfa_offset 16
 5416              		@ sp needed
 5417 0056 70BD     		pop	{r4, r5, r6, pc}
 5418              	.LVL502:
 5419              	.L409:
 5420              		.loc 1 1357 1 view .LVU1476
 5421              		.align	2
 5422              	.L408:
 5423 0058 00000000 		.word	putchar_wrapper
 5424              		.cfi_endproc
 5425              	.LFE30:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 137


 5427              		.section	.text.vsnprintf_,"ax",%progbits
 5428              		.align	1
 5429              		.global	vsnprintf_
 5430              		.syntax unified
 5431              		.thumb
 5432              		.thumb_func
 5434              	vsnprintf_:
 5435              	.LVL503:
 5436              	.LFB31:
1358:flight/libraries/printf/printf.c **** 
1359:flight/libraries/printf/printf.c **** int vsnprintf_(char* s, size_t n, const char* format, va_list arg)
1360:flight/libraries/printf/printf.c **** {
 5437              		.loc 1 1360 1 is_stmt 1 view -0
 5438              		.cfi_startproc
 5439              		@ args = 0, pretend = 0, frame = 64
 5440              		@ frame_needed = 0, uses_anonymous_args = 0
 5441              		.loc 1 1360 1 is_stmt 0 view .LVU1478
 5442 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5443              	.LCFI66:
 5444              		.cfi_def_cfa_offset 24
 5445              		.cfi_offset 4, -24
 5446              		.cfi_offset 5, -20
 5447              		.cfi_offset 6, -16
 5448              		.cfi_offset 7, -12
 5449              		.cfi_offset 8, -8
 5450              		.cfi_offset 14, -4
 5451 0004 90B0     		sub	sp, sp, #64
 5452              	.LCFI67:
 5453              		.cfi_def_cfa_offset 88
 5454 0006 0646     		mov	r6, r0
 5455 0008 1746     		mov	r7, r2
 5456 000a 9846     		mov	r8, r3
 5457              	.LVL504:
1361:flight/libraries/printf/printf.c ****   output_gadget_t gadget = buffer_gadget(s, n);
 5458              		.loc 1 1361 3 is_stmt 1 view .LVU1479
 5459              	.LBB238:
 5460              	.LBI238:
 372:flight/libraries/printf/printf.c **** {
 5461              		.loc 1 372 31 view .LVU1480
 5462              	.LBB239:
 374:flight/libraries/printf/printf.c ****     PRINTF_MAX_POSSIBLE_BUFFER_SIZE : (printf_size_t) buffer_size;
 5463              		.loc 1 374 3 view .LVU1481
 375:flight/libraries/printf/printf.c ****   output_gadget_t result = discarding_gadget();
 5464              		.loc 1 375 37 is_stmt 0 view .LVU1482
 5465 000c 0D1E     		subs	r5, r1, #0
 5466 000e 26DB     		blt	.L415
 5467              	.L411:
 5468              	.LVL505:
 376:flight/libraries/printf/printf.c ****   if (buffer != NULL) {
 5469              		.loc 1 376 3 is_stmt 1 view .LVU1483
 5470              	.LBB240:
 5471              	.LBI240:
 361:flight/libraries/printf/printf.c **** {
 5472              		.loc 1 361 31 view .LVU1484
 5473              	.LBB241:
 363:flight/libraries/printf/printf.c ****   gadget.function = NULL;
 5474              		.loc 1 363 3 view .LVU1485
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 138


 364:flight/libraries/printf/printf.c ****   gadget.extra_function_arg = NULL;
 5475              		.loc 1 364 3 view .LVU1486
 364:flight/libraries/printf/printf.c ****   gadget.extra_function_arg = NULL;
 5476              		.loc 1 364 19 is_stmt 0 view .LVU1487
 5477 0010 0024     		movs	r4, #0
 5478 0012 0694     		str	r4, [sp, #24]
 365:flight/libraries/printf/printf.c ****   gadget.buffer = NULL;
 5479              		.loc 1 365 3 is_stmt 1 view .LVU1488
 365:flight/libraries/printf/printf.c ****   gadget.buffer = NULL;
 5480              		.loc 1 365 29 is_stmt 0 view .LVU1489
 5481 0014 0794     		str	r4, [sp, #28]
 366:flight/libraries/printf/printf.c ****   gadget.pos = 0;
 5482              		.loc 1 366 3 is_stmt 1 view .LVU1490
 366:flight/libraries/printf/printf.c ****   gadget.pos = 0;
 5483              		.loc 1 366 17 is_stmt 0 view .LVU1491
 5484 0016 0894     		str	r4, [sp, #32]
 367:flight/libraries/printf/printf.c ****   gadget.max_chars = 0;
 5485              		.loc 1 367 3 is_stmt 1 view .LVU1492
 367:flight/libraries/printf/printf.c ****   gadget.max_chars = 0;
 5486              		.loc 1 367 14 is_stmt 0 view .LVU1493
 5487 0018 0994     		str	r4, [sp, #36]
 368:flight/libraries/printf/printf.c ****   return gadget;
 5488              		.loc 1 368 3 is_stmt 1 view .LVU1494
 368:flight/libraries/printf/printf.c ****   return gadget;
 5489              		.loc 1 368 20 is_stmt 0 view .LVU1495
 5490 001a 0A94     		str	r4, [sp, #40]
 369:flight/libraries/printf/printf.c **** }
 5491              		.loc 1 369 3 is_stmt 1 view .LVU1496
 369:flight/libraries/printf/printf.c **** }
 5492              		.loc 1 369 10 is_stmt 0 view .LVU1497
 5493 001c 0DF1040C 		add	ip, sp, #4
 5494 0020 0DF1180E 		add	lr, sp, #24
 5495 0024 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 5496              	.LVL506:
 369:flight/libraries/printf/printf.c **** }
 5497              		.loc 1 369 10 view .LVU1498
 5498 0028 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 5499 002c CCF80000 		str	r0, [ip]
 5500              	.LBE241:
 5501              	.LBE240:
 377:flight/libraries/printf/printf.c ****     result.buffer = buffer;
 5502              		.loc 1 377 3 is_stmt 1 view .LVU1499
 377:flight/libraries/printf/printf.c ****     result.buffer = buffer;
 5503              		.loc 1 377 6 is_stmt 0 view .LVU1500
 5504 0030 0EB1     		cbz	r6, .L412
 378:flight/libraries/printf/printf.c ****     result.max_chars = usable_buffer_size;
 5505              		.loc 1 378 5 is_stmt 1 view .LVU1501
 378:flight/libraries/printf/printf.c ****     result.max_chars = usable_buffer_size;
 5506              		.loc 1 378 19 is_stmt 0 view .LVU1502
 5507 0032 0396     		str	r6, [sp, #12]
 379:flight/libraries/printf/printf.c ****   }
 5508              		.loc 1 379 5 is_stmt 1 view .LVU1503
 379:flight/libraries/printf/printf.c ****   }
 5509              		.loc 1 379 22 is_stmt 0 view .LVU1504
 5510 0034 0595     		str	r5, [sp, #20]
 5511              	.L412:
 381:flight/libraries/printf/printf.c **** }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 139


 5512              		.loc 1 381 3 is_stmt 1 view .LVU1505
 381:flight/libraries/printf/printf.c **** }
 5513              		.loc 1 381 10 is_stmt 0 view .LVU1506
 5514 0036 0DF12C0C 		add	ip, sp, #44
 5515 003a 0DF1040E 		add	lr, sp, #4
 5516 003e BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 5517 0042 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 5518 0046 DEF80030 		ldr	r3, [lr]
 5519 004a CCF80030 		str	r3, [ip]
 5520              	.LVL507:
 381:flight/libraries/printf/printf.c **** }
 5521              		.loc 1 381 10 view .LVU1507
 5522              	.LBE239:
 5523              	.LBE238:
1362:flight/libraries/printf/printf.c ****   return _vsnprintf(&gadget, format, arg);
 5524              		.loc 1 1362 3 is_stmt 1 view .LVU1508
 5525              		.loc 1 1362 10 is_stmt 0 view .LVU1509
 5526 004e 4246     		mov	r2, r8
 5527 0050 3946     		mov	r1, r7
 5528 0052 0BA8     		add	r0, sp, #44
 5529 0054 FFF7FEFF 		bl	_vsnprintf
 5530              	.LVL508:
1363:flight/libraries/printf/printf.c **** }
 5531              		.loc 1 1363 1 view .LVU1510
 5532 0058 10B0     		add	sp, sp, #64
 5533              	.LCFI68:
 5534              		.cfi_remember_state
 5535              		.cfi_def_cfa_offset 24
 5536              		@ sp needed
 5537 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5538              	.LVL509:
 5539              	.L415:
 5540              	.LCFI69:
 5541              		.cfi_restore_state
 5542              	.LBB243:
 5543              	.LBB242:
 375:flight/libraries/printf/printf.c ****   output_gadget_t result = discarding_gadget();
 5544              		.loc 1 375 37 view .LVU1511
 5545 005e 6FF00045 		mvn	r5, #-2147483648
 5546 0062 D5E7     		b	.L411
 5547              	.LBE242:
 5548              	.LBE243:
 5549              		.cfi_endproc
 5550              	.LFE31:
 5552              		.section	.text.vsprintf_,"ax",%progbits
 5553              		.align	1
 5554              		.global	vsprintf_
 5555              		.syntax unified
 5556              		.thumb
 5557              		.thumb_func
 5559              	vsprintf_:
 5560              	.LVL510:
 5561              	.LFB32:
1364:flight/libraries/printf/printf.c **** 
1365:flight/libraries/printf/printf.c **** int vsprintf_(char* s, const char* format, va_list arg)
1366:flight/libraries/printf/printf.c **** {
 5562              		.loc 1 1366 1 is_stmt 1 view -0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 140


 5563              		.cfi_startproc
 5564              		@ args = 0, pretend = 0, frame = 0
 5565              		@ frame_needed = 0, uses_anonymous_args = 0
 5566              		.loc 1 1366 1 is_stmt 0 view .LVU1513
 5567 0000 08B5     		push	{r3, lr}
 5568              	.LCFI70:
 5569              		.cfi_def_cfa_offset 8
 5570              		.cfi_offset 3, -8
 5571              		.cfi_offset 14, -4
 5572 0002 1346     		mov	r3, r2
1367:flight/libraries/printf/printf.c ****   return vsnprintf_(s, PRINTF_MAX_POSSIBLE_BUFFER_SIZE, format, arg);
 5573              		.loc 1 1367 3 is_stmt 1 view .LVU1514
 5574              		.loc 1 1367 10 is_stmt 0 view .LVU1515
 5575 0004 0A46     		mov	r2, r1
 5576              	.LVL511:
 5577              		.loc 1 1367 10 view .LVU1516
 5578 0006 6FF00041 		mvn	r1, #-2147483648
 5579              	.LVL512:
 5580              		.loc 1 1367 10 view .LVU1517
 5581 000a FFF7FEFF 		bl	vsnprintf_
 5582              	.LVL513:
1368:flight/libraries/printf/printf.c **** }
 5583              		.loc 1 1368 1 view .LVU1518
 5584 000e 08BD     		pop	{r3, pc}
 5585              		.cfi_endproc
 5586              	.LFE32:
 5588              		.section	.text.vfctprintf,"ax",%progbits
 5589              		.align	1
 5590              		.global	vfctprintf
 5591              		.syntax unified
 5592              		.thumb
 5593              		.thumb_func
 5595              	vfctprintf:
 5596              	.LVL514:
 5597              	.LFB33:
1369:flight/libraries/printf/printf.c **** 
1370:flight/libraries/printf/printf.c **** int vfctprintf(void (*out)(char c, void* extra_arg), void* extra_arg, const char* format, va_list a
1371:flight/libraries/printf/printf.c **** {
 5598              		.loc 1 1371 1 is_stmt 1 view -0
 5599              		.cfi_startproc
 5600              		@ args = 0, pretend = 0, frame = 64
 5601              		@ frame_needed = 0, uses_anonymous_args = 0
 5602              		.loc 1 1371 1 is_stmt 0 view .LVU1520
 5603 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5604              	.LCFI71:
 5605              		.cfi_def_cfa_offset 20
 5606              		.cfi_offset 4, -20
 5607              		.cfi_offset 5, -16
 5608              		.cfi_offset 6, -12
 5609              		.cfi_offset 7, -8
 5610              		.cfi_offset 14, -4
 5611 0002 91B0     		sub	sp, sp, #68
 5612              	.LCFI72:
 5613              		.cfi_def_cfa_offset 88
 5614 0004 0746     		mov	r7, r0
 5615 0006 0E46     		mov	r6, r1
 5616 0008 1446     		mov	r4, r2
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 141


 5617 000a 1D46     		mov	r5, r3
1372:flight/libraries/printf/printf.c ****   output_gadget_t gadget = function_gadget(out, extra_arg);
 5618              		.loc 1 1372 3 is_stmt 1 view .LVU1521
 5619              	.LVL515:
 5620              	.LBB248:
 5621              	.LBI248:
 384:flight/libraries/printf/printf.c **** {
 5622              		.loc 1 384 31 view .LVU1522
 5623              	.LBB249:
 386:flight/libraries/printf/printf.c ****   result.function = function;
 5624              		.loc 1 386 3 view .LVU1523
 5625              	.LBB250:
 5626              	.LBI250:
 361:flight/libraries/printf/printf.c **** {
 5627              		.loc 1 361 31 view .LVU1524
 5628              	.LBB251:
 363:flight/libraries/printf/printf.c ****   gadget.function = NULL;
 5629              		.loc 1 363 3 view .LVU1525
 364:flight/libraries/printf/printf.c ****   gadget.extra_function_arg = NULL;
 5630              		.loc 1 364 3 view .LVU1526
 364:flight/libraries/printf/printf.c ****   gadget.extra_function_arg = NULL;
 5631              		.loc 1 364 19 is_stmt 0 view .LVU1527
 5632 000c 0023     		movs	r3, #0
 5633              	.LVL516:
 364:flight/libraries/printf/printf.c ****   gadget.extra_function_arg = NULL;
 5634              		.loc 1 364 19 view .LVU1528
 5635 000e 0693     		str	r3, [sp, #24]
 365:flight/libraries/printf/printf.c ****   gadget.buffer = NULL;
 5636              		.loc 1 365 3 is_stmt 1 view .LVU1529
 365:flight/libraries/printf/printf.c ****   gadget.buffer = NULL;
 5637              		.loc 1 365 29 is_stmt 0 view .LVU1530
 5638 0010 0793     		str	r3, [sp, #28]
 366:flight/libraries/printf/printf.c ****   gadget.pos = 0;
 5639              		.loc 1 366 3 is_stmt 1 view .LVU1531
 366:flight/libraries/printf/printf.c ****   gadget.pos = 0;
 5640              		.loc 1 366 17 is_stmt 0 view .LVU1532
 5641 0012 0893     		str	r3, [sp, #32]
 367:flight/libraries/printf/printf.c ****   gadget.max_chars = 0;
 5642              		.loc 1 367 3 is_stmt 1 view .LVU1533
 367:flight/libraries/printf/printf.c ****   gadget.max_chars = 0;
 5643              		.loc 1 367 14 is_stmt 0 view .LVU1534
 5644 0014 0993     		str	r3, [sp, #36]
 368:flight/libraries/printf/printf.c ****   return gadget;
 5645              		.loc 1 368 3 is_stmt 1 view .LVU1535
 368:flight/libraries/printf/printf.c ****   return gadget;
 5646              		.loc 1 368 20 is_stmt 0 view .LVU1536
 5647 0016 0A93     		str	r3, [sp, #40]
 369:flight/libraries/printf/printf.c **** }
 5648              		.loc 1 369 3 is_stmt 1 view .LVU1537
 369:flight/libraries/printf/printf.c **** }
 5649              		.loc 1 369 10 is_stmt 0 view .LVU1538
 5650 0018 0DF1040C 		add	ip, sp, #4
 5651 001c 0DF1180E 		add	lr, sp, #24
 5652 0020 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 5653              	.LVL517:
 369:flight/libraries/printf/printf.c **** }
 5654              		.loc 1 369 10 view .LVU1539
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 142


 5655 0024 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 5656 0028 CCF80000 		str	r0, [ip]
 5657              	.LBE251:
 5658              	.LBE250:
 387:flight/libraries/printf/printf.c ****   result.extra_function_arg = extra_arg;
 5659              		.loc 1 387 3 is_stmt 1 view .LVU1540
 387:flight/libraries/printf/printf.c ****   result.extra_function_arg = extra_arg;
 5660              		.loc 1 387 19 is_stmt 0 view .LVU1541
 5661 002c 0197     		str	r7, [sp, #4]
 388:flight/libraries/printf/printf.c ****   result.max_chars = PRINTF_MAX_POSSIBLE_BUFFER_SIZE;
 5662              		.loc 1 388 3 is_stmt 1 view .LVU1542
 388:flight/libraries/printf/printf.c ****   result.max_chars = PRINTF_MAX_POSSIBLE_BUFFER_SIZE;
 5663              		.loc 1 388 29 is_stmt 0 view .LVU1543
 5664 002e 0296     		str	r6, [sp, #8]
 389:flight/libraries/printf/printf.c ****   return result;
 5665              		.loc 1 389 3 is_stmt 1 view .LVU1544
 389:flight/libraries/printf/printf.c ****   return result;
 5666              		.loc 1 389 20 is_stmt 0 view .LVU1545
 5667 0030 6FF00043 		mvn	r3, #-2147483648
 5668 0034 0593     		str	r3, [sp, #20]
 390:flight/libraries/printf/printf.c **** }
 5669              		.loc 1 390 3 is_stmt 1 view .LVU1546
 390:flight/libraries/printf/printf.c **** }
 5670              		.loc 1 390 10 is_stmt 0 view .LVU1547
 5671 0036 0DF12C0C 		add	ip, sp, #44
 5672 003a 0DF1040E 		add	lr, sp, #4
 5673 003e BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 5674 0042 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 5675 0046 6FF00043 		mvn	r3, #-2147483648
 5676 004a CCF80030 		str	r3, [ip]
 5677              	.LVL518:
 390:flight/libraries/printf/printf.c **** }
 5678              		.loc 1 390 10 view .LVU1548
 5679              	.LBE249:
 5680              	.LBE248:
1373:flight/libraries/printf/printf.c ****   return _vsnprintf(&gadget, format, arg);
 5681              		.loc 1 1373 3 is_stmt 1 view .LVU1549
 5682              		.loc 1 1373 10 is_stmt 0 view .LVU1550
 5683 004e 2A46     		mov	r2, r5
 5684 0050 2146     		mov	r1, r4
 5685 0052 0BA8     		add	r0, sp, #44
 5686 0054 FFF7FEFF 		bl	_vsnprintf
 5687              	.LVL519:
1374:flight/libraries/printf/printf.c **** }
 5688              		.loc 1 1374 1 view .LVU1551
 5689 0058 11B0     		add	sp, sp, #68
 5690              	.LCFI73:
 5691              		.cfi_def_cfa_offset 20
 5692              		@ sp needed
 5693 005a F0BD     		pop	{r4, r5, r6, r7, pc}
 5694              		.loc 1 1374 1 view .LVU1552
 5695              		.cfi_endproc
 5696              	.LFE33:
 5698              		.section	.text.printf_,"ax",%progbits
 5699              		.align	1
 5700              		.global	printf_
 5701              		.syntax unified
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 143


 5702              		.thumb
 5703              		.thumb_func
 5705              	printf_:
 5706              	.LVL520:
 5707              	.LFB34:
1375:flight/libraries/printf/printf.c **** 
1376:flight/libraries/printf/printf.c **** int printf_(const char* format, ...)
1377:flight/libraries/printf/printf.c **** {
 5708              		.loc 1 1377 1 is_stmt 1 view -0
 5709              		.cfi_startproc
 5710              		@ args = 4, pretend = 16, frame = 8
 5711              		@ frame_needed = 0, uses_anonymous_args = 1
 5712              		.loc 1 1377 1 is_stmt 0 view .LVU1554
 5713 0000 0FB4     		push	{r0, r1, r2, r3}
 5714              	.LCFI74:
 5715              		.cfi_def_cfa_offset 16
 5716              		.cfi_offset 0, -16
 5717              		.cfi_offset 1, -12
 5718              		.cfi_offset 2, -8
 5719              		.cfi_offset 3, -4
 5720 0002 00B5     		push	{lr}
 5721              	.LCFI75:
 5722              		.cfi_def_cfa_offset 20
 5723              		.cfi_offset 14, -20
 5724 0004 83B0     		sub	sp, sp, #12
 5725              	.LCFI76:
 5726              		.cfi_def_cfa_offset 32
 5727 0006 04A9     		add	r1, sp, #16
 5728 0008 51F8040B 		ldr	r0, [r1], #4
1378:flight/libraries/printf/printf.c ****   va_list args;
 5729              		.loc 1 1378 3 is_stmt 1 view .LVU1555
1379:flight/libraries/printf/printf.c ****   va_start(args, format);
 5730              		.loc 1 1379 3 view .LVU1556
 5731 000c 0191     		str	r1, [sp, #4]
1380:flight/libraries/printf/printf.c ****   const int ret = vprintf_(format, args);
 5732              		.loc 1 1380 3 view .LVU1557
 5733              		.loc 1 1380 19 is_stmt 0 view .LVU1558
 5734 000e FFF7FEFF 		bl	vprintf_
 5735              	.LVL521:
1381:flight/libraries/printf/printf.c ****   va_end(args);
 5736              		.loc 1 1381 3 is_stmt 1 view .LVU1559
1382:flight/libraries/printf/printf.c ****   return ret;
 5737              		.loc 1 1382 3 view .LVU1560
1383:flight/libraries/printf/printf.c **** }
 5738              		.loc 1 1383 1 is_stmt 0 view .LVU1561
 5739 0012 03B0     		add	sp, sp, #12
 5740              	.LCFI77:
 5741              		.cfi_def_cfa_offset 20
 5742              		@ sp needed
 5743 0014 5DF804EB 		ldr	lr, [sp], #4
 5744              	.LCFI78:
 5745              		.cfi_restore 14
 5746              		.cfi_def_cfa_offset 16
 5747 0018 04B0     		add	sp, sp, #16
 5748              	.LCFI79:
 5749              		.cfi_restore 3
 5750              		.cfi_restore 2
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 144


 5751              		.cfi_restore 1
 5752              		.cfi_restore 0
 5753              		.cfi_def_cfa_offset 0
 5754 001a 7047     		bx	lr
 5755              		.cfi_endproc
 5756              	.LFE34:
 5758              		.section	.text.sprintf_,"ax",%progbits
 5759              		.align	1
 5760              		.global	sprintf_
 5761              		.syntax unified
 5762              		.thumb
 5763              		.thumb_func
 5765              	sprintf_:
 5766              	.LVL522:
 5767              	.LFB35:
1384:flight/libraries/printf/printf.c **** 
1385:flight/libraries/printf/printf.c **** int sprintf_(char* s, const char* format, ...)
1386:flight/libraries/printf/printf.c **** {
 5768              		.loc 1 1386 1 is_stmt 1 view -0
 5769              		.cfi_startproc
 5770              		@ args = 4, pretend = 12, frame = 8
 5771              		@ frame_needed = 0, uses_anonymous_args = 1
 5772              		.loc 1 1386 1 is_stmt 0 view .LVU1563
 5773 0000 0EB4     		push	{r1, r2, r3}
 5774              	.LCFI80:
 5775              		.cfi_def_cfa_offset 12
 5776              		.cfi_offset 1, -12
 5777              		.cfi_offset 2, -8
 5778              		.cfi_offset 3, -4
 5779 0002 00B5     		push	{lr}
 5780              	.LCFI81:
 5781              		.cfi_def_cfa_offset 16
 5782              		.cfi_offset 14, -16
 5783 0004 82B0     		sub	sp, sp, #8
 5784              	.LCFI82:
 5785              		.cfi_def_cfa_offset 24
 5786 0006 03AA     		add	r2, sp, #12
 5787 0008 52F8041B 		ldr	r1, [r2], #4
1387:flight/libraries/printf/printf.c ****   va_list args;
 5788              		.loc 1 1387 3 is_stmt 1 view .LVU1564
1388:flight/libraries/printf/printf.c ****   va_start(args, format);
 5789              		.loc 1 1388 3 view .LVU1565
 5790 000c 0192     		str	r2, [sp, #4]
1389:flight/libraries/printf/printf.c ****   const int ret = vsprintf_(s, format, args);
 5791              		.loc 1 1389 3 view .LVU1566
 5792              		.loc 1 1389 19 is_stmt 0 view .LVU1567
 5793 000e FFF7FEFF 		bl	vsprintf_
 5794              	.LVL523:
1390:flight/libraries/printf/printf.c ****   va_end(args);
 5795              		.loc 1 1390 3 is_stmt 1 view .LVU1568
1391:flight/libraries/printf/printf.c ****   return ret;
 5796              		.loc 1 1391 3 view .LVU1569
1392:flight/libraries/printf/printf.c **** }
 5797              		.loc 1 1392 1 is_stmt 0 view .LVU1570
 5798 0012 02B0     		add	sp, sp, #8
 5799              	.LCFI83:
 5800              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 145


 5801              		@ sp needed
 5802 0014 5DF804EB 		ldr	lr, [sp], #4
 5803              	.LCFI84:
 5804              		.cfi_restore 14
 5805              		.cfi_def_cfa_offset 12
 5806 0018 03B0     		add	sp, sp, #12
 5807              	.LCFI85:
 5808              		.cfi_restore 3
 5809              		.cfi_restore 2
 5810              		.cfi_restore 1
 5811              		.cfi_def_cfa_offset 0
 5812 001a 7047     		bx	lr
 5813              		.cfi_endproc
 5814              	.LFE35:
 5816              		.section	.text.snprintf_,"ax",%progbits
 5817              		.align	1
 5818              		.global	snprintf_
 5819              		.syntax unified
 5820              		.thumb
 5821              		.thumb_func
 5823              	snprintf_:
 5824              	.LVL524:
 5825              	.LFB36:
1393:flight/libraries/printf/printf.c **** 
1394:flight/libraries/printf/printf.c **** int snprintf_(char* s, size_t n, const char* format, ...)
1395:flight/libraries/printf/printf.c **** {
 5826              		.loc 1 1395 1 is_stmt 1 view -0
 5827              		.cfi_startproc
 5828              		@ args = 4, pretend = 8, frame = 8
 5829              		@ frame_needed = 0, uses_anonymous_args = 1
 5830              		.loc 1 1395 1 is_stmt 0 view .LVU1572
 5831 0000 0CB4     		push	{r2, r3}
 5832              	.LCFI86:
 5833              		.cfi_def_cfa_offset 8
 5834              		.cfi_offset 2, -8
 5835              		.cfi_offset 3, -4
 5836 0002 00B5     		push	{lr}
 5837              	.LCFI87:
 5838              		.cfi_def_cfa_offset 12
 5839              		.cfi_offset 14, -12
 5840 0004 83B0     		sub	sp, sp, #12
 5841              	.LCFI88:
 5842              		.cfi_def_cfa_offset 24
 5843 0006 04AB     		add	r3, sp, #16
 5844 0008 53F8042B 		ldr	r2, [r3], #4
1396:flight/libraries/printf/printf.c ****   va_list args;
 5845              		.loc 1 1396 3 is_stmt 1 view .LVU1573
1397:flight/libraries/printf/printf.c ****   va_start(args, format);
 5846              		.loc 1 1397 3 view .LVU1574
 5847 000c 0193     		str	r3, [sp, #4]
1398:flight/libraries/printf/printf.c ****   const int ret = vsnprintf_(s, n, format, args);
 5848              		.loc 1 1398 3 view .LVU1575
 5849              		.loc 1 1398 19 is_stmt 0 view .LVU1576
 5850 000e FFF7FEFF 		bl	vsnprintf_
 5851              	.LVL525:
1399:flight/libraries/printf/printf.c ****   va_end(args);
 5852              		.loc 1 1399 3 is_stmt 1 view .LVU1577
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 146


1400:flight/libraries/printf/printf.c ****   return ret;
 5853              		.loc 1 1400 3 view .LVU1578
1401:flight/libraries/printf/printf.c **** }
 5854              		.loc 1 1401 1 is_stmt 0 view .LVU1579
 5855 0012 03B0     		add	sp, sp, #12
 5856              	.LCFI89:
 5857              		.cfi_def_cfa_offset 12
 5858              		@ sp needed
 5859 0014 5DF804EB 		ldr	lr, [sp], #4
 5860              	.LCFI90:
 5861              		.cfi_restore 14
 5862              		.cfi_def_cfa_offset 8
 5863 0018 02B0     		add	sp, sp, #8
 5864              	.LCFI91:
 5865              		.cfi_restore 3
 5866              		.cfi_restore 2
 5867              		.cfi_def_cfa_offset 0
 5868 001a 7047     		bx	lr
 5869              		.cfi_endproc
 5870              	.LFE36:
 5872              		.section	.text.fctprintf,"ax",%progbits
 5873              		.align	1
 5874              		.global	fctprintf
 5875              		.syntax unified
 5876              		.thumb
 5877              		.thumb_func
 5879              	fctprintf:
 5880              	.LVL526:
 5881              	.LFB37:
1402:flight/libraries/printf/printf.c **** 
1403:flight/libraries/printf/printf.c **** int fctprintf(void (*out)(char c, void* extra_arg), void* extra_arg, const char* format, ...)
1404:flight/libraries/printf/printf.c **** {
 5882              		.loc 1 1404 1 is_stmt 1 view -0
 5883              		.cfi_startproc
 5884              		@ args = 4, pretend = 8, frame = 8
 5885              		@ frame_needed = 0, uses_anonymous_args = 1
 5886              		.loc 1 1404 1 is_stmt 0 view .LVU1581
 5887 0000 0CB4     		push	{r2, r3}
 5888              	.LCFI92:
 5889              		.cfi_def_cfa_offset 8
 5890              		.cfi_offset 2, -8
 5891              		.cfi_offset 3, -4
 5892 0002 00B5     		push	{lr}
 5893              	.LCFI93:
 5894              		.cfi_def_cfa_offset 12
 5895              		.cfi_offset 14, -12
 5896 0004 83B0     		sub	sp, sp, #12
 5897              	.LCFI94:
 5898              		.cfi_def_cfa_offset 24
 5899 0006 04AB     		add	r3, sp, #16
 5900 0008 53F8042B 		ldr	r2, [r3], #4
1405:flight/libraries/printf/printf.c ****   va_list args;
 5901              		.loc 1 1405 3 is_stmt 1 view .LVU1582
1406:flight/libraries/printf/printf.c ****   va_start(args, format);
 5902              		.loc 1 1406 3 view .LVU1583
 5903 000c 0193     		str	r3, [sp, #4]
1407:flight/libraries/printf/printf.c ****   const int ret = vfctprintf(out, extra_arg, format, args);
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 147


 5904              		.loc 1 1407 3 view .LVU1584
 5905              		.loc 1 1407 19 is_stmt 0 view .LVU1585
 5906 000e FFF7FEFF 		bl	vfctprintf
 5907              	.LVL527:
1408:flight/libraries/printf/printf.c ****   va_end(args);
 5908              		.loc 1 1408 3 is_stmt 1 view .LVU1586
1409:flight/libraries/printf/printf.c ****   return ret;
 5909              		.loc 1 1409 3 view .LVU1587
1410:flight/libraries/printf/printf.c **** }
 5910              		.loc 1 1410 1 is_stmt 0 view .LVU1588
 5911 0012 03B0     		add	sp, sp, #12
 5912              	.LCFI95:
 5913              		.cfi_def_cfa_offset 12
 5914              		@ sp needed
 5915 0014 5DF804EB 		ldr	lr, [sp], #4
 5916              	.LCFI96:
 5917              		.cfi_restore 14
 5918              		.cfi_def_cfa_offset 8
 5919 0018 02B0     		add	sp, sp, #8
 5920              	.LCFI97:
 5921              		.cfi_restore 3
 5922              		.cfi_restore 2
 5923              		.cfi_def_cfa_offset 0
 5924 001a 7047     		bx	lr
 5925              		.cfi_endproc
 5926              	.LFE37:
 5928              		.section	.rodata.powers_of_10,"a"
 5929              		.align	3
 5930              		.set	.LANCHOR0,. + 0
 5933              	powers_of_10:
 5934 0000 00000000 		.word	0
 5935 0004 0000F03F 		.word	1072693248
 5936 0008 00000000 		.word	0
 5937 000c 00002440 		.word	1076101120
 5938 0010 00000000 		.word	0
 5939 0014 00005940 		.word	1079574528
 5940 0018 00000000 		.word	0
 5941 001c 00408F40 		.word	1083129856
 5942 0020 00000000 		.word	0
 5943 0024 0088C340 		.word	1086556160
 5944 0028 00000000 		.word	0
 5945 002c 006AF840 		.word	1090021888
 5946 0030 00000000 		.word	0
 5947 0034 80842E41 		.word	1093567616
 5948 0038 00000000 		.word	0
 5949 003c D0126341 		.word	1097011920
 5950 0040 00000000 		.word	0
 5951 0044 84D79741 		.word	1100470148
 5952 0048 00000000 		.word	0
 5953 004c 65CDCD41 		.word	1104006501
 5954 0050 00000020 		.word	536870912
 5955 0054 5FA00242 		.word	1107468383
 5956 0058 000000E8 		.word	-402653184
 5957 005c 76483742 		.word	1110919286
 5958 0060 000000A2 		.word	-1577058304
 5959 0064 941A6D42 		.word	1114446484
 5960 0068 000040E5 		.word	-448790528
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 148


 5961 006c 9C30A242 		.word	1117925532
 5962 0070 0000901E 		.word	512753664
 5963 0074 C4BCD642 		.word	1121369284
 5964 0078 00003426 		.word	640942080
 5965 007c F56B0C43 		.word	1124887541
 5966 0080 0080E037 		.word	937459712
 5967 0084 79C34143 		.word	1128383353
 5968 0088 00A0D885 		.word	-2049400832
 5969 008c 57347643 		.word	1131820119
 5970              		.text
 5971              	.Letext0:
 5972              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10.3-2021.10\\arm-none-eabi\\include
 5973              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10.3-2021.10\\arm-none-eabi\\include
 5974              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10.3-2021.10\\arm-none-eabi\\include
 5975              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10.3-2021.10\\lib\\gcc\\arm-none-eab
 5976              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\10.3-2021.10\\lib\\gcc\\arm-none-eab
 5977              		.file 7 "<built-in>"
 5978              		.file 8 "./flight/libraries/printf/printf.h"
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 149


DEFINED SYMBOLS
                            *ABS*:00000000 printf.c
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:20     .text.atou_:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:25     .text.atou_:00000000 atou_
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:99     .text.get_components:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:104    .text.get_components:00000000 get_components
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:353    .text.get_components:00000130 $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:360    .text.apply_scaling:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:365    .text.apply_scaling:00000000 apply_scaling
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:422    .text.unapply_scaling:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:427    .text.unapply_scaling:00000000 unapply_scaling
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:483    .text.update_normalization:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:488    .text.update_normalization:00000000 update_normalization
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:657    .text.get_normalized_components:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:662    .text.get_normalized_components:00000000 get_normalized_components
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:916    .text.get_normalized_components:0000015c $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:924    .text.bastardized_floor:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:929    .text.bastardized_floor:00000000 bastardized_floor
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:995    .text.log10_of_positive:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1000   .text.log10_of_positive:00000000 log10_of_positive
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1142   .text.log10_of_positive:000000b0 $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1157   .text.pow10_of_int:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1162   .text.pow10_of_int:00000000 pow10_of_int
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1359   .text.pow10_of_int:00000100 $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1376   .text.parse_flags:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1381   .text.parse_flags:00000000 parse_flags
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1409   .text.parse_flags:00000012 $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1494   .text.putchar_wrapper:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1499   .text.putchar_wrapper:00000000 putchar_wrapper
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1522   .text.out_rev_:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1527   .text.out_rev_:00000000 out_rev_
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1742   .text.print_integer_finalization:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1747   .text.print_integer_finalization:00000000 print_integer_finalization
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:2044   .text.print_integer:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:2049   .text.print_integer:00000000 print_integer
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:2230   .text.print_broken_up_decimal:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:2235   .text.print_broken_up_decimal:00000000 print_broken_up_decimal
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:2619   .text.print_decimal_number:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:2624   .text.print_decimal_number:00000000 print_decimal_number
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:2681   .text.print_exponential_number:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:2686   .text.print_exponential_number:00000000 print_exponential_number
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:3294   .text.print_exponential_number:0000027c $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:3302   .rodata.print_floating_point.str1.4:00000000 $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:3315   .text.print_floating_point:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:3320   .text.print_floating_point:00000000 print_floating_point
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:3560   .text.print_floating_point:00000140 $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:3573   .rodata._vsnprintf.str1.4:00000000 $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:3580   .text._vsnprintf:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:3585   .text._vsnprintf:00000000 _vsnprintf
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:3732   .text._vsnprintf:00000070 $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:3957   .text._vsnprintf:0000013c $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:4041   .text._vsnprintf:000001e4 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5304   .text._vsnprintf:00000698 $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5312   .text.vprintf_:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5318   .text.vprintf_:00000000 vprintf_
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5423   .text.vprintf_:00000058 $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5428   .text.vsnprintf_:00000000 $t
ARM GAS  C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s 			page 150


C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5434   .text.vsnprintf_:00000000 vsnprintf_
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5553   .text.vsprintf_:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5559   .text.vsprintf_:00000000 vsprintf_
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5589   .text.vfctprintf:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5595   .text.vfctprintf:00000000 vfctprintf
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5699   .text.printf_:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5705   .text.printf_:00000000 printf_
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5759   .text.sprintf_:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5765   .text.sprintf_:00000000 sprintf_
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5817   .text.snprintf_:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5823   .text.snprintf_:00000000 snprintf_
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5873   .text.fctprintf:00000000 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5879   .text.fctprintf:00000000 fctprintf
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5929   .rodata.powers_of_10:00000000 $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:5933   .rodata.powers_of_10:00000000 powers_of_10
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1426   .text.parse_flags:00000023 $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:1426   .text.parse_flags:00000024 $t
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:3752   .text._vsnprintf:00000083 $d
C:\Users\geoma\AppData\Local\Temp\ccCeX1PF.s:3752   .text._vsnprintf:00000084 $t

UNDEFINED SYMBOLS
__aeabi_d2lz
__aeabi_l2d
__aeabi_dsub
__aeabi_dmul
__aeabi_dcmpgt
__aeabi_dcmple
__aeabi_dcmpeq
__aeabi_dcmplt
__aeabi_ddiv
__aeabi_dcmpge
__aeabi_d2iz
__aeabi_i2d
__aeabi_dadd
putchar_
__aeabi_uldivmod
__aeabi_ldivmod
